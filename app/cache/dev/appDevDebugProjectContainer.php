<?php

use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\InactiveScopeException;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;

/**
 * appDevDebugProjectContainer.
 *
 * This class has been auto-generated
 * by the Symfony Dependency Injection Component.
 */
class appDevDebugProjectContainer extends Container
{
    private $parameters;
    private $targetDirs = array();

    /**
     * Constructor.
     */
    public function __construct()
    {
        $dir = __DIR__;
        for ($i = 1; $i <= 5; ++$i) {
            $this->targetDirs[$i] = $dir = dirname($dir);
        }
        $this->parameters = $this->getDefaultParameters();

        $this->services =
        $this->scopedServices =
        $this->scopeStacks = array();
        $this->scopes = array('request' => 'container');
        $this->scopeChildren = array('request' => array());
        $this->methodMap = array(
            'annotation_reader' => 'getAnnotationReaderService',
            'assets.context' => 'getAssets_ContextService',
            'assets.packages' => 'getAssets_PackagesService',
            'bazinga.oauth.controller.login' => 'getBazinga_Oauth_Controller_LoginService',
            'bazinga.oauth.controller.server' => 'getBazinga_Oauth_Controller_ServerService',
            'bazinga.oauth.entity_manager' => 'getBazinga_Oauth_EntityManagerService',
            'bazinga.oauth.event_listener.exception' => 'getBazinga_Oauth_EventListener_ExceptionService',
            'bazinga.oauth.event_listener.request' => 'getBazinga_Oauth_EventListener_RequestService',
            'bazinga.oauth.provider.token_provider' => 'getBazinga_Oauth_Provider_TokenProviderService',
            'bazinga.oauth.server_service' => 'getBazinga_Oauth_ServerServiceService',
            'bazinga.oauth.signature.hmac_sha1' => 'getBazinga_Oauth_Signature_HmacSha1Service',
            'bazinga.oauth.signature.plaintext' => 'getBazinga_Oauth_Signature_PlaintextService',
            'cache_clearer' => 'getCacheClearerService',
            'cache_warmer' => 'getCacheWarmerService',
            'config_cache_factory' => 'getConfigCacheFactoryService',
            'controller_name_converter' => 'getControllerNameConverterService',
            'data_collector.form' => 'getDataCollector_FormService',
            'data_collector.form.extractor' => 'getDataCollector_Form_ExtractorService',
            'data_collector.request' => 'getDataCollector_RequestService',
            'data_collector.router' => 'getDataCollector_RouterService',
            'data_collector.translation' => 'getDataCollector_TranslationService',
            'debril.file' => 'getDebril_FileService',
            'debril.formatter.atom' => 'getDebril_Formatter_AtomService',
            'debril.formatter.rss' => 'getDebril_Formatter_RssService',
            'debril.http.curl' => 'getDebril_Http_CurlService',
            'debril.http.guzzle_bridge' => 'getDebril_Http_GuzzleBridgeService',
            'debril.parser.atom' => 'getDebril_Parser_AtomService',
            'debril.parser.factory' => 'getDebril_Parser_FactoryService',
            'debril.parser.rdf' => 'getDebril_Parser_RdfService',
            'debril.parser.rss' => 'getDebril_Parser_RssService',
            'debril.parser.xml' => 'getDebril_Parser_XmlService',
            'debril.provider.default' => 'getDebril_Provider_DefaultService',
            'debril.provider.mock' => 'getDebril_Provider_MockService',
            'debril.reader' => 'getDebril_ReaderService',
            'debug.controller_resolver' => 'getDebug_ControllerResolverService',
            'debug.debug_handlers_listener' => 'getDebug_DebugHandlersListenerService',
            'debug.event_dispatcher' => 'getDebug_EventDispatcherService',
            'debug.stopwatch' => 'getDebug_StopwatchService',
            'debug.templating.engine.php' => 'getDebug_Templating_Engine_PhpService',
            'doctrine' => 'getDoctrineService',
            'doctrine.dbal.connection_factory' => 'getDoctrine_Dbal_ConnectionFactoryService',
            'doctrine.dbal.default_connection' => 'getDoctrine_Dbal_DefaultConnectionService',
            'doctrine.dbal.logger.profiling.default' => 'getDoctrine_Dbal_Logger_Profiling_DefaultService',
            'doctrine.orm.default_entity_listener_resolver' => 'getDoctrine_Orm_DefaultEntityListenerResolverService',
            'doctrine.orm.default_entity_manager' => 'getDoctrine_Orm_DefaultEntityManagerService',
            'doctrine.orm.default_listeners.attach_entity_listeners' => 'getDoctrine_Orm_DefaultListeners_AttachEntityListenersService',
            'doctrine.orm.default_manager_configurator' => 'getDoctrine_Orm_DefaultManagerConfiguratorService',
            'doctrine.orm.validator.unique' => 'getDoctrine_Orm_Validator_UniqueService',
            'doctrine.orm.validator_initializer' => 'getDoctrine_Orm_ValidatorInitializerService',
            'doctrine_cache.providers.doctrine.orm.default_metadata_cache' => 'getDoctrineCache_Providers_Doctrine_Orm_DefaultMetadataCacheService',
            'doctrine_cache.providers.doctrine.orm.default_query_cache' => 'getDoctrineCache_Providers_Doctrine_Orm_DefaultQueryCacheService',
            'doctrine_cache.providers.doctrine.orm.default_result_cache' => 'getDoctrineCache_Providers_Doctrine_Orm_DefaultResultCacheService',
            'file_locator' => 'getFileLocatorService',
            'filesystem' => 'getFilesystemService',
            'form.csrf_provider' => 'getForm_CsrfProviderService',
            'form.factory' => 'getForm_FactoryService',
            'form.registry' => 'getForm_RegistryService',
            'form.resolved_type_factory' => 'getForm_ResolvedTypeFactoryService',
            'form.server_params' => 'getForm_ServerParamsService',
            'form.type.birthday' => 'getForm_Type_BirthdayService',
            'form.type.button' => 'getForm_Type_ButtonService',
            'form.type.checkbox' => 'getForm_Type_CheckboxService',
            'form.type.choice' => 'getForm_Type_ChoiceService',
            'form.type.collection' => 'getForm_Type_CollectionService',
            'form.type.country' => 'getForm_Type_CountryService',
            'form.type.currency' => 'getForm_Type_CurrencyService',
            'form.type.date' => 'getForm_Type_DateService',
            'form.type.datetime' => 'getForm_Type_DatetimeService',
            'form.type.email' => 'getForm_Type_EmailService',
            'form.type.entity' => 'getForm_Type_EntityService',
            'form.type.file' => 'getForm_Type_FileService',
            'form.type.form' => 'getForm_Type_FormService',
            'form.type.hidden' => 'getForm_Type_HiddenService',
            'form.type.integer' => 'getForm_Type_IntegerService',
            'form.type.language' => 'getForm_Type_LanguageService',
            'form.type.locale' => 'getForm_Type_LocaleService',
            'form.type.money' => 'getForm_Type_MoneyService',
            'form.type.number' => 'getForm_Type_NumberService',
            'form.type.password' => 'getForm_Type_PasswordService',
            'form.type.percent' => 'getForm_Type_PercentService',
            'form.type.radio' => 'getForm_Type_RadioService',
            'form.type.range' => 'getForm_Type_RangeService',
            'form.type.repeated' => 'getForm_Type_RepeatedService',
            'form.type.reset' => 'getForm_Type_ResetService',
            'form.type.search' => 'getForm_Type_SearchService',
            'form.type.submit' => 'getForm_Type_SubmitService',
            'form.type.text' => 'getForm_Type_TextService',
            'form.type.textarea' => 'getForm_Type_TextareaService',
            'form.type.time' => 'getForm_Type_TimeService',
            'form.type.timezone' => 'getForm_Type_TimezoneService',
            'form.type.url' => 'getForm_Type_UrlService',
            'form.type_extension.csrf' => 'getForm_TypeExtension_CsrfService',
            'form.type_extension.form.data_collector' => 'getForm_TypeExtension_Form_DataCollectorService',
            'form.type_extension.form.http_foundation' => 'getForm_TypeExtension_Form_HttpFoundationService',
            'form.type_extension.form.validator' => 'getForm_TypeExtension_Form_ValidatorService',
            'form.type_extension.repeated.validator' => 'getForm_TypeExtension_Repeated_ValidatorService',
            'form.type_extension.submit.validator' => 'getForm_TypeExtension_Submit_ValidatorService',
            'form.type_extension.upload.validator' => 'getForm_TypeExtension_Upload_ValidatorService',
            'form.type_guesser.doctrine' => 'getForm_TypeGuesser_DoctrineService',
            'form.type_guesser.validator' => 'getForm_TypeGuesser_ValidatorService',
            'fos_oauth_server.access_token_manager.default' => 'getFosOauthServer_AccessTokenManager_DefaultService',
            'fos_oauth_server.auth_code_manager.default' => 'getFosOauthServer_AuthCodeManager_DefaultService',
            'fos_oauth_server.authorize.form' => 'getFosOauthServer_Authorize_FormService',
            'fos_oauth_server.authorize.form.handler.default' => 'getFosOauthServer_Authorize_Form_Handler_DefaultService',
            'fos_oauth_server.authorize.form.type' => 'getFosOauthServer_Authorize_Form_TypeService',
            'fos_oauth_server.client_manager.default' => 'getFosOauthServer_ClientManager_DefaultService',
            'fos_oauth_server.controller.token' => 'getFosOauthServer_Controller_TokenService',
            'fos_oauth_server.entity_manager' => 'getFosOauthServer_EntityManagerService',
            'fos_oauth_server.refresh_token_manager.default' => 'getFosOauthServer_RefreshTokenManager_DefaultService',
            'fos_oauth_server.server' => 'getFosOauthServer_ServerService',
            'fos_oauth_server.storage' => 'getFosOauthServer_StorageService',
            'fos_rest.body_listener' => 'getFosRest_BodyListenerService',
            'fos_rest.decoder.json' => 'getFosRest_Decoder_JsonService',
            'fos_rest.decoder.jsontoform' => 'getFosRest_Decoder_JsontoformService',
            'fos_rest.decoder.xml' => 'getFosRest_Decoder_XmlService',
            'fos_rest.decoder_provider' => 'getFosRest_DecoderProviderService',
            'fos_rest.exception_format_negotiator' => 'getFosRest_ExceptionFormatNegotiatorService',
            'fos_rest.form.extension.csrf_disable' => 'getFosRest_Form_Extension_CsrfDisableService',
            'fos_rest.format_negotiator' => 'getFosRest_FormatNegotiatorService',
            'fos_rest.inflector.doctrine' => 'getFosRest_Inflector_DoctrineService',
            'fos_rest.normalizer.camel_keys' => 'getFosRest_Normalizer_CamelKeysService',
            'fos_rest.normalizer.camel_keys_with_leading_underscore' => 'getFosRest_Normalizer_CamelKeysWithLeadingUnderscoreService',
            'fos_rest.request.param_fetcher' => 'getFosRest_Request_ParamFetcherService',
            'fos_rest.request.param_fetcher.reader' => 'getFosRest_Request_ParamFetcher_ReaderService',
            'fos_rest.routing.loader.controller' => 'getFosRest_Routing_Loader_ControllerService',
            'fos_rest.routing.loader.processor' => 'getFosRest_Routing_Loader_ProcessorService',
            'fos_rest.routing.loader.reader.action' => 'getFosRest_Routing_Loader_Reader_ActionService',
            'fos_rest.routing.loader.reader.controller' => 'getFosRest_Routing_Loader_Reader_ControllerService',
            'fos_rest.routing.loader.xml_collection' => 'getFosRest_Routing_Loader_XmlCollectionService',
            'fos_rest.routing.loader.yaml_collection' => 'getFosRest_Routing_Loader_YamlCollectionService',
            'fos_rest.serializer' => 'getFosRest_SerializerService',
            'fos_rest.serializer.exception_wrapper_normalizer' => 'getFosRest_Serializer_ExceptionWrapperNormalizerService',
            'fos_rest.serializer.exception_wrapper_serialize_handler' => 'getFosRest_Serializer_ExceptionWrapperSerializeHandlerService',
            'fos_rest.view.exception_wrapper_handler' => 'getFosRest_View_ExceptionWrapperHandlerService',
            'fos_rest.view_handler' => 'getFosRest_ViewHandlerService',
            'fos_rest.violation_formatter' => 'getFosRest_ViolationFormatterService',
            'fragment.handler' => 'getFragment_HandlerService',
            'fragment.listener' => 'getFragment_ListenerService',
            'fragment.renderer.esi' => 'getFragment_Renderer_EsiService',
            'fragment.renderer.hinclude' => 'getFragment_Renderer_HincludeService',
            'fragment.renderer.inline' => 'getFragment_Renderer_InlineService',
            'fragment.renderer.ssi' => 'getFragment_Renderer_SsiService',
            'http_kernel' => 'getHttpKernelService',
            'jms_serializer' => 'getJmsSerializerService',
            'jms_serializer.array_collection_handler' => 'getJmsSerializer_ArrayCollectionHandlerService',
            'jms_serializer.constraint_violation_handler' => 'getJmsSerializer_ConstraintViolationHandlerService',
            'jms_serializer.datetime_handler' => 'getJmsSerializer_DatetimeHandlerService',
            'jms_serializer.doctrine_proxy_subscriber' => 'getJmsSerializer_DoctrineProxySubscriberService',
            'jms_serializer.form_error_handler' => 'getJmsSerializer_FormErrorHandlerService',
            'jms_serializer.handler_registry' => 'getJmsSerializer_HandlerRegistryService',
            'jms_serializer.json_deserialization_visitor' => 'getJmsSerializer_JsonDeserializationVisitorService',
            'jms_serializer.json_serialization_visitor' => 'getJmsSerializer_JsonSerializationVisitorService',
            'jms_serializer.metadata_driver' => 'getJmsSerializer_MetadataDriverService',
            'jms_serializer.naming_strategy' => 'getJmsSerializer_NamingStrategyService',
            'jms_serializer.object_constructor' => 'getJmsSerializer_ObjectConstructorService',
            'jms_serializer.php_collection_handler' => 'getJmsSerializer_PhpCollectionHandlerService',
            'jms_serializer.stopwatch_subscriber' => 'getJmsSerializer_StopwatchSubscriberService',
            'jms_serializer.templating.helper.serializer' => 'getJmsSerializer_Templating_Helper_SerializerService',
            'jms_serializer.unserialize_object_constructor' => 'getJmsSerializer_UnserializeObjectConstructorService',
            'jms_serializer.xml_deserialization_visitor' => 'getJmsSerializer_XmlDeserializationVisitorService',
            'jms_serializer.xml_serialization_visitor' => 'getJmsSerializer_XmlSerializationVisitorService',
            'jms_serializer.yaml_serialization_visitor' => 'getJmsSerializer_YamlSerializationVisitorService',
            'kernel' => 'getKernelService',
            'kernel.class_cache.cache_warmer' => 'getKernel_ClassCache_CacheWarmerService',
            'knp_menu.factory' => 'getKnpMenu_FactoryService',
            'knp_menu.helper' => 'getKnpMenu_HelperService',
            'knp_menu.listener.voters' => 'getKnpMenu_Listener_VotersService',
            'knp_menu.manipulator' => 'getKnpMenu_ManipulatorService',
            'knp_menu.matcher' => 'getKnpMenu_MatcherService',
            'knp_menu.menu_provider' => 'getKnpMenu_MenuProviderService',
            'knp_menu.renderer.list' => 'getKnpMenu_Renderer_ListService',
            'knp_menu.renderer_provider' => 'getKnpMenu_RendererProviderService',
            'knp_menu.templating.helper' => 'getKnpMenu_Templating_HelperService',
            'knp_menu.voter.router' => 'getKnpMenu_Voter_RouterService',
            'lightsaml.container.build' => 'getLightsaml_Container_BuildService',
            'lightsaml.credential.credential_store' => 'getLightsaml_Credential_CredentialStoreService',
            'lightsaml.credential.credential_store_factory' => 'getLightsaml_Credential_CredentialStoreFactoryService',
            'lightsaml.own.credential_store' => 'getLightsaml_Own_CredentialStoreService',
            'lightsaml.own.entity_descriptor_provider' => 'getLightsaml_Own_EntityDescriptorProviderService',
            'lightsaml.party.idp_entity_descriptor_store' => 'getLightsaml_Party_IdpEntityDescriptorStoreService',
            'lightsaml.party.sp_entity_descriptor_store' => 'getLightsaml_Party_SpEntityDescriptorStoreService',
            'lightsaml.party.trust_options_store' => 'getLightsaml_Party_TrustOptionsStoreService',
            'lightsaml.provider.attribute_value' => 'getLightsaml_Provider_AttributeValueService',
            'lightsaml.provider.name_id' => 'getLightsaml_Provider_NameIdService',
            'lightsaml.provider.session_info' => 'getLightsaml_Provider_SessionInfoService',
            'lightsaml.service.assertion_time_validator' => 'getLightsaml_Service_AssertionTimeValidatorService',
            'lightsaml.service.assertion_validator' => 'getLightsaml_Service_AssertionValidatorService',
            'lightsaml.service.binding_factory' => 'getLightsaml_Service_BindingFactoryService',
            'lightsaml.service.credential_resolver' => 'getLightsaml_Service_CredentialResolverService',
            'lightsaml.service.credential_resolver_factory' => 'getLightsaml_Service_CredentialResolverFactoryService',
            'lightsaml.service.endpoint_resolver' => 'getLightsaml_Service_EndpointResolverService',
            'lightsaml.service.endpoint_resolver.binding' => 'getLightsaml_Service_EndpointResolver_BindingService',
            'lightsaml.service.endpoint_resolver.descriptor_type' => 'getLightsaml_Service_EndpointResolver_DescriptorTypeService',
            'lightsaml.service.endpoint_resolver.index' => 'getLightsaml_Service_EndpointResolver_IndexService',
            'lightsaml.service.endpoint_resolver.location' => 'getLightsaml_Service_EndpointResolver_LocationService',
            'lightsaml.service.endpoint_resolver.service_type' => 'getLightsaml_Service_EndpointResolver_ServiceTypeService',
            'lightsaml.service.name_id_validator' => 'getLightsaml_Service_NameIdValidatorService',
            'lightsaml.service.session_processor' => 'getLightsaml_Service_SessionProcessorService',
            'lightsaml.service.signature_resolver' => 'getLightsaml_Service_SignatureResolverService',
            'lightsaml.service.signature_validator' => 'getLightsaml_Service_SignatureValidatorService',
            'lightsaml.service.statement_validator' => 'getLightsaml_Service_StatementValidatorService',
            'lightsaml.service.subject_validator' => 'getLightsaml_Service_SubjectValidatorService',
            'lightsaml.store.request' => 'getLightsaml_Store_RequestService',
            'lightsaml.store.sso_state' => 'getLightsaml_Store_SsoStateService',
            'lightsaml.system.event_dispatcher' => 'getLightsaml_System_EventDispatcherService',
            'lightsaml.system.time_provider' => 'getLightsaml_System_TimeProviderService',
            'lightsaml_sp.token_factory' => 'getLightsamlSp_TokenFactoryService',
            'lightsaml_sp.username_mapper.simple' => 'getLightsamlSp_UsernameMapper_SimpleService',
            'ligthsaml.profile.acs' => 'getLigthsaml_Profile_AcsService',
            'ligthsaml.profile.login_factory' => 'getLigthsaml_Profile_LoginFactoryService',
            'ligthsaml.profile.metadata' => 'getLigthsaml_Profile_MetadataService',
            'locale_listener' => 'getLocaleListenerService',
            'logger' => 'getLoggerService',
            'mautic.api.configbundle.subscriber' => 'getMautic_Api_Configbundle_SubscriberService',
            'mautic.api.model.client' => 'getMautic_Api_Model_ClientService',
            'mautic.api.oauth.event_listener' => 'getMautic_Api_Oauth_EventListenerService',
            'mautic.api.oauth1.nonce_provider' => 'getMautic_Api_Oauth1_NonceProviderService',
            'mautic.api.search.subscriber' => 'getMautic_Api_Search_SubscriberService',
            'mautic.api.subscriber' => 'getMautic_Api_SubscriberService',
            'mautic.asset.builder.subscriber' => 'getMautic_Asset_Builder_SubscriberService',
            'mautic.asset.campaignbundle.subscriber' => 'getMautic_Asset_Campaignbundle_SubscriberService',
            'mautic.asset.configbundle.subscriber' => 'getMautic_Asset_Configbundle_SubscriberService',
            'mautic.asset.dashboard.subscriber' => 'getMautic_Asset_Dashboard_SubscriberService',
            'mautic.asset.emailbundle.subscriber' => 'getMautic_Asset_Emailbundle_SubscriberService',
            'mautic.asset.formbundle.subscriber' => 'getMautic_Asset_Formbundle_SubscriberService',
            'mautic.asset.helper.token' => 'getMautic_Asset_Helper_TokenService',
            'mautic.asset.leadbundle.subscriber' => 'getMautic_Asset_Leadbundle_SubscriberService',
            'mautic.asset.model.asset' => 'getMautic_Asset_Model_AssetService',
            'mautic.asset.pagebundle.subscriber' => 'getMautic_Asset_Pagebundle_SubscriberService',
            'mautic.asset.pointbundle.subscriber' => 'getMautic_Asset_Pointbundle_SubscriberService',
            'mautic.asset.reportbundle.subscriber' => 'getMautic_Asset_Reportbundle_SubscriberService',
            'mautic.asset.search.subscriber' => 'getMautic_Asset_Search_SubscriberService',
            'mautic.asset.stats.subscriber' => 'getMautic_Asset_Stats_SubscriberService',
            'mautic.asset.subscriber' => 'getMautic_Asset_SubscriberService',
            'mautic.asset.upload.error.handler' => 'getMautic_Asset_Upload_Error_HandlerService',
            'mautic.calendar.model.calendar' => 'getMautic_Calendar_Model_CalendarService',
            'mautic.campaign.calendarbundle.subscriber' => 'getMautic_Campaign_Calendarbundle_SubscriberService',
            'mautic.campaign.dashboard.subscriber' => 'getMautic_Campaign_Dashboard_SubscriberService',
            'mautic.campaign.leadbundle.subscriber' => 'getMautic_Campaign_Leadbundle_SubscriberService',
            'mautic.campaign.model.campaign' => 'getMautic_Campaign_Model_CampaignService',
            'mautic.campaign.model.event' => 'getMautic_Campaign_Model_EventService',
            'mautic.campaign.model.event_log' => 'getMautic_Campaign_Model_EventLogService',
            'mautic.campaign.pointbundle.subscriber' => 'getMautic_Campaign_Pointbundle_SubscriberService',
            'mautic.campaign.report.subscriber' => 'getMautic_Campaign_Report_SubscriberService',
            'mautic.campaign.search.subscriber' => 'getMautic_Campaign_Search_SubscriberService',
            'mautic.campaign.stats.subscriber' => 'getMautic_Campaign_Stats_SubscriberService',
            'mautic.campaign.subscriber' => 'getMautic_Campaign_SubscriberService',
            'mautic.campaign.type.action.addremovelead' => 'getMautic_Campaign_Type_Action_AddremoveleadService',
            'mautic.campaign.type.campaignlist' => 'getMautic_Campaign_Type_CampaignlistService',
            'mautic.campaign.type.canvassettings' => 'getMautic_Campaign_Type_CanvassettingsService',
            'mautic.campaign.type.form' => 'getMautic_Campaign_Type_FormService',
            'mautic.campaign.type.leadsource' => 'getMautic_Campaign_Type_LeadsourceService',
            'mautic.campaign.type.trigger.leadchange' => 'getMautic_Campaign_Type_Trigger_LeadchangeService',
            'mautic.campaignconfigbundle.subscriber' => 'getMautic_Campaignconfigbundle_SubscriberService',
            'mautic.campaignrange.type.action' => 'getMautic_Campaignrange_Type_ActionService',
            'mautic.category.model.category' => 'getMautic_Category_Model_CategoryService',
            'mautic.category.subscriber' => 'getMautic_Category_SubscriberService',
            'mautic.channel.campaignbundle.subscriber' => 'getMautic_Channel_Campaignbundle_SubscriberService',
            'mautic.channel.channelbundle.subscriber' => 'getMautic_Channel_Channelbundle_SubscriberService',
            'mautic.channel.helper.channel_list' => 'getMautic_Channel_Helper_ChannelListService',
            'mautic.channel.model.message' => 'getMautic_Channel_Model_MessageService',
            'mautic.channel.model.queue' => 'getMautic_Channel_Model_QueueService',
            'mautic.citrix.campaignbundle.subscriber' => 'getMautic_Citrix_Campaignbundle_SubscriberService',
            'mautic.citrix.emailbundle.subscriber' => 'getMautic_Citrix_Emailbundle_SubscriberService',
            'mautic.citrix.formbundle.subscriber' => 'getMautic_Citrix_Formbundle_SubscriberService',
            'mautic.citrix.leadbundle.subscriber' => 'getMautic_Citrix_Leadbundle_SubscriberService',
            'mautic.citrix.model.citrix' => 'getMautic_Citrix_Model_CitrixService',
            'mautic.cloudstorage.remoteassetbrowse.subscriber' => 'getMautic_Cloudstorage_Remoteassetbrowse_SubscriberService',
            'mautic.company.campaign.action.type.form' => 'getMautic_Company_Campaign_Action_Type_FormService',
            'mautic.company.list.type.form' => 'getMautic_Company_List_Type_FormService',
            'mautic.company.merge.type.form' => 'getMautic_Company_Merge_Type_FormService',
            'mautic.company.type.form' => 'getMautic_Company_Type_FormService',
            'mautic.config.model.config' => 'getMautic_Config_Model_ConfigService',
            'mautic.config.model.sysinfo' => 'getMautic_Config_Model_SysinfoService',
            'mautic.config.subscriber' => 'getMautic_Config_SubscriberService',
            'mautic.configurator' => 'getMautic_ConfiguratorService',
            'mautic.core.assets.subscriber' => 'getMautic_Core_Assets_SubscriberService',
            'mautic.core.configbundle.subscriber' => 'getMautic_Core_Configbundle_SubscriberService',
            'mautic.core.dashboard.subscriber' => 'getMautic_Core_Dashboard_SubscriberService',
            'mautic.core.environment.subscriber' => 'getMautic_Core_Environment_SubscriberService',
            'mautic.core.errorhandler.subscriber' => 'getMautic_Core_Errorhandler_SubscriberService',
            'mautic.core.js.subscriber' => 'getMautic_Core_Js_SubscriberService',
            'mautic.core.maintenance.subscriber' => 'getMautic_Core_Maintenance_SubscriberService',
            'mautic.core.model.auditlog' => 'getMautic_Core_Model_AuditlogService',
            'mautic.core.model.form' => 'getMautic_Core_Model_FormService',
            'mautic.core.model.messagequeue' => 'getMautic_Core_Model_MessagequeueService',
            'mautic.core.model.notification' => 'getMautic_Core_Model_NotificationService',
            'mautic.core.stats.subscriber' => 'getMautic_Core_Stats_SubscriberService',
            'mautic.core.subscriber' => 'getMautic_Core_SubscriberService',
            'mautic.dashboard.form.filter' => 'getMautic_Dashboard_Form_FilterService',
            'mautic.dashboard.form.type.widget' => 'getMautic_Dashboard_Form_Type_WidgetService',
            'mautic.dashboard.form.uplload' => 'getMautic_Dashboard_Form_UplloadService',
            'mautic.dashboard.model.dashboard' => 'getMautic_Dashboard_Model_DashboardService',
            'mautic.dynamiccontent.campaignbundle.subscriber' => 'getMautic_Dynamiccontent_Campaignbundle_SubscriberService',
            'mautic.dynamiccontent.js.subscriber' => 'getMautic_Dynamiccontent_Js_SubscriberService',
            'mautic.dynamiccontent.model.dynamiccontent' => 'getMautic_Dynamiccontent_Model_DynamiccontentService',
            'mautic.dynamiccontent.stats.subscriber' => 'getMautic_Dynamiccontent_Stats_SubscriberService',
            'mautic.dynamiccontent.subscriber' => 'getMautic_Dynamiccontent_SubscriberService',
            'mautic.dynamiccontent.subscriber.channel' => 'getMautic_Dynamiccontent_Subscriber_ChannelService',
            'mautic.email.broadcast.subscriber' => 'getMautic_Email_Broadcast_SubscriberService',
            'mautic.email.calendarbundle.subscriber' => 'getMautic_Email_Calendarbundle_SubscriberService',
            'mautic.email.campaignbundle.subscriber' => 'getMautic_Email_Campaignbundle_SubscriberService',
            'mautic.email.channel.subscriber' => 'getMautic_Email_Channel_SubscriberService',
            'mautic.email.configbundle.subscriber' => 'getMautic_Email_Configbundle_SubscriberService',
            'mautic.email.dashboard.subscriber' => 'getMautic_Email_Dashboard_SubscriberService',
            'mautic.email.formbundle.subscriber' => 'getMautic_Email_Formbundle_SubscriberService',
            'mautic.email.leadbundle.subscriber' => 'getMautic_Email_Leadbundle_SubscriberService',
            'mautic.email.messagequeue.subscriber' => 'getMautic_Email_Messagequeue_SubscriberService',
            'mautic.email.model.email' => 'getMautic_Email_Model_EmailService',
            'mautic.email.pagebundle.subscriber' => 'getMautic_Email_Pagebundle_SubscriberService',
            'mautic.email.pointbundle.subscriber' => 'getMautic_Email_Pointbundle_SubscriberService',
            'mautic.email.reportbundle.subscriber' => 'getMautic_Email_Reportbundle_SubscriberService',
            'mautic.email.search.subscriber' => 'getMautic_Email_Search_SubscriberService',
            'mautic.email.stats.subscriber' => 'getMautic_Email_Stats_SubscriberService',
            'mautic.email.subscriber' => 'getMautic_Email_SubscriberService',
            'mautic.email.type.batch_send' => 'getMautic_Email_Type_BatchSendService',
            'mautic.email.type.email_abtest_settings' => 'getMautic_Email_Type_EmailAbtestSettingsService',
            'mautic.email.webhook.subscriber' => 'getMautic_Email_Webhook_SubscriberService',
            'mautic.emailbuilder.subscriber' => 'getMautic_Emailbuilder_SubscriberService',
            'mautic.emailtoken.subscriber' => 'getMautic_Emailtoken_SubscriberService',
            'mautic.exception.listener' => 'getMautic_Exception_ListenerService',
            'mautic.factory' => 'getMautic_FactoryService',
            'mautic.focus.form.type.color' => 'getMautic_Focus_Form_Type_ColorService',
            'mautic.focus.form.type.content' => 'getMautic_Focus_Form_Type_ContentService',
            'mautic.focus.form.type.entity_properties' => 'getMautic_Focus_Form_Type_EntityPropertiesService',
            'mautic.focus.form.type.focus' => 'getMautic_Focus_Form_Type_FocusService',
            'mautic.focus.form.type.properties' => 'getMautic_Focus_Form_Type_PropertiesService',
            'mautic.focus.helper.token' => 'getMautic_Focus_Helper_TokenService',
            'mautic.focus.model.focus' => 'getMautic_Focus_Model_FocusService',
            'mautic.focus.stats.subscriber' => 'getMautic_Focus_Stats_SubscriberService',
            'mautic.focus.subscriber.focus' => 'getMautic_Focus_Subscriber_FocusService',
            'mautic.focus.subscriber.form_bundle' => 'getMautic_Focus_Subscriber_FormBundleService',
            'mautic.focus.subscriber.page_bundle' => 'getMautic_Focus_Subscriber_PageBundleService',
            'mautic.focus.subscriber.stat' => 'getMautic_Focus_Subscriber_StatService',
            'mautic.form.calendarbundle.subscriber' => 'getMautic_Form_Calendarbundle_SubscriberService',
            'mautic.form.campaignbundle.subscriber' => 'getMautic_Form_Campaignbundle_SubscriberService',
            'mautic.form.dashboard.subscriber' => 'getMautic_Form_Dashboard_SubscriberService',
            'mautic.form.emailbundle.subscriber' => 'getMautic_Form_Emailbundle_SubscriberService',
            'mautic.form.extension.custom' => 'getMautic_Form_Extension_CustomService',
            'mautic.form.helper.token' => 'getMautic_Form_Helper_TokenService',
            'mautic.form.leadbundle.subscriber' => 'getMautic_Form_Leadbundle_SubscriberService',
            'mautic.form.model.action' => 'getMautic_Form_Model_ActionService',
            'mautic.form.model.field' => 'getMautic_Form_Model_FieldService',
            'mautic.form.model.form' => 'getMautic_Form_Model_FormService',
            'mautic.form.model.submission' => 'getMautic_Form_Model_SubmissionService',
            'mautic.form.pagebundle.subscriber' => 'getMautic_Form_Pagebundle_SubscriberService',
            'mautic.form.pointbundle.subscriber' => 'getMautic_Form_Pointbundle_SubscriberService',
            'mautic.form.reportbundle.subscriber' => 'getMautic_Form_Reportbundle_SubscriberService',
            'mautic.form.search.subscriber' => 'getMautic_Form_Search_SubscriberService',
            'mautic.form.stats.subscriber' => 'getMautic_Form_Stats_SubscriberService',
            'mautic.form.subscriber' => 'getMautic_Form_SubscriberService',
            'mautic.form.type.action' => 'getMautic_Form_Type_ActionService',
            'mautic.form.type.apiclients' => 'getMautic_Form_Type_ApiclientsService',
            'mautic.form.type.apiconfig' => 'getMautic_Form_Type_ApiconfigService',
            'mautic.form.type.asset' => 'getMautic_Form_Type_AssetService',
            'mautic.form.type.asset_dashboard_downloads_in_time_widget' => 'getMautic_Form_Type_AssetDashboardDownloadsInTimeWidgetService',
            'mautic.form.type.assetconfig' => 'getMautic_Form_Type_AssetconfigService',
            'mautic.form.type.assetlist' => 'getMautic_Form_Type_AssetlistService',
            'mautic.form.type.builder.section' => 'getMautic_Form_Type_Builder_SectionService',
            'mautic.form.type.button_group' => 'getMautic_Form_Type_ButtonGroupService',
            'mautic.form.type.campaignconfig' => 'getMautic_Form_Type_CampaignconfigService',
            'mautic.form.type.campaignevent_assetdownload' => 'getMautic_Form_Type_CampaigneventAssetdownloadService',
            'mautic.form.type.campaignevent_form_field_value' => 'getMautic_Form_Type_CampaigneventFormFieldValueService',
            'mautic.form.type.campaignevent_formsubmit' => 'getMautic_Form_Type_CampaigneventFormsubmitService',
            'mautic.form.type.campaignevent_lead_field_value' => 'getMautic_Form_Type_CampaigneventLeadFieldValueService',
            'mautic.form.type.category' => 'getMautic_Form_Type_CategoryService',
            'mautic.form.type.category_bundles_form' => 'getMautic_Form_Type_CategoryBundlesFormService',
            'mautic.form.type.category_form' => 'getMautic_Form_Type_CategoryFormService',
            'mautic.form.type.citrix.campaignaction' => 'getMautic_Form_Type_Citrix_CampaignactionService',
            'mautic.form.type.citrix.campaignevent' => 'getMautic_Form_Type_Citrix_CampaigneventService',
            'mautic.form.type.citrix.submitaction' => 'getMautic_Form_Type_Citrix_SubmitactionService',
            'mautic.form.type.clearbit_batch_lookup' => 'getMautic_Form_Type_ClearbitBatchLookupService',
            'mautic.form.type.clearbit_lookup' => 'getMautic_Form_Type_ClearbitLookupService',
            'mautic.form.type.cloudstorage.openstack' => 'getMautic_Form_Type_Cloudstorage_OpenstackService',
            'mautic.form.type.cloudstorage.rackspace' => 'getMautic_Form_Type_Cloudstorage_RackspaceService',
            'mautic.form.type.company_change_score' => 'getMautic_Form_Type_CompanyChangeScoreService',
            'mautic.form.type.config' => 'getMautic_Form_Type_ConfigService',
            'mautic.form.type.coreconfig' => 'getMautic_Form_Type_CoreconfigService',
            'mautic.form.type.coreconfig.iplookup_download_data_store_button' => 'getMautic_Form_Type_Coreconfig_IplookupDownloadDataStoreButtonService',
            'mautic.form.type.coreconfig_monitored_email' => 'getMautic_Form_Type_CoreconfigMonitoredEmailService',
            'mautic.form.type.coreconfig_monitored_mailboxes' => 'getMautic_Form_Type_CoreconfigMonitoredMailboxesService',
            'mautic.form.type.daterange' => 'getMautic_Form_Type_DaterangeService',
            'mautic.form.type.dwc' => 'getMautic_Form_Type_DwcService',
            'mautic.form.type.dwc_list' => 'getMautic_Form_Type_DwcListService',
            'mautic.form.type.dwcdecision_list' => 'getMautic_Form_Type_DwcdecisionListService',
            'mautic.form.type.dwcsend_list' => 'getMautic_Form_Type_DwcsendListService',
            'mautic.form.type.dynamic_content_filter' => 'getMautic_Form_Type_DynamicContentFilterService',
            'mautic.form.type.dynamic_content_filter_entry' => 'getMautic_Form_Type_DynamicContentFilterEntryService',
            'mautic.form.type.dynamic_content_filter_entry_filters' => 'getMautic_Form_Type_DynamicContentFilterEntryFiltersService',
            'mautic.form.type.dynamiclist' => 'getMautic_Form_Type_DynamiclistService',
            'mautic.form.type.email' => 'getMautic_Form_Type_EmailService',
            'mautic.form.type.email_dashboard_emails_in_time_widget' => 'getMautic_Form_Type_EmailDashboardEmailsInTimeWidgetService',
            'mautic.form.type.email_list' => 'getMautic_Form_Type_EmailListService',
            'mautic.form.type.emailconfig' => 'getMautic_Form_Type_EmailconfigService',
            'mautic.form.type.emailmarketing.constantcontact' => 'getMautic_Form_Type_Emailmarketing_ConstantcontactService',
            'mautic.form.type.emailmarketing.icontact' => 'getMautic_Form_Type_Emailmarketing_IcontactService',
            'mautic.form.type.emailmarketing.mailchimp' => 'getMautic_Form_Type_Emailmarketing_MailchimpService',
            'mautic.form.type.emailopen_list' => 'getMautic_Form_Type_EmailopenListService',
            'mautic.form.type.emailsend_list' => 'getMautic_Form_Type_EmailsendListService',
            'mautic.form.type.emailvariant' => 'getMautic_Form_Type_EmailvariantService',
            'mautic.form.type.entity_lookup' => 'getMautic_Form_Type_EntityLookupService',
            'mautic.form.type.field' => 'getMautic_Form_Type_FieldService',
            'mautic.form.type.field_propertycaptcha' => 'getMautic_Form_Type_FieldPropertycaptchaService',
            'mautic.form.type.field_propertygroup' => 'getMautic_Form_Type_FieldPropertygroupService',
            'mautic.form.type.field_propertyplaceholder' => 'getMautic_Form_Type_FieldPropertyplaceholderService',
            'mautic.form.type.field_propertyselect' => 'getMautic_Form_Type_FieldPropertyselectService',
            'mautic.form.type.field_propertytext' => 'getMautic_Form_Type_FieldPropertytextService',
            'mautic.form.type.fieldslist.citrixlist' => 'getMautic_Form_Type_Fieldslist_CitrixlistService',
            'mautic.form.type.filter_selector' => 'getMautic_Form_Type_FilterSelectorService',
            'mautic.form.type.form' => 'getMautic_Form_Type_FormService',
            'mautic.form.type.form_buttons' => 'getMautic_Form_Type_FormButtonsService',
            'mautic.form.type.form_list' => 'getMautic_Form_Type_FormListService',
            'mautic.form.type.form_submitaction_repost' => 'getMautic_Form_Type_FormSubmitactionRepostService',
            'mautic.form.type.form_submitaction_sendemail' => 'getMautic_Form_Type_FormSubmitactionSendemailService',
            'mautic.form.type.formsubmit_assetdownload' => 'getMautic_Form_Type_FormsubmitAssetdownloadService',
            'mautic.form.type.formsubmit_sendemail_admin' => 'getMautic_Form_Type_FormsubmitSendemailAdminService',
            'mautic.form.type.fullcontact_batch_lookup' => 'getMautic_Form_Type_FullcontactBatchLookupService',
            'mautic.form.type.fullcontact_lookup' => 'getMautic_Form_Type_FullcontactLookupService',
            'mautic.form.type.hidden_entity' => 'getMautic_Form_Type_HiddenEntityService',
            'mautic.form.type.integration.company.fields' => 'getMautic_Form_Type_Integration_Company_FieldsService',
            'mautic.form.type.integration.config' => 'getMautic_Form_Type_Integration_ConfigService',
            'mautic.form.type.integration.details' => 'getMautic_Form_Type_Integration_DetailsService',
            'mautic.form.type.integration.fields' => 'getMautic_Form_Type_Integration_FieldsService',
            'mautic.form.type.integration.keys' => 'getMautic_Form_Type_Integration_KeysService',
            'mautic.form.type.integration.list' => 'getMautic_Form_Type_Integration_ListService',
            'mautic.form.type.integration.settings' => 'getMautic_Form_Type_Integration_SettingsService',
            'mautic.form.type.lead' => 'getMautic_Form_Type_LeadService',
            'mautic.form.type.lead.submitaction.addutmtags' => 'getMautic_Form_Type_Lead_Submitaction_AddutmtagsService',
            'mautic.form.type.lead.submitaction.changelist' => 'getMautic_Form_Type_Lead_Submitaction_ChangelistService',
            'mautic.form.type.lead.submitaction.pointschange' => 'getMautic_Form_Type_Lead_Submitaction_PointschangeService',
            'mautic.form.type.lead.submitaction.removedonotcontact' => 'getMautic_Form_Type_Lead_Submitaction_RemovedonotcontactService',
            'mautic.form.type.lead_batch' => 'getMautic_Form_Type_LeadBatchService',
            'mautic.form.type.lead_batch_dnc' => 'getMautic_Form_Type_LeadBatchDncService',
            'mautic.form.type.lead_batch_stage' => 'getMautic_Form_Type_LeadBatchStageService',
            'mautic.form.type.lead_categories' => 'getMautic_Form_Type_LeadCategoriesService',
            'mautic.form.type.lead_contact_frequency_rules' => 'getMautic_Form_Type_LeadContactFrequencyRulesService',
            'mautic.form.type.lead_dashboard_leads_in_time_widget' => 'getMautic_Form_Type_LeadDashboardLeadsInTimeWidgetService',
            'mautic.form.type.lead_dashboard_leads_lifetime_widget' => 'getMautic_Form_Type_LeadDashboardLeadsLifetimeWidgetService',
            'mautic.form.type.lead_field_import' => 'getMautic_Form_Type_LeadFieldImportService',
            'mautic.form.type.lead_fields' => 'getMautic_Form_Type_LeadFieldsService',
            'mautic.form.type.lead_import' => 'getMautic_Form_Type_LeadImportService',
            'mautic.form.type.lead_merge' => 'getMautic_Form_Type_LeadMergeService',
            'mautic.form.type.lead_quickemail' => 'getMautic_Form_Type_LeadQuickemailService',
            'mautic.form.type.lead_tag' => 'getMautic_Form_Type_LeadTagService',
            'mautic.form.type.lead_tags' => 'getMautic_Form_Type_LeadTagsService',
            'mautic.form.type.leaddevice' => 'getMautic_Form_Type_LeaddeviceService',
            'mautic.form.type.leadfield' => 'getMautic_Form_Type_LeadfieldService',
            'mautic.form.type.leadlist' => 'getMautic_Form_Type_LeadlistService',
            'mautic.form.type.leadlist_action' => 'getMautic_Form_Type_LeadlistActionService',
            'mautic.form.type.leadlist_choices' => 'getMautic_Form_Type_LeadlistChoicesService',
            'mautic.form.type.leadlist_filter' => 'getMautic_Form_Type_LeadlistFilterService',
            'mautic.form.type.leadlist_trigger' => 'getMautic_Form_Type_LeadlistTriggerService',
            'mautic.form.type.leadnote' => 'getMautic_Form_Type_LeadnoteService',
            'mautic.form.type.leadpoints_action' => 'getMautic_Form_Type_LeadpointsActionService',
            'mautic.form.type.leadpoints_trigger' => 'getMautic_Form_Type_LeadpointsTriggerService',
            'mautic.form.type.message_list' => 'getMautic_Form_Type_MessageListService',
            'mautic.form.type.message_send' => 'getMautic_Form_Type_MessageSendService',
            'mautic.form.type.modify_lead_tags' => 'getMautic_Form_Type_ModifyLeadTagsService',
            'mautic.form.type.notification' => 'getMautic_Form_Type_NotificationService',
            'mautic.form.type.notification_list' => 'getMautic_Form_Type_NotificationListService',
            'mautic.form.type.notificationconfig' => 'getMautic_Form_Type_NotificationconfigService',
            'mautic.form.type.notificationsend_list' => 'getMautic_Form_Type_NotificationsendListService',
            'mautic.form.type.page' => 'getMautic_Form_Type_PageService',
            'mautic.form.type.page_abtest_settings' => 'getMautic_Form_Type_PageAbtestSettingsService',
            'mautic.form.type.page_dashboard_hits_in_time_widget' => 'getMautic_Form_Type_PageDashboardHitsInTimeWidgetService',
            'mautic.form.type.page_publish_dates' => 'getMautic_Form_Type_PagePublishDatesService',
            'mautic.form.type.pageconfig' => 'getMautic_Form_Type_PageconfigService',
            'mautic.form.type.pagehit.campaign_trigger' => 'getMautic_Form_Type_Pagehit_CampaignTriggerService',
            'mautic.form.type.pagelist' => 'getMautic_Form_Type_PagelistService',
            'mautic.form.type.pagevariant' => 'getMautic_Form_Type_PagevariantService',
            'mautic.form.type.passwordreset' => 'getMautic_Form_Type_PasswordresetService',
            'mautic.form.type.passwordresetconfirm' => 'getMautic_Form_Type_PasswordresetconfirmService',
            'mautic.form.type.permissionlist' => 'getMautic_Form_Type_PermissionlistService',
            'mautic.form.type.permissions' => 'getMautic_Form_Type_PermissionsService',
            'mautic.form.type.pointaction_assetdownload' => 'getMautic_Form_Type_PointactionAssetdownloadService',
            'mautic.form.type.pointaction_formsubmit' => 'getMautic_Form_Type_PointactionFormsubmitService',
            'mautic.form.type.pointaction_pointhit' => 'getMautic_Form_Type_PointactionPointhitService',
            'mautic.form.type.pointaction_urlhit' => 'getMautic_Form_Type_PointactionUrlhitService',
            'mautic.form.type.redirect_list' => 'getMautic_Form_Type_RedirectListService',
            'mautic.form.type.report' => 'getMautic_Form_Type_ReportService',
            'mautic.form.type.report_dynamic_filters' => 'getMautic_Form_Type_ReportDynamicFiltersService',
            'mautic.form.type.report_filters' => 'getMautic_Form_Type_ReportFiltersService',
            'mautic.form.type.report_widget' => 'getMautic_Form_Type_ReportWidgetService',
            'mautic.form.type.role' => 'getMautic_Form_Type_RoleService',
            'mautic.form.type.role_list' => 'getMautic_Form_Type_RoleListService',
            'mautic.form.type.slideshow_config' => 'getMautic_Form_Type_SlideshowConfigService',
            'mautic.form.type.slideshow_slide_config' => 'getMautic_Form_Type_SlideshowSlideConfigService',
            'mautic.form.type.slot' => 'getMautic_Form_Type_SlotService',
            'mautic.form.type.slot.button' => 'getMautic_Form_Type_Slot_ButtonService',
            'mautic.form.type.slot.codemode' => 'getMautic_Form_Type_Slot_CodemodeService',
            'mautic.form.type.slot.image' => 'getMautic_Form_Type_Slot_ImageService',
            'mautic.form.type.slot.imagecaption' => 'getMautic_Form_Type_Slot_ImagecaptionService',
            'mautic.form.type.slot.imagecard' => 'getMautic_Form_Type_Slot_ImagecardService',
            'mautic.form.type.slot.separator' => 'getMautic_Form_Type_Slot_SeparatorService',
            'mautic.form.type.slot.socialfollow' => 'getMautic_Form_Type_Slot_SocialfollowService',
            'mautic.form.type.slot.socialshare' => 'getMautic_Form_Type_Slot_SocialshareService',
            'mautic.form.type.sms' => 'getMautic_Form_Type_SmsService',
            'mautic.form.type.sms_list' => 'getMautic_Form_Type_SmsListService',
            'mautic.form.type.smsconfig' => 'getMautic_Form_Type_SmsconfigService',
            'mautic.form.type.smssend_list' => 'getMautic_Form_Type_SmssendListService',
            'mautic.form.type.social.facebook' => 'getMautic_Form_Type_Social_FacebookService',
            'mautic.form.type.social.googleplus' => 'getMautic_Form_Type_Social_GoogleplusService',
            'mautic.form.type.social.linkedin' => 'getMautic_Form_Type_Social_LinkedinService',
            'mautic.form.type.social.sociallogin' => 'getMautic_Form_Type_Social_SocialloginService',
            'mautic.form.type.social.twitter' => 'getMautic_Form_Type_Social_TwitterService',
            'mautic.form.type.sortablelist' => 'getMautic_Form_Type_SortablelistService',
            'mautic.form.type.spacer' => 'getMautic_Form_Type_SpacerService',
            'mautic.form.type.standalone_button' => 'getMautic_Form_Type_StandaloneButtonService',
            'mautic.form.type.table_order' => 'getMautic_Form_Type_TableOrderService',
            'mautic.form.type.tel' => 'getMautic_Form_Type_TelService',
            'mautic.form.type.theme.upload' => 'getMautic_Form_Type_Theme_UploadService',
            'mautic.form.type.theme_list' => 'getMautic_Form_Type_ThemeListService',
            'mautic.form.type.updatelead_action' => 'getMautic_Form_Type_UpdateleadActionService',
            'mautic.form.type.user' => 'getMautic_Form_Type_UserService',
            'mautic.form.type.user_list' => 'getMautic_Form_Type_UserListService',
            'mautic.form.type.userconfig' => 'getMautic_Form_Type_UserconfigService',
            'mautic.form.type.webhook' => 'getMautic_Form_Type_WebhookService',
            'mautic.form.type.webhookconfig' => 'getMautic_Form_Type_WebhookconfigService',
            'mautic.form.type.yesno_button_group' => 'getMautic_Form_Type_YesnoButtonGroupService',
            'mautic.form.webhook.subscriber' => 'getMautic_Form_Webhook_SubscriberService',
            'mautic.helper.assetgeneration' => 'getMautic_Helper_AssetgenerationService',
            'mautic.helper.bundle' => 'getMautic_Helper_BundleService',
            'mautic.helper.cache' => 'getMautic_Helper_CacheService',
            'mautic.helper.cache_storage' => 'getMautic_Helper_CacheStorageService',
            'mautic.helper.cookie' => 'getMautic_Helper_CookieService',
            'mautic.helper.core_parameters' => 'getMautic_Helper_CoreParametersService',
            'mautic.helper.dynamiccontent' => 'getMautic_Helper_DynamiccontentService',
            'mautic.helper.encryption' => 'getMautic_Helper_EncryptionService',
            'mautic.helper.form.field_helper' => 'getMautic_Helper_Form_FieldHelperService',
            'mautic.helper.integration' => 'getMautic_Helper_IntegrationService',
            'mautic.helper.ip_lookup' => 'getMautic_Helper_IpLookupService',
            'mautic.helper.language' => 'getMautic_Helper_LanguageService',
            'mautic.helper.mailbox' => 'getMautic_Helper_MailboxService',
            'mautic.helper.mailer' => 'getMautic_Helper_MailerService',
            'mautic.helper.menu' => 'getMautic_Helper_MenuService',
            'mautic.helper.message' => 'getMautic_Helper_MessageService',
            'mautic.helper.notification' => 'getMautic_Helper_NotificationService',
            'mautic.helper.paths' => 'getMautic_Helper_PathsService',
            'mautic.helper.phone_number' => 'getMautic_Helper_PhoneNumberService',
            'mautic.helper.sms' => 'getMautic_Helper_SmsService',
            'mautic.helper.template.analytics' => 'getMautic_Helper_Template_AnalyticsService',
            'mautic.helper.template.avatar' => 'getMautic_Helper_Template_AvatarService',
            'mautic.helper.template.button' => 'getMautic_Helper_Template_ButtonService',
            'mautic.helper.template.canvas' => 'getMautic_Helper_Template_CanvasService',
            'mautic.helper.template.content' => 'getMautic_Helper_Template_ContentService',
            'mautic.helper.template.date' => 'getMautic_Helper_Template_DateService',
            'mautic.helper.template.exception' => 'getMautic_Helper_Template_ExceptionService',
            'mautic.helper.template.formatter' => 'getMautic_Helper_Template_FormatterService',
            'mautic.helper.template.gravatar' => 'getMautic_Helper_Template_GravatarService',
            'mautic.helper.template.mautibot' => 'getMautic_Helper_Template_MautibotService',
            'mautic.helper.template.menu' => 'getMautic_Helper_Template_MenuService',
            'mautic.helper.template.security' => 'getMautic_Helper_Template_SecurityService',
            'mautic.helper.templating' => 'getMautic_Helper_TemplatingService',
            'mautic.helper.theme' => 'getMautic_Helper_ThemeService',
            'mautic.helper.update' => 'getMautic_Helper_UpdateService',
            'mautic.helper.url' => 'getMautic_Helper_UrlService',
            'mautic.helper.user' => 'getMautic_Helper_UserService',
            'mautic.http.connector' => 'getMautic_Http_ConnectorService',
            'mautic.install.configurator.step.check' => 'getMautic_Install_Configurator_Step_CheckService',
            'mautic.install.configurator.step.doctrine' => 'getMautic_Install_Configurator_Step_DoctrineService',
            'mautic.install.configurator.step.email' => 'getMautic_Install_Configurator_Step_EmailService',
            'mautic.install.configurator.step.user' => 'getMautic_Install_Configurator_Step_UserService',
            'mautic.ip_lookup' => 'getMautic_IpLookupService',
            'mautic.ip_lookup.factory' => 'getMautic_IpLookup_FactoryService',
            'mautic.kernel.listener.command_exception' => 'getMautic_Kernel_Listener_CommandExceptionService',
            'mautic.kernel.listener.command_terminate' => 'getMautic_Kernel_Listener_CommandTerminateService',
            'mautic.lead.button.subscriber' => 'getMautic_Lead_Button_SubscriberService',
            'mautic.lead.calendarbundle.subscriber' => 'getMautic_Lead_Calendarbundle_SubscriberService',
            'mautic.lead.campaignbundle.subscriber' => 'getMautic_Lead_Campaignbundle_SubscriberService',
            'mautic.lead.constraint.alias' => 'getMautic_Lead_Constraint_AliasService',
            'mautic.lead.dashboard.subscriber' => 'getMautic_Lead_Dashboard_SubscriberService',
            'mautic.lead.doctrine.subscriber' => 'getMautic_Lead_Doctrine_SubscriberService',
            'mautic.lead.emailbundle.subscriber' => 'getMautic_Lead_Emailbundle_SubscriberService',
            'mautic.lead.formbundle.subscriber' => 'getMautic_Lead_Formbundle_SubscriberService',
            'mautic.lead.maintenance.subscriber' => 'getMautic_Lead_Maintenance_SubscriberService',
            'mautic.lead.model.company' => 'getMautic_Lead_Model_CompanyService',
            'mautic.lead.model.device' => 'getMautic_Lead_Model_DeviceService',
            'mautic.lead.model.field' => 'getMautic_Lead_Model_FieldService',
            'mautic.lead.model.lead' => 'getMautic_Lead_Model_LeadService',
            'mautic.lead.model.list' => 'getMautic_Lead_Model_ListService',
            'mautic.lead.model.note' => 'getMautic_Lead_Model_NoteService',
            'mautic.lead.pointbundle.subscriber' => 'getMautic_Lead_Pointbundle_SubscriberService',
            'mautic.lead.reportbundle.subscriber' => 'getMautic_Lead_Reportbundle_SubscriberService',
            'mautic.lead.search.subscriber' => 'getMautic_Lead_Search_SubscriberService',
            'mautic.lead.stats.subscriber' => 'getMautic_Lead_Stats_SubscriberService',
            'mautic.lead.subscriber' => 'getMautic_Lead_SubscriberService',
            'mautic.lead.subscriber.company' => 'getMautic_Lead_Subscriber_CompanyService',
            'mautic.mautictest.model.something' => 'getMautic_Mautictest_Model_SomethingService',
            'mautic.menu.admin' => 'getMautic_Menu_AdminService',
            'mautic.menu.builder' => 'getMautic_Menu_BuilderService',
            'mautic.menu.extra' => 'getMautic_Menu_ExtraService',
            'mautic.menu.main' => 'getMautic_Menu_MainService',
            'mautic.menu.profile' => 'getMautic_Menu_ProfileService',
            'mautic.menu_renderer' => 'getMautic_MenuRendererService',
            'mautic.menu_renderer.admin' => 'getMautic_MenuRenderer_AdminService',
            'mautic.menu_renderer.extra' => 'getMautic_MenuRenderer_ExtraService',
            'mautic.menu_renderer.main' => 'getMautic_MenuRenderer_MainService',
            'mautic.menu_renderer.profile' => 'getMautic_MenuRenderer_ProfileService',
            'mautic.model.factory' => 'getMautic_Model_FactoryService',
            'mautic.monolog.fulltrace.formatter' => 'getMautic_Monolog_Fulltrace_FormatterService',
            'mautic.notification.api' => 'getMautic_Notification_ApiService',
            'mautic.notification.campaignbundle.subscriber' => 'getMautic_Notification_Campaignbundle_SubscriberService',
            'mautic.notification.configbundle.subscriber' => 'getMautic_Notification_Configbundle_SubscriberService',
            'mautic.notification.model.notification' => 'getMautic_Notification_Model_NotificationService',
            'mautic.notification.notificationbundle.subscriber' => 'getMautic_Notification_Notificationbundle_SubscriberService',
            'mautic.notification.pagebundle.subscriber' => 'getMautic_Notification_Pagebundle_SubscriberService',
            'mautic.notification.stats.subscriber' => 'getMautic_Notification_Stats_SubscriberService',
            'mautic.notification.subscriber.channel' => 'getMautic_Notification_Subscriber_ChannelService',
            'mautic.page.calendarbundle.subscriber' => 'getMautic_Page_Calendarbundle_SubscriberService',
            'mautic.page.campaignbundle.subscriber' => 'getMautic_Page_Campaignbundle_SubscriberService',
            'mautic.page.configbundle.subscriber' => 'getMautic_Page_Configbundle_SubscriberService',
            'mautic.page.dashboard.subscriber' => 'getMautic_Page_Dashboard_SubscriberService',
            'mautic.page.helper.token' => 'getMautic_Page_Helper_TokenService',
            'mautic.page.js.subscriber' => 'getMautic_Page_Js_SubscriberService',
            'mautic.page.leadbundle.subscriber' => 'getMautic_Page_Leadbundle_SubscriberService',
            'mautic.page.maintenance.subscriber' => 'getMautic_Page_Maintenance_SubscriberService',
            'mautic.page.model.page' => 'getMautic_Page_Model_PageService',
            'mautic.page.model.redirect' => 'getMautic_Page_Model_RedirectService',
            'mautic.page.model.trackable' => 'getMautic_Page_Model_TrackableService',
            'mautic.page.model.video' => 'getMautic_Page_Model_VideoService',
            'mautic.page.pointbundle.subscriber' => 'getMautic_Page_Pointbundle_SubscriberService',
            'mautic.page.reportbundle.subscriber' => 'getMautic_Page_Reportbundle_SubscriberService',
            'mautic.page.search.subscriber' => 'getMautic_Page_Search_SubscriberService',
            'mautic.page.stats.subscriber' => 'getMautic_Page_Stats_SubscriberService',
            'mautic.page.subscriber' => 'getMautic_Page_SubscriberService',
            'mautic.page.webhook.subscriber' => 'getMautic_Page_Webhook_SubscriberService',
            'mautic.pagebuilder.subscriber' => 'getMautic_Pagebuilder_SubscriberService',
            'mautic.pagetoken.subscriber' => 'getMautic_Pagetoken_SubscriberService',
            'mautic.permission.manager' => 'getMautic_Permission_ManagerService',
            'mautic.permission.repository' => 'getMautic_Permission_RepositoryService',
            'mautic.plugin.campaignbundle.subscriber' => 'getMautic_Plugin_Campaignbundle_SubscriberService',
            'mautic.plugin.clearbit.button.subscriber' => 'getMautic_Plugin_Clearbit_Button_SubscriberService',
            'mautic.plugin.clearbit.lead.subscriber' => 'getMautic_Plugin_Clearbit_Lead_SubscriberService',
            'mautic.plugin.clearbit.lookup_helper' => 'getMautic_Plugin_Clearbit_LookupHelperService',
            'mautic.plugin.formbundle.subscriber' => 'getMautic_Plugin_Formbundle_SubscriberService',
            'mautic.plugin.fullcontact.button.subscriber' => 'getMautic_Plugin_Fullcontact_Button_SubscriberService',
            'mautic.plugin.fullcontact.lead.subscriber' => 'getMautic_Plugin_Fullcontact_Lead_SubscriberService',
            'mautic.plugin.fullcontact.lookup_helper' => 'getMautic_Plugin_Fullcontact_LookupHelperService',
            'mautic.plugin.leadbundle.subscriber' => 'getMautic_Plugin_Leadbundle_SubscriberService',
            'mautic.plugin.model.plugin' => 'getMautic_Plugin_Model_PluginService',
            'mautic.plugin.pointbundle.subscriber' => 'getMautic_Plugin_Pointbundle_SubscriberService',
            'mautic.point.dashboard.subscriber' => 'getMautic_Point_Dashboard_SubscriberService',
            'mautic.point.leadbundle.subscriber' => 'getMautic_Point_Leadbundle_SubscriberService',
            'mautic.point.model.point' => 'getMautic_Point_Model_PointService',
            'mautic.point.model.trigger' => 'getMautic_Point_Model_TriggerService',
            'mautic.point.model.triggerevent' => 'getMautic_Point_Model_TriggereventService',
            'mautic.point.search.subscriber' => 'getMautic_Point_Search_SubscriberService',
            'mautic.point.stats.subscriber' => 'getMautic_Point_Stats_SubscriberService',
            'mautic.point.subscriber' => 'getMautic_Point_SubscriberService',
            'mautic.point.type.action' => 'getMautic_Point_Type_ActionService',
            'mautic.point.type.form' => 'getMautic_Point_Type_FormService',
            'mautic.point.type.genericpoint_settings' => 'getMautic_Point_Type_GenericpointSettingsService',
            'mautic.point.type.genericstage_settings' => 'getMautic_Point_Type_GenericstageSettingsService',
            'mautic.pointtrigger.type.action' => 'getMautic_Pointtrigger_Type_ActionService',
            'mautic.pointtrigger.type.form' => 'getMautic_Pointtrigger_Type_FormService',
            'mautic.report.dashboard.subscriber' => 'getMautic_Report_Dashboard_SubscriberService',
            'mautic.report.model.report' => 'getMautic_Report_Model_ReportService',
            'mautic.report.report.subscriber' => 'getMautic_Report_Report_SubscriberService',
            'mautic.report.search.subscriber' => 'getMautic_Report_Search_SubscriberService',
            'mautic.route_loader' => 'getMautic_RouteLoaderService',
            'mautic.schema.helper.column' => 'getMautic_Schema_Helper_ColumnService',
            'mautic.schema.helper.factory' => 'getMautic_Schema_Helper_FactoryService',
            'mautic.schema.helper.index' => 'getMautic_Schema_Helper_IndexService',
            'mautic.schema.helper.table' => 'getMautic_Schema_Helper_TableService',
            'mautic.security' => 'getMautic_SecurityService',
            'mautic.security.authentication_handler' => 'getMautic_Security_AuthenticationHandlerService',
            'mautic.security.logout_handler' => 'getMautic_Security_LogoutHandlerService',
            'mautic.security.saml.id_store' => 'getMautic_Security_Saml_IdStoreService',
            'mautic.security.saml.user_creator' => 'getMautic_Security_Saml_UserCreatorService',
            'mautic.sms.api' => 'getMautic_Sms_ApiService',
            'mautic.sms.campaignbundle.subscriber' => 'getMautic_Sms_Campaignbundle_SubscriberService',
            'mautic.sms.channel.subscriber' => 'getMautic_Sms_Channel_SubscriberService',
            'mautic.sms.configbundle.subscriber' => 'getMautic_Sms_Configbundle_SubscriberService',
            'mautic.sms.message_queue.subscriber' => 'getMautic_Sms_MessageQueue_SubscriberService',
            'mautic.sms.model.sms' => 'getMautic_Sms_Model_SmsService',
            'mautic.sms.smsbundle.subscriber' => 'getMautic_Sms_Smsbundle_SubscriberService',
            'mautic.sms.stats.subscriber' => 'getMautic_Sms_Stats_SubscriberService',
            'mautic.social.campaignbundle.subscriber' => 'getMautic_Social_Campaignbundle_SubscriberService',
            'mautic.social.config' => 'getMautic_Social_ConfigService',
            'mautic.social.configbundle.subscriber' => 'getMautic_Social_Configbundle_SubscriberService',
            'mautic.social.form.type.monitoring' => 'getMautic_Social_Form_Type_MonitoringService',
            'mautic.social.form.type.network.twitter.abstract' => 'getMautic_Social_Form_Type_Network_Twitter_AbstractService',
            'mautic.social.form.type.network.twitter.custom' => 'getMautic_Social_Form_Type_Network_Twitter_CustomService',
            'mautic.social.form.type.network.twitter.hashtag' => 'getMautic_Social_Form_Type_Network_Twitter_HashtagService',
            'mautic.social.form.type.network.twitter.mention' => 'getMautic_Social_Form_Type_Network_Twitter_MentionService',
            'mautic.social.form.type.twitter.tweet' => 'getMautic_Social_Form_Type_Twitter_TweetService',
            'mautic.social.formbundle.subscriber' => 'getMautic_Social_Formbundle_SubscriberService',
            'mautic.social.helper.campaign' => 'getMautic_Social_Helper_CampaignService',
            'mautic.social.model.monitoring' => 'getMautic_Social_Model_MonitoringService',
            'mautic.social.model.postcount' => 'getMautic_Social_Model_PostcountService',
            'mautic.social.subscriber.channel' => 'getMautic_Social_Subscriber_ChannelService',
            'mautic.stage.campaignbundle.subscriber' => 'getMautic_Stage_Campaignbundle_SubscriberService',
            'mautic.stage.dashboard.subscriber' => 'getMautic_Stage_Dashboard_SubscriberService',
            'mautic.stage.leadbundle.subscriber' => 'getMautic_Stage_Leadbundle_SubscriberService',
            'mautic.stage.model.stage' => 'getMautic_Stage_Model_StageService',
            'mautic.stage.search.subscriber' => 'getMautic_Stage_Search_SubscriberService',
            'mautic.stage.stats.subscriber' => 'getMautic_Stage_Stats_SubscriberService',
            'mautic.stage.subscriber' => 'getMautic_Stage_SubscriberService',
            'mautic.stage.type.action' => 'getMautic_Stage_Type_ActionService',
            'mautic.stage.type.action_change' => 'getMautic_Stage_Type_ActionChangeService',
            'mautic.stage.type.action_list' => 'getMautic_Stage_Type_ActionListService',
            'mautic.stage.type.form' => 'getMautic_Stage_Type_FormService',
            'mautic.stage.type.stage_list' => 'getMautic_Stage_Type_StageListService',
            'mautic.tblprefix_subscriber' => 'getMautic_TblprefixSubscriberService',
            'mautic.templating.name_parser' => 'getMautic_Templating_NameParserService',
            'mautic.translation.loader' => 'getMautic_Translation_LoaderService',
            'mautic.transport.amazon' => 'getMautic_Transport_AmazonService',
            'mautic.transport.elasticemail' => 'getMautic_Transport_ElasticemailService',
            'mautic.transport.mailjet' => 'getMautic_Transport_MailjetService',
            'mautic.transport.mandrill' => 'getMautic_Transport_MandrillService',
            'mautic.transport.postmark' => 'getMautic_Transport_PostmarkService',
            'mautic.transport.sendgrid' => 'getMautic_Transport_SendgridService',
            'mautic.transport.sparkpost' => 'getMautic_Transport_SparkpostService',
            'mautic.twilio.service' => 'getMautic_Twilio_ServiceService',
            'mautic.user.config.subscriber' => 'getMautic_User_Config_SubscriberService',
            'mautic.user.form_authenticator' => 'getMautic_User_FormAuthenticatorService',
            'mautic.user.manager' => 'getMautic_User_ManagerService',
            'mautic.user.model.role' => 'getMautic_User_Model_RoleService',
            'mautic.user.model.user' => 'getMautic_User_Model_UserService',
            'mautic.user.provider' => 'getMautic_User_ProviderService',
            'mautic.user.repository' => 'getMautic_User_RepositoryService',
            'mautic.user.route.subscriber' => 'getMautic_User_Route_SubscriberService',
            'mautic.user.search.subscriber' => 'getMautic_User_Search_SubscriberService',
            'mautic.user.subscriber' => 'getMautic_User_SubscriberService',
            'mautic.validator.leadlistaccess' => 'getMautic_Validator_LeadlistaccessService',
            'mautic.validator.oauthcallback' => 'getMautic_Validator_OauthcallbackService',
            'mautic.webhook.audit.subscriber' => 'getMautic_Webhook_Audit_SubscriberService',
            'mautic.webhook.config.subscriber' => 'getMautic_Webhook_Config_SubscriberService',
            'mautic.webhook.model.webhook' => 'getMautic_Webhook_Model_WebhookService',
            'mautic.webhook.stats.subscriber' => 'getMautic_Webhook_Stats_SubscriberService',
            'mautic.webhook.subscriber' => 'getMautic_Webhook_SubscriberService',
            'mautic.webpush.js.subscriber' => 'getMautic_Webpush_Js_SubscriberService',
            'mautic\\channelbundle\\form\\type\\messagetype' => 'getMautic_Channelbundle_Form_Type_MessagetypeService',
            'mautic\\userbundle\\security\\authenticator\\preauthauthenticator' => 'getMautic_Userbundle_Security_Authenticator_PreauthauthenticatorService',
            'mautic\\userbundle\\security\\firewall\\authenticationlistener' => 'getMautic_Userbundle_Security_Firewall_AuthenticationlistenerService',
            'monolog.handler.chrome' => 'getMonolog_Handler_ChromeService',
            'monolog.handler.console' => 'getMonolog_Handler_ConsoleService',
            'monolog.handler.debug' => 'getMonolog_Handler_DebugService',
            'monolog.handler.main' => 'getMonolog_Handler_MainService',
            'monolog.handler.mautic' => 'getMonolog_Handler_MauticService',
            'monolog.handler.null_internal' => 'getMonolog_Handler_NullInternalService',
            'monolog.logger.chrome' => 'getMonolog_Logger_ChromeService',
            'monolog.logger.doctrine' => 'getMonolog_Logger_DoctrineService',
            'monolog.logger.event' => 'getMonolog_Logger_EventService',
            'monolog.logger.mautic' => 'getMonolog_Logger_MauticService',
            'monolog.logger.php' => 'getMonolog_Logger_PhpService',
            'monolog.logger.profiler' => 'getMonolog_Logger_ProfilerService',
            'monolog.logger.request' => 'getMonolog_Logger_RequestService',
            'monolog.logger.router' => 'getMonolog_Logger_RouterService',
            'monolog.logger.security' => 'getMonolog_Logger_SecurityService',
            'monolog.logger.templating' => 'getMonolog_Logger_TemplatingService',
            'monolog.logger.translation' => 'getMonolog_Logger_TranslationService',
            'monolog.processor.psr_log_message' => 'getMonolog_Processor_PsrLogMessageService',
            'muatic.form.type.field_propertypagebreak' => 'getMuatic_Form_Type_FieldPropertypagebreakService',
            'oneup_uploader.chunk_manager' => 'getOneupUploader_ChunkManagerService',
            'oneup_uploader.chunks_storage' => 'getOneupUploader_ChunksStorageService',
            'oneup_uploader.controller.mautic' => 'getOneupUploader_Controller_MauticService',
            'oneup_uploader.namer.uniqid' => 'getOneupUploader_Namer_UniqidService',
            'oneup_uploader.orphanage_manager' => 'getOneupUploader_OrphanageManagerService',
            'oneup_uploader.pre_upload' => 'getOneupUploader_PreUploadService',
            'oneup_uploader.routing.loader' => 'getOneupUploader_Routing_LoaderService',
            'oneup_uploader.storage.asset' => 'getOneupUploader_Storage_AssetService',
            'oneup_uploader.templating.uploader_helper' => 'getOneupUploader_Templating_UploaderHelperService',
            'oneup_uploader.twig.extension.uploader' => 'getOneupUploader_Twig_Extension_UploaderService',
            'oneup_uploader.validation_listener.allowed_mimetype' => 'getOneupUploader_ValidationListener_AllowedMimetypeService',
            'oneup_uploader.validation_listener.disallowed_mimetype' => 'getOneupUploader_ValidationListener_DisallowedMimetypeService',
            'oneup_uploader.validation_listener.max_size' => 'getOneupUploader_ValidationListener_MaxSizeService',
            'profiler' => 'getProfilerService',
            'profiler_listener' => 'getProfilerListenerService',
            'property_accessor' => 'getPropertyAccessorService',
            'request' => 'getRequestService',
            'request_stack' => 'getRequestStackService',
            'response_listener' => 'getResponseListenerService',
            'router' => 'getRouterService',
            'router.request_context' => 'getRouter_RequestContextService',
            'router_listener' => 'getRouterListenerService',
            'routing.loader' => 'getRouting_LoaderService',
            'security.access.decision_manager' => 'getSecurity_Access_DecisionManagerService',
            'security.access_listener' => 'getSecurity_AccessListenerService',
            'security.access_map' => 'getSecurity_AccessMapService',
            'security.authentication.guard_handler' => 'getSecurity_Authentication_GuardHandlerService',
            'security.authentication.manager' => 'getSecurity_Authentication_ManagerService',
            'security.authentication.trust_resolver' => 'getSecurity_Authentication_TrustResolverService',
            'security.authentication_utils' => 'getSecurity_AuthenticationUtilsService',
            'security.authorization_checker' => 'getSecurity_AuthorizationCheckerService',
            'security.channel_listener' => 'getSecurity_ChannelListenerService',
            'security.context' => 'getSecurity_ContextService',
            'security.context_listener.1' => 'getSecurity_ContextListener_1Service',
            'security.csrf.token_manager' => 'getSecurity_Csrf_TokenManagerService',
            'security.encoder_factory' => 'getSecurity_EncoderFactoryService',
            'security.firewall' => 'getSecurity_FirewallService',
            'security.firewall.map.context.dev' => 'getSecurity_Firewall_Map_Context_DevService',
            'security.firewall.map.context.install' => 'getSecurity_Firewall_Map_Context_InstallService',
            'security.firewall.map.context.login' => 'getSecurity_Firewall_Map_Context_LoginService',
            'security.firewall.map.context.main' => 'getSecurity_Firewall_Map_Context_MainService',
            'security.firewall.map.context.public' => 'getSecurity_Firewall_Map_Context_PublicService',
            'security.firewall.map.context.saml_discovery' => 'getSecurity_Firewall_Map_Context_SamlDiscoveryService',
            'security.firewall.map.context.sso_login' => 'getSecurity_Firewall_Map_Context_SsoLoginService',
            'security.http_utils' => 'getSecurity_HttpUtilsService',
            'security.logout_url_generator' => 'getSecurity_LogoutUrlGeneratorService',
            'security.password_encoder' => 'getSecurity_PasswordEncoderService',
            'security.rememberme.response_listener' => 'getSecurity_Rememberme_ResponseListenerService',
            'security.role_hierarchy' => 'getSecurity_RoleHierarchyService',
            'security.secure_random' => 'getSecurity_SecureRandomService',
            'security.token_storage' => 'getSecurity_TokenStorageService',
            'security.user_checker.dev' => 'getSecurity_UserChecker_DevService',
            'security.validator.user_password' => 'getSecurity_Validator_UserPasswordService',
            'sensio_distribution.security_checker' => 'getSensioDistribution_SecurityCheckerService',
            'sensio_distribution.security_checker.command' => 'getSensioDistribution_SecurityChecker_CommandService',
            'service_container' => 'getServiceContainerService',
            'session' => 'getSessionService',
            'session.save_listener' => 'getSession_SaveListenerService',
            'session.storage.filesystem' => 'getSession_Storage_FilesystemService',
            'session.storage.metadata_bag' => 'getSession_Storage_MetadataBagService',
            'session.storage.native' => 'getSession_Storage_NativeService',
            'session.storage.php_bridge' => 'getSession_Storage_PhpBridgeService',
            'session_listener' => 'getSessionListenerService',
            'streamed_response_listener' => 'getStreamedResponseListenerService',
            'swiftmailer.email_sender.listener' => 'getSwiftmailer_EmailSender_ListenerService',
            'swiftmailer.mailer.default' => 'getSwiftmailer_Mailer_DefaultService',
            'swiftmailer.mailer.default.plugin.messagelogger' => 'getSwiftmailer_Mailer_Default_Plugin_MessageloggerService',
            'swiftmailer.mailer.default.transport' => 'getSwiftmailer_Mailer_Default_TransportService',
            'templating' => 'getTemplatingService',
            'templating.filename_parser' => 'getTemplating_FilenameParserService',
            'templating.globals' => 'getTemplating_GlobalsService',
            'templating.helper.actions' => 'getTemplating_Helper_ActionsService',
            'templating.helper.assets' => 'getTemplating_Helper_AssetsService',
            'templating.helper.code' => 'getTemplating_Helper_CodeService',
            'templating.helper.form' => 'getTemplating_Helper_FormService',
            'templating.helper.logout_url' => 'getTemplating_Helper_LogoutUrlService',
            'templating.helper.request' => 'getTemplating_Helper_RequestService',
            'templating.helper.router' => 'getTemplating_Helper_RouterService',
            'templating.helper.security' => 'getTemplating_Helper_SecurityService',
            'templating.helper.session' => 'getTemplating_Helper_SessionService',
            'templating.helper.slots' => 'getTemplating_Helper_SlotsService',
            'templating.helper.stopwatch' => 'getTemplating_Helper_StopwatchService',
            'templating.helper.translator' => 'getTemplating_Helper_TranslatorService',
            'templating.loader' => 'getTemplating_LoaderService',
            'templating.locator' => 'getTemplating_LocatorService',
            'templating.name_parser' => 'getTemplating_NameParserService',
            'templating.twig.extension.asset' => 'getTemplating_Twig_Extension_AssetService',
            'templating.twig.extension.slot' => 'getTemplating_Twig_Extension_SlotService',
            'transifex' => 'getTransifexService',
            'translation.dumper.csv' => 'getTranslation_Dumper_CsvService',
            'translation.dumper.ini' => 'getTranslation_Dumper_IniService',
            'translation.dumper.json' => 'getTranslation_Dumper_JsonService',
            'translation.dumper.mo' => 'getTranslation_Dumper_MoService',
            'translation.dumper.php' => 'getTranslation_Dumper_PhpService',
            'translation.dumper.po' => 'getTranslation_Dumper_PoService',
            'translation.dumper.qt' => 'getTranslation_Dumper_QtService',
            'translation.dumper.res' => 'getTranslation_Dumper_ResService',
            'translation.dumper.xliff' => 'getTranslation_Dumper_XliffService',
            'translation.dumper.yml' => 'getTranslation_Dumper_YmlService',
            'translation.extractor' => 'getTranslation_ExtractorService',
            'translation.extractor.php' => 'getTranslation_Extractor_PhpService',
            'translation.loader' => 'getTranslation_LoaderService',
            'translation.loader.csv' => 'getTranslation_Loader_CsvService',
            'translation.loader.dat' => 'getTranslation_Loader_DatService',
            'translation.loader.ini' => 'getTranslation_Loader_IniService',
            'translation.loader.json' => 'getTranslation_Loader_JsonService',
            'translation.loader.mo' => 'getTranslation_Loader_MoService',
            'translation.loader.php' => 'getTranslation_Loader_PhpService',
            'translation.loader.po' => 'getTranslation_Loader_PoService',
            'translation.loader.qt' => 'getTranslation_Loader_QtService',
            'translation.loader.res' => 'getTranslation_Loader_ResService',
            'translation.loader.xliff' => 'getTranslation_Loader_XliffService',
            'translation.loader.yml' => 'getTranslation_Loader_YmlService',
            'translation.writer' => 'getTranslation_WriterService',
            'translator' => 'getTranslatorService',
            'translator.default' => 'getTranslator_DefaultService',
            'translator_listener' => 'getTranslatorListenerService',
            'twig' => 'getTwigService',
            'twig.controller.exception' => 'getTwig_Controller_ExceptionService',
            'twig.controller.preview_error' => 'getTwig_Controller_PreviewErrorService',
            'twig.exception_listener' => 'getTwig_ExceptionListenerService',
            'twig.loader' => 'getTwig_LoaderService',
            'twig.profile' => 'getTwig_ProfileService',
            'twig.translation.extractor' => 'getTwig_Translation_ExtractorService',
            'uri_signer' => 'getUriSignerService',
            'validate_request_listener' => 'getValidateRequestListenerService',
            'validator' => 'getValidatorService',
            'validator.builder' => 'getValidator_BuilderService',
            'validator.email' => 'getValidator_EmailService',
            'validator.expression' => 'getValidator_ExpressionService',
            'web_profiler.controller.exception' => 'getWebProfiler_Controller_ExceptionService',
            'web_profiler.controller.profiler' => 'getWebProfiler_Controller_ProfilerService',
            'web_profiler.controller.router' => 'getWebProfiler_Controller_RouterService',
            'web_profiler.debug_toolbar' => 'getWebProfiler_DebugToolbarService',
        );
        $this->aliases = array(
            'babdev\\transifex\\transifex' => 'transifex',
            'console.command.sensiolabs_security_command_securitycheckercommand' => 'sensio_distribution.security_checker.command',
            'database_connection' => 'doctrine.dbal.default_connection',
            'doctrine.orm.default_metadata_cache' => 'doctrine_cache.providers.doctrine.orm.default_metadata_cache',
            'doctrine.orm.default_query_cache' => 'doctrine_cache.providers.doctrine.orm.default_query_cache',
            'doctrine.orm.default_result_cache' => 'doctrine_cache.providers.doctrine.orm.default_result_cache',
            'doctrine.orm.entity_manager' => 'doctrine.orm.default_entity_manager',
            'doctrine\\orm\\entitymanager' => 'mautic.permission.manager',
            'event_dispatcher' => 'debug.event_dispatcher',
            'fos_oauth_server.access_token_manager' => 'fos_oauth_server.access_token_manager.default',
            'fos_oauth_server.auth_code_manager' => 'fos_oauth_server.auth_code_manager.default',
            'fos_oauth_server.authorize.form.handler' => 'fos_oauth_server.authorize.form.handler.default',
            'fos_oauth_server.client_manager' => 'fos_oauth_server.client_manager.default',
            'fos_oauth_server.refresh_token_manager' => 'fos_oauth_server.refresh_token_manager.default',
            'fos_rest.exception_handler' => 'fos_rest.view.exception_wrapper_handler',
            'fos_rest.inflector' => 'fos_rest.inflector.doctrine',
            'fos_rest.router' => 'router',
            'fos_rest.templating' => 'templating',
            'joomla\\http\\http' => 'mautic.http.connector',
            'knp\\menu\\menuitem' => 'mautic.menu.profile',
            'lightsaml.store.id_state' => 'mautic.security.saml.id_store',
            'lightsaml.system.logger' => 'logger',
            'mailer' => 'swiftmailer.mailer.default',
            'mautic.config' => 'mautic.helper.core_parameters',
            'mautic\\apibundle\\eventlistener\\apisubscriber' => 'mautic.api.subscriber',
            'mautic\\apibundle\\eventlistener\\configsubscriber' => 'mautic.api.configbundle.subscriber',
            'mautic\\apibundle\\eventlistener\\oautheventlistener' => 'mautic.api.oauth.event_listener',
            'mautic\\apibundle\\eventlistener\\searchsubscriber' => 'mautic.api.search.subscriber',
            'mautic\\apibundle\\form\\type\\clienttype' => 'mautic.form.type.apiclients',
            'mautic\\apibundle\\form\\type\\configtype' => 'mautic.form.type.apiconfig',
            'mautic\\apibundle\\form\\validator\\constraints\\oauthcallbackvalidator' => 'mautic.validator.oauthcallback',
            'mautic\\apibundle\\model\\clientmodel' => 'mautic.api.model.client',
            'mautic\\apibundle\\provider\\nonceprovider' => 'mautic.api.oauth1.nonce_provider',
            'mautic\\assetbundle\\errorhandler\\dropzoneerrorhandler' => 'mautic.asset.upload.error.handler',
            'mautic\\assetbundle\\eventlistener\\assetsubscriber' => 'mautic.asset.subscriber',
            'mautic\\assetbundle\\eventlistener\\buildersubscriber' => 'mautic.asset.builder.subscriber',
            'mautic\\assetbundle\\eventlistener\\campaignsubscriber' => 'mautic.asset.campaignbundle.subscriber',
            'mautic\\assetbundle\\eventlistener\\configsubscriber' => 'mautic.asset.configbundle.subscriber',
            'mautic\\assetbundle\\eventlistener\\dashboardsubscriber' => 'mautic.asset.dashboard.subscriber',
            'mautic\\assetbundle\\eventlistener\\emailsubscriber' => 'mautic.asset.emailbundle.subscriber',
            'mautic\\assetbundle\\eventlistener\\formsubscriber' => 'mautic.asset.formbundle.subscriber',
            'mautic\\assetbundle\\eventlistener\\leadsubscriber' => 'mautic.asset.leadbundle.subscriber',
            'mautic\\assetbundle\\eventlistener\\pagesubscriber' => 'mautic.asset.pagebundle.subscriber',
            'mautic\\assetbundle\\eventlistener\\pointsubscriber' => 'mautic.asset.pointbundle.subscriber',
            'mautic\\assetbundle\\eventlistener\\reportsubscriber' => 'mautic.asset.reportbundle.subscriber',
            'mautic\\assetbundle\\eventlistener\\searchsubscriber' => 'mautic.asset.search.subscriber',
            'mautic\\assetbundle\\eventlistener\\statssubscriber' => 'mautic.asset.stats.subscriber',
            'mautic\\assetbundle\\eventlistener\\uploadsubscriber' => 'oneup_uploader.pre_upload',
            'mautic\\assetbundle\\form\\type\\assetlisttype' => 'mautic.form.type.assetlist',
            'mautic\\assetbundle\\form\\type\\assettype' => 'mautic.form.type.asset',
            'mautic\\assetbundle\\form\\type\\campaigneventassetdownloadtype' => 'mautic.form.type.campaignevent_assetdownload',
            'mautic\\assetbundle\\form\\type\\configtype' => 'mautic.form.type.assetconfig',
            'mautic\\assetbundle\\form\\type\\dashboarddownloadsintimewidgettype' => 'mautic.form.type.asset_dashboard_downloads_in_time_widget',
            'mautic\\assetbundle\\form\\type\\formsubmitactiondownloadfiletype' => 'mautic.form.type.formsubmit_assetdownload',
            'mautic\\assetbundle\\form\\type\\pointactionassetdownloadtype' => 'mautic.form.type.pointaction_assetdownload',
            'mautic\\assetbundle\\helper\\tokenhelper' => 'mautic.asset.helper.token',
            'mautic\\assetbundle\\model\\assetmodel' => 'mautic.asset.model.asset',
            'mautic\\calendarbundle\\model\\calendarmodel' => 'mautic.calendar.model.calendar',
            'mautic\\campaignbundle\\eventlistener\\calendarsubscriber' => 'mautic.campaign.calendarbundle.subscriber',
            'mautic\\campaignbundle\\eventlistener\\campaignsubscriber' => 'mautic.campaign.subscriber',
            'mautic\\campaignbundle\\eventlistener\\configsubscriber' => 'mautic.campaignconfigbundle.subscriber',
            'mautic\\campaignbundle\\eventlistener\\dashboardsubscriber' => 'mautic.campaign.dashboard.subscriber',
            'mautic\\campaignbundle\\eventlistener\\leadsubscriber' => 'mautic.campaign.leadbundle.subscriber',
            'mautic\\campaignbundle\\eventlistener\\pointsubscriber' => 'mautic.campaign.pointbundle.subscriber',
            'mautic\\campaignbundle\\eventlistener\\reportsubscriber' => 'mautic.campaign.report.subscriber',
            'mautic\\campaignbundle\\eventlistener\\searchsubscriber' => 'mautic.campaign.search.subscriber',
            'mautic\\campaignbundle\\eventlistener\\statssubscriber' => 'mautic.campaign.stats.subscriber',
            'mautic\\campaignbundle\\form\\type\\campaigneventaddremoveleadtype' => 'mautic.campaign.type.action.addremovelead',
            'mautic\\campaignbundle\\form\\type\\campaigneventleadchangetype' => 'mautic.campaign.type.trigger.leadchange',
            'mautic\\campaignbundle\\form\\type\\campaignleadsourcetype' => 'mautic.campaign.type.leadsource',
            'mautic\\campaignbundle\\form\\type\\campaignlisttype' => 'mautic.campaign.type.campaignlist',
            'mautic\\campaignbundle\\form\\type\\campaigntype' => 'mautic.campaign.type.form',
            'mautic\\campaignbundle\\form\\type\\configtype' => 'mautic.form.type.campaignconfig',
            'mautic\\campaignbundle\\form\\type\\eventcanvassettingstype' => 'mautic.campaign.type.canvassettings',
            'mautic\\campaignbundle\\form\\type\\eventtype' => 'mautic.campaignrange.type.action',
            'mautic\\campaignbundle\\model\\campaignmodel' => 'mautic.campaign.model.campaign',
            'mautic\\campaignbundle\\model\\eventlogmodel' => 'mautic.campaign.model.event_log',
            'mautic\\campaignbundle\\model\\eventmodel' => 'mautic.campaign.model.event',
            'mautic\\categorybundle\\eventlistener\\categorysubscriber' => 'mautic.category.subscriber',
            'mautic\\categorybundle\\form\\type\\categorybundlestype' => 'mautic.form.type.category_bundles_form',
            'mautic\\categorybundle\\form\\type\\categorylisttype' => 'mautic.form.type.category',
            'mautic\\categorybundle\\form\\type\\categorytype' => 'mautic.form.type.category_form',
            'mautic\\categorybundle\\model\\categorymodel' => 'mautic.category.model.category',
            'mautic\\channelbundle\\eventlistener\\campaignsubscriber' => 'mautic.channel.campaignbundle.subscriber',
            'mautic\\channelbundle\\eventlistener\\messagesubscriber' => 'mautic.channel.channelbundle.subscriber',
            'mautic\\channelbundle\\form\\type\\messagelisttype' => 'mautic.form.type.message_list',
            'mautic\\channelbundle\\form\\type\\messagesendtype' => 'mautic.form.type.message_send',
            'mautic\\channelbundle\\helper\\channellisthelper' => 'mautic.channel.helper.channel_list',
            'mautic\\channelbundle\\model\\messagemodel' => 'mautic.channel.model.message',
            'mautic\\channelbundle\\model\\messagequeuemodel' => 'mautic.channel.model.queue',
            'mautic\\configbundle\\eventlistener\\configsubscriber' => 'mautic.config.subscriber',
            'mautic\\configbundle\\form\\type\\configtype' => 'mautic.form.type.config',
            'mautic\\configbundle\\model\\configmodel' => 'mautic.config.model.config',
            'mautic\\configbundle\\model\\sysinfomodel' => 'mautic.config.model.sysinfo',
            'mautic\\corebundle\\configurator\\configurator' => 'mautic.configurator',
            'mautic\\corebundle\\doctrine\\helper\\columnschemahelper' => 'mautic.schema.helper.column',
            'mautic\\corebundle\\doctrine\\helper\\indexschemahelper' => 'mautic.schema.helper.index',
            'mautic\\corebundle\\doctrine\\helper\\schemahelperfactory' => 'mautic.schema.helper.factory',
            'mautic\\corebundle\\doctrine\\helper\\tableschemahelper' => 'mautic.schema.helper.table',
            'mautic\\corebundle\\eventlistener\\assetssubscriber' => 'mautic.core.assets.subscriber',
            'mautic\\corebundle\\eventlistener\\buildjssubscriber' => 'mautic.webpush.js.subscriber',
            'mautic\\corebundle\\eventlistener\\configsubscriber' => 'mautic.core.configbundle.subscriber',
            'mautic\\corebundle\\eventlistener\\coresubscriber' => 'mautic.core.subscriber',
            'mautic\\corebundle\\eventlistener\\dashboardsubscriber' => 'mautic.core.dashboard.subscriber',
            'mautic\\corebundle\\eventlistener\\doctrineeventssubscriber' => 'mautic.tblprefix_subscriber',
            'mautic\\corebundle\\eventlistener\\environmentsubscriber' => 'mautic.core.environment.subscriber',
            'mautic\\corebundle\\eventlistener\\errorhandlinglistener' => 'mautic.core.errorhandler.subscriber',
            'mautic\\corebundle\\eventlistener\\exceptionlistener' => 'mautic.exception.listener',
            'mautic\\corebundle\\eventlistener\\maintenancesubscriber' => 'mautic.core.maintenance.subscriber',
            'mautic\\corebundle\\eventlistener\\statssubscriber' => 'mautic.core.stats.subscriber',
            'mautic\\corebundle\\factory\\iplookupfactory' => 'mautic.ip_lookup.factory',
            'mautic\\corebundle\\factory\\mauticfactory' => 'mautic.factory',
            'mautic\\corebundle\\factory\\modelfactory' => 'mautic.model.factory',
            'mautic\\corebundle\\form\\extension\\customformextension' => 'mautic.form.extension.custom',
            'mautic\\corebundle\\form\\type\\buildersectiontype' => 'mautic.form.type.builder.section',
            'mautic\\corebundle\\form\\type\\buttongrouptype' => 'mautic.form.type.button_group',
            'mautic\\corebundle\\form\\type\\configtype' => 'mautic.form.type.coreconfig',
            'mautic\\corebundle\\form\\type\\daterangetype' => 'mautic.form.type.daterange',
            'mautic\\corebundle\\form\\type\\dynamiccontentfilterentryfilterstype' => 'mautic.form.type.dynamic_content_filter_entry_filters',
            'mautic\\corebundle\\form\\type\\dynamiccontentfilterentrytype' => 'mautic.form.type.dynamic_content_filter_entry',
            'mautic\\corebundle\\form\\type\\dynamiccontentfiltertype' => 'mautic.form.type.dynamic_content_filter',
            'mautic\\corebundle\\form\\type\\dynamiclisttype' => 'mautic.form.type.dynamiclist',
            'mautic\\corebundle\\form\\type\\entitylookuptype' => 'mautic.form.type.entity_lookup',
            'mautic\\corebundle\\form\\type\\formbuttonstype' => 'mautic.form.type.form_buttons',
            'mautic\\corebundle\\form\\type\\hiddenentitytype' => 'mautic.form.type.hidden_entity',
            'mautic\\corebundle\\form\\type\\iplookupdownloaddatastorebuttontype' => 'mautic.form.type.coreconfig.iplookup_download_data_store_button',
            'mautic\\corebundle\\form\\type\\slotbuttontype' => 'mautic.form.type.slot.button',
            'mautic\\corebundle\\form\\type\\slotcodemodetype' => 'mautic.form.type.slot.codemode',
            'mautic\\corebundle\\form\\type\\slotimagecaptiontype' => 'mautic.form.type.slot.imagecaption',
            'mautic\\corebundle\\form\\type\\slotimagecardtype' => 'mautic.form.type.slot.imagecard',
            'mautic\\corebundle\\form\\type\\slotimagetype' => 'mautic.form.type.slot.image',
            'mautic\\corebundle\\form\\type\\slotseparatortype' => 'mautic.form.type.slot.separator',
            'mautic\\corebundle\\form\\type\\slotsocialfollowtype' => 'mautic.form.type.slot.socialfollow',
            'mautic\\corebundle\\form\\type\\slotsocialsharetype' => 'mautic.form.type.slot.socialshare',
            'mautic\\corebundle\\form\\type\\slottype' => 'mautic.form.type.slot',
            'mautic\\corebundle\\form\\type\\sortablelisttype' => 'mautic.form.type.sortablelist',
            'mautic\\corebundle\\form\\type\\spacertype' => 'mautic.form.type.spacer',
            'mautic\\corebundle\\form\\type\\standalonebuttontype' => 'mautic.form.type.standalone_button',
            'mautic\\corebundle\\form\\type\\teltype' => 'mautic.form.type.tel',
            'mautic\\corebundle\\form\\type\\themelisttype' => 'mautic.form.type.theme_list',
            'mautic\\corebundle\\form\\type\\themeuploadtype' => 'mautic.form.type.theme.upload',
            'mautic\\corebundle\\form\\type\\yesnobuttongrouptype' => 'mautic.form.type.yesno_button_group',
            'mautic\\corebundle\\helper\\assetgenerationhelper' => 'mautic.helper.assetgeneration',
            'mautic\\corebundle\\helper\\bundlehelper' => 'mautic.helper.bundle',
            'mautic\\corebundle\\helper\\cachehelper' => 'mautic.helper.cache',
            'mautic\\corebundle\\helper\\cachestoragehelper' => 'mautic.helper.cache_storage',
            'mautic\\corebundle\\helper\\cookiehelper' => 'mautic.helper.cookie',
            'mautic\\corebundle\\helper\\coreparametershelper' => 'mautic.helper.core_parameters',
            'mautic\\corebundle\\helper\\encryptionhelper' => 'mautic.helper.encryption',
            'mautic\\corebundle\\helper\\iplookuphelper' => 'mautic.helper.ip_lookup',
            'mautic\\corebundle\\helper\\languagehelper' => 'mautic.helper.language',
            'mautic\\corebundle\\helper\\pathshelper' => 'mautic.helper.paths',
            'mautic\\corebundle\\helper\\phonenumberhelper' => 'mautic.helper.phone_number',
            'mautic\\corebundle\\helper\\templatinghelper' => 'mautic.helper.templating',
            'mautic\\corebundle\\helper\\themehelper' => 'mautic.helper.theme',
            'mautic\\corebundle\\helper\\updatehelper' => 'mautic.helper.update',
            'mautic\\corebundle\\helper\\urlhelper' => 'mautic.helper.url',
            'mautic\\corebundle\\helper\\userhelper' => 'mautic.helper.user',
            'mautic\\corebundle\\iplookup\\abstractlookup' => 'mautic.ip_lookup',
            'mautic\\corebundle\\loader\\routeloader' => 'mautic.route_loader',
            'mautic\\corebundle\\loader\\translationloader' => 'mautic.translation.loader',
            'mautic\\corebundle\\menu\\menubuilder' => 'mautic.menu.builder',
            'mautic\\corebundle\\menu\\menuhelper' => 'mautic.helper.menu',
            'mautic\\corebundle\\menu\\menurenderer' => 'mautic.menu_renderer',
            'mautic\\corebundle\\model\\auditlogmodel' => 'mautic.core.model.auditlog',
            'mautic\\corebundle\\model\\formmodel' => 'mautic.core.model.form',
            'mautic\\corebundle\\model\\messagequeuemodel' => 'mautic.core.model.messagequeue',
            'mautic\\corebundle\\model\\notificationmodel' => 'mautic.core.model.notification',
            'mautic\\corebundle\\security\\permissions\\corepermissions' => 'mautic.security',
            'mautic\\corebundle\\templating\\helper\\analyticshelper' => 'mautic.helper.template.analytics',
            'mautic\\corebundle\\templating\\helper\\buttonhelper' => 'mautic.helper.template.button',
            'mautic\\corebundle\\templating\\helper\\contenthelper' => 'mautic.helper.template.content',
            'mautic\\corebundle\\templating\\helper\\datehelper' => 'mautic.helper.template.date',
            'mautic\\corebundle\\templating\\helper\\exceptionhelper' => 'mautic.helper.template.exception',
            'mautic\\corebundle\\templating\\helper\\formatterhelper' => 'mautic.helper.template.formatter',
            'mautic\\corebundle\\templating\\helper\\gravatarhelper' => 'mautic.helper.template.gravatar',
            'mautic\\corebundle\\templating\\helper\\mautibothelper' => 'mautic.helper.template.mautibot',
            'mautic\\corebundle\\templating\\helper\\menuhelper' => 'mautic.helper.template.menu',
            'mautic\\corebundle\\templating\\helper\\securityhelper' => 'mautic.helper.template.security',
            'mautic\\corebundle\\templating\\helper\\sidebarcanvashelper' => 'mautic.helper.template.canvas',
            'mautic\\corebundle\\templating\\templatenameparser' => 'mautic.templating.name_parser',
            'mautic\\corebundle\\templating\\twig\\extension\\assetextension' => 'templating.twig.extension.asset',
            'mautic\\corebundle\\templating\\twig\\extension\\slotextension' => 'templating.twig.extension.slot',
            'mautic\\dashboardbundle\\form\\type\\filtertype' => 'mautic.dashboard.form.filter',
            'mautic\\dashboardbundle\\form\\type\\uploadtype' => 'mautic.dashboard.form.uplload',
            'mautic\\dashboardbundle\\form\\type\\widgettype' => 'mautic.dashboard.form.type.widget',
            'mautic\\dashboardbundle\\model\\dashboardmodel' => 'mautic.dashboard.model.dashboard',
            'mautic\\dynamiccontentbundle\\eventlistener\\buildjssubscriber' => 'mautic.dynamiccontent.js.subscriber',
            'mautic\\dynamiccontentbundle\\eventlistener\\campaignsubscriber' => 'mautic.dynamiccontent.campaignbundle.subscriber',
            'mautic\\dynamiccontentbundle\\eventlistener\\channelsubscriber' => 'mautic.dynamiccontent.subscriber.channel',
            'mautic\\dynamiccontentbundle\\eventlistener\\dynamiccontentsubscriber' => 'mautic.dynamiccontent.subscriber',
            'mautic\\dynamiccontentbundle\\eventlistener\\statssubscriber' => 'mautic.dynamiccontent.stats.subscriber',
            'mautic\\dynamiccontentbundle\\form\\type\\dynamiccontentdecisiontype' => 'mautic.form.type.dwcdecision_list',
            'mautic\\dynamiccontentbundle\\form\\type\\dynamiccontentlisttype' => 'mautic.form.type.dwc_list',
            'mautic\\dynamiccontentbundle\\form\\type\\dynamiccontentsendtype' => 'mautic.form.type.dwcsend_list',
            'mautic\\dynamiccontentbundle\\form\\type\\dynamiccontenttype' => 'mautic.form.type.dwc',
            'mautic\\dynamiccontentbundle\\helper\\dynamiccontenthelper' => 'mautic.helper.dynamiccontent',
            'mautic\\dynamiccontentbundle\\model\\dynamiccontentmodel' => 'mautic.dynamiccontent.model.dynamiccontent',
            'mautic\\emailbundle\\eventlistener\\broadcastsubscriber' => 'mautic.email.broadcast.subscriber',
            'mautic\\emailbundle\\eventlistener\\buildersubscriber' => 'mautic.emailbuilder.subscriber',
            'mautic\\emailbundle\\eventlistener\\calendarsubscriber' => 'mautic.email.calendarbundle.subscriber',
            'mautic\\emailbundle\\eventlistener\\campaignsubscriber' => 'mautic.email.campaignbundle.subscriber',
            'mautic\\emailbundle\\eventlistener\\channelsubscriber' => 'mautic.email.channel.subscriber',
            'mautic\\emailbundle\\eventlistener\\configsubscriber' => 'mautic.email.configbundle.subscriber',
            'mautic\\emailbundle\\eventlistener\\dashboardsubscriber' => 'mautic.email.dashboard.subscriber',
            'mautic\\emailbundle\\eventlistener\\emailsubscriber' => 'mautic.email.subscriber',
            'mautic\\emailbundle\\eventlistener\\formsubscriber' => 'mautic.email.formbundle.subscriber',
            'mautic\\emailbundle\\eventlistener\\leadsubscriber' => 'mautic.email.leadbundle.subscriber',
            'mautic\\emailbundle\\eventlistener\\messagequeuesubscriber' => 'mautic.email.messagequeue.subscriber',
            'mautic\\emailbundle\\eventlistener\\pagesubscriber' => 'mautic.email.pagebundle.subscriber',
            'mautic\\emailbundle\\eventlistener\\pointsubscriber' => 'mautic.email.pointbundle.subscriber',
            'mautic\\emailbundle\\eventlistener\\reportsubscriber' => 'mautic.email.reportbundle.subscriber',
            'mautic\\emailbundle\\eventlistener\\searchsubscriber' => 'mautic.email.search.subscriber',
            'mautic\\emailbundle\\eventlistener\\statssubscriber' => 'mautic.email.stats.subscriber',
            'mautic\\emailbundle\\eventlistener\\tokensubscriber' => 'mautic.emailtoken.subscriber',
            'mautic\\emailbundle\\eventlistener\\webhooksubscriber' => 'mautic.email.webhook.subscriber',
            'mautic\\emailbundle\\form\\type\\abtestpropertiestype' => 'mautic.email.type.email_abtest_settings',
            'mautic\\emailbundle\\form\\type\\batchsendtype' => 'mautic.email.type.batch_send',
            'mautic\\emailbundle\\form\\type\\configmonitoredemailtype' => 'mautic.form.type.coreconfig_monitored_email',
            'mautic\\emailbundle\\form\\type\\configmonitoredmailboxestype' => 'mautic.form.type.coreconfig_monitored_mailboxes',
            'mautic\\emailbundle\\form\\type\\configtype' => 'mautic.form.type.emailconfig',
            'mautic\\emailbundle\\form\\type\\dashboardemailsintimewidgettype' => 'mautic.form.type.email_dashboard_emails_in_time_widget',
            'mautic\\emailbundle\\form\\type\\emaillisttype' => 'mautic.form.type.email_list',
            'mautic\\emailbundle\\form\\type\\emailopentype' => 'mautic.form.type.emailopen_list',
            'mautic\\emailbundle\\form\\type\\emailsendtype' => 'mautic.form.type.emailsend_list',
            'mautic\\emailbundle\\form\\type\\emailtype' => 'mautic.form.type.email',
            'mautic\\emailbundle\\form\\type\\formsubmitactionuseremailtype' => 'mautic.form.type.formsubmit_sendemail_admin',
            'mautic\\emailbundle\\form\\type\\varianttype' => 'mautic.form.type.emailvariant',
            'mautic\\emailbundle\\helper\\mailhelper' => 'mautic.helper.mailer',
            'mautic\\emailbundle\\helper\\messagehelper' => 'mautic.helper.message',
            'mautic\\emailbundle\\model\\emailmodel' => 'mautic.email.model.email',
            'mautic\\emailbundle\\monitoredemail\\mailbox' => 'mautic.helper.mailbox',
            'mautic\\emailbundle\\swiftmailer\\transport\\amazontransport' => 'mautic.transport.amazon',
            'mautic\\emailbundle\\swiftmailer\\transport\\elasticemailtransport' => 'mautic.transport.elasticemail',
            'mautic\\emailbundle\\swiftmailer\\transport\\mailjettransport' => 'mautic.transport.mailjet',
            'mautic\\emailbundle\\swiftmailer\\transport\\mandrilltransport' => 'mautic.transport.mandrill',
            'mautic\\emailbundle\\swiftmailer\\transport\\postmarktransport' => 'mautic.transport.postmark',
            'mautic\\emailbundle\\swiftmailer\\transport\\sendgridtransport' => 'mautic.transport.sendgrid',
            'mautic\\emailbundle\\swiftmailer\\transport\\sparkposttransport' => 'mautic.transport.sparkpost',
            'mautic\\formbundle\\eventlistener\\calendarsubscriber' => 'mautic.form.calendarbundle.subscriber',
            'mautic\\formbundle\\eventlistener\\campaignsubscriber' => 'mautic.form.campaignbundle.subscriber',
            'mautic\\formbundle\\eventlistener\\dashboardsubscriber' => 'mautic.form.dashboard.subscriber',
            'mautic\\formbundle\\eventlistener\\emailsubscriber' => 'mautic.form.emailbundle.subscriber',
            'mautic\\formbundle\\eventlistener\\formsubscriber' => 'mautic.form.subscriber',
            'mautic\\formbundle\\eventlistener\\leadsubscriber' => 'mautic.form.leadbundle.subscriber',
            'mautic\\formbundle\\eventlistener\\pagesubscriber' => 'mautic.form.pagebundle.subscriber',
            'mautic\\formbundle\\eventlistener\\pointsubscriber' => 'mautic.form.pointbundle.subscriber',
            'mautic\\formbundle\\eventlistener\\reportsubscriber' => 'mautic.form.reportbundle.subscriber',
            'mautic\\formbundle\\eventlistener\\searchsubscriber' => 'mautic.form.search.subscriber',
            'mautic\\formbundle\\eventlistener\\statssubscriber' => 'mautic.form.stats.subscriber',
            'mautic\\formbundle\\eventlistener\\webhooksubscriber' => 'mautic.form.webhook.subscriber',
            'mautic\\formbundle\\form\\type\\actiontype' => 'mautic.form.type.action',
            'mautic\\formbundle\\form\\type\\campaigneventformfieldvaluetype' => 'mautic.form.type.campaignevent_form_field_value',
            'mautic\\formbundle\\form\\type\\campaigneventformsubmittype' => 'mautic.form.type.campaignevent_formsubmit',
            'mautic\\formbundle\\form\\type\\fieldtype' => 'mautic.form.type.field',
            'mautic\\formbundle\\form\\type\\formfieldcaptchatype' => 'mautic.form.type.field_propertycaptcha',
            'mautic\\formbundle\\form\\type\\formfieldgrouptype' => 'mautic.form.type.field_propertygroup',
            'mautic\\formbundle\\form\\type\\formfieldpagebreaktype' => 'muatic.form.type.field_propertypagebreak',
            'mautic\\formbundle\\form\\type\\formfieldplaceholdertype' => 'mautic.form.type.field_propertyplaceholder',
            'mautic\\formbundle\\form\\type\\formfieldselecttype' => 'mautic.form.type.field_propertyselect',
            'mautic\\formbundle\\form\\type\\formfieldtexttype' => 'mautic.form.type.field_propertytext',
            'mautic\\formbundle\\form\\type\\formlisttype' => 'mautic.form.type.form_list',
            'mautic\\formbundle\\form\\type\\formtype' => 'mautic.form.type.form',
            'mautic\\formbundle\\form\\type\\pointactionformsubmittype' => 'mautic.form.type.pointaction_formsubmit',
            'mautic\\formbundle\\form\\type\\submitactionemailtype' => 'mautic.form.type.form_submitaction_sendemail',
            'mautic\\formbundle\\form\\type\\submitactionreposttype' => 'mautic.form.type.form_submitaction_repost',
            'mautic\\formbundle\\helper\\formfieldhelper' => 'mautic.helper.form.field_helper',
            'mautic\\formbundle\\helper\\tokenhelper' => 'mautic.form.helper.token',
            'mautic\\formbundle\\model\\actionmodel' => 'mautic.form.model.action',
            'mautic\\formbundle\\model\\fieldmodel' => 'mautic.form.model.field',
            'mautic\\formbundle\\model\\formmodel' => 'mautic.form.model.form',
            'mautic\\formbundle\\model\\submissionmodel' => 'mautic.form.model.submission',
            'mautic\\installbundle\\configurator\\step\\checkstep' => 'mautic.install.configurator.step.check',
            'mautic\\installbundle\\configurator\\step\\doctrinestep' => 'mautic.install.configurator.step.doctrine',
            'mautic\\installbundle\\configurator\\step\\emailstep' => 'mautic.install.configurator.step.email',
            'mautic\\installbundle\\configurator\\step\\userstep' => 'mautic.install.configurator.step.user',
            'mautic\\leadbundle\\eventlistener\\buttonsubscriber' => 'mautic.lead.button.subscriber',
            'mautic\\leadbundle\\eventlistener\\calendarsubscriber' => 'mautic.lead.calendarbundle.subscriber',
            'mautic\\leadbundle\\eventlistener\\campaignsubscriber' => 'mautic.lead.campaignbundle.subscriber',
            'mautic\\leadbundle\\eventlistener\\companysubscriber' => 'mautic.lead.subscriber.company',
            'mautic\\leadbundle\\eventlistener\\dashboardsubscriber' => 'mautic.lead.dashboard.subscriber',
            'mautic\\leadbundle\\eventlistener\\doctrinesubscriber' => 'mautic.lead.doctrine.subscriber',
            'mautic\\leadbundle\\eventlistener\\emailsubscriber' => 'mautic.lead.emailbundle.subscriber',
            'mautic\\leadbundle\\eventlistener\\formsubscriber' => 'mautic.lead.formbundle.subscriber',
            'mautic\\leadbundle\\eventlistener\\leadsubscriber' => 'mautic.lead.subscriber',
            'mautic\\leadbundle\\eventlistener\\maintenancesubscriber' => 'mautic.lead.maintenance.subscriber',
            'mautic\\leadbundle\\eventlistener\\pointsubscriber' => 'mautic.lead.pointbundle.subscriber',
            'mautic\\leadbundle\\eventlistener\\reportsubscriber' => 'mautic.lead.reportbundle.subscriber',
            'mautic\\leadbundle\\eventlistener\\searchsubscriber' => 'mautic.lead.search.subscriber',
            'mautic\\leadbundle\\eventlistener\\statssubscriber' => 'mautic.lead.stats.subscriber',
            'mautic\\leadbundle\\eventlistener\\webhooksubscriber' => 'mautic.webhook.subscriber',
            'mautic\\leadbundle\\form\\type\\actionaddutmtagstype' => 'mautic.form.type.lead.submitaction.addutmtags',
            'mautic\\leadbundle\\form\\type\\actionremovedonotcontact' => 'mautic.form.type.lead.submitaction.removedonotcontact',
            'mautic\\leadbundle\\form\\type\\addtocompanyactiontype' => 'mautic.company.campaign.action.type.form',
            'mautic\\leadbundle\\form\\type\\batchtype' => 'mautic.form.type.lead_batch',
            'mautic\\leadbundle\\form\\type\\campaigneventleadfieldvaluetype' => 'mautic.form.type.campaignevent_lead_field_value',
            'mautic\\leadbundle\\form\\type\\companychangescoreactiontype' => 'mautic.form.type.company_change_score',
            'mautic\\leadbundle\\form\\type\\companylisttype' => 'mautic.company.list.type.form',
            'mautic\\leadbundle\\form\\type\\companymergetype' => 'mautic.company.merge.type.form',
            'mautic\\leadbundle\\form\\type\\companytype' => 'mautic.company.type.form',
            'mautic\\leadbundle\\form\\type\\contactfrequencytype' => 'mautic.form.type.lead_contact_frequency_rules',
            'mautic\\leadbundle\\form\\type\\dashboardleadsintimewidgettype' => 'mautic.form.type.lead_dashboard_leads_in_time_widget',
            'mautic\\leadbundle\\form\\type\\dashboardleadslifetimewidgettype' => 'mautic.form.type.lead_dashboard_leads_lifetime_widget',
            'mautic\\leadbundle\\form\\type\\devicetype' => 'mautic.form.type.leaddevice',
            'mautic\\leadbundle\\form\\type\\dnctype' => 'mautic.form.type.lead_batch_dnc',
            'mautic\\leadbundle\\form\\type\\emailtype' => 'mautic.form.type.lead_quickemail',
            'mautic\\leadbundle\\form\\type\\eventlisttype' => 'mautic.form.type.lead.submitaction.changelist',
            'mautic\\leadbundle\\form\\type\\fieldtype' => 'mautic.form.type.leadfield',
            'mautic\\leadbundle\\form\\type\\filtertype' => 'mautic.form.type.leadlist_filter',
            'mautic\\leadbundle\\form\\type\\formsubmitactionpointschangetype' => 'mautic.form.type.lead.submitaction.pointschange',
            'mautic\\leadbundle\\form\\type\\leadcategorytype' => 'mautic.form.type.lead_categories',
            'mautic\\leadbundle\\form\\type\\leadfieldstype' => 'mautic.form.type.lead_fields',
            'mautic\\leadbundle\\form\\type\\leadimportfieldtype' => 'mautic.form.type.lead_field_import',
            'mautic\\leadbundle\\form\\type\\leadimporttype' => 'mautic.form.type.lead_import',
            'mautic\\leadbundle\\form\\type\\leadlisttype' => 'mautic.form.type.leadlist_choices',
            'mautic\\leadbundle\\form\\type\\leadtype' => 'mautic.form.type.lead',
            'mautic\\leadbundle\\form\\type\\listactiontype' => 'mautic.form.type.leadlist_action',
            'mautic\\leadbundle\\form\\type\\listtriggertype' => 'mautic.form.type.leadlist_trigger',
            'mautic\\leadbundle\\form\\type\\listtype' => 'mautic.form.type.leadlist',
            'mautic\\leadbundle\\form\\type\\mergetype' => 'mautic.form.type.lead_merge',
            'mautic\\leadbundle\\form\\type\\modifyleadtagstype' => 'mautic.form.type.modify_lead_tags',
            'mautic\\leadbundle\\form\\type\\notetype' => 'mautic.form.type.leadnote',
            'mautic\\leadbundle\\form\\type\\pointactiontype' => 'mautic.form.type.leadpoints_action',
            'mautic\\leadbundle\\form\\type\\pointtriggertype' => 'mautic.form.type.leadpoints_trigger',
            'mautic\\leadbundle\\form\\type\\stagetype' => 'mautic.form.type.lead_batch_stage',
            'mautic\\leadbundle\\form\\type\\taglisttype' => 'mautic.form.type.lead_tags',
            'mautic\\leadbundle\\form\\type\\tagtype' => 'mautic.form.type.lead_tag',
            'mautic\\leadbundle\\form\\type\\updateleadactiontype' => 'mautic.form.type.updatelead_action',
            'mautic\\leadbundle\\form\\validator\\constraints\\leadlistaccessvalidator' => 'mautic.validator.leadlistaccess',
            'mautic\\leadbundle\\form\\validator\\constraints\\uniqueuseraliasvalidator' => 'mautic.lead.constraint.alias',
            'mautic\\leadbundle\\model\\companymodel' => 'mautic.lead.model.company',
            'mautic\\leadbundle\\model\\devicemodel' => 'mautic.lead.model.device',
            'mautic\\leadbundle\\model\\fieldmodel' => 'mautic.lead.model.field',
            'mautic\\leadbundle\\model\\leadmodel' => 'mautic.lead.model.lead',
            'mautic\\leadbundle\\model\\listmodel' => 'mautic.lead.model.list',
            'mautic\\leadbundle\\model\\notemodel' => 'mautic.lead.model.note',
            'mautic\\leadbundle\\templating\\helper\\avatarhelper' => 'mautic.helper.template.avatar',
            'mautic\\notificationbundle\\api\\onesignalapi' => 'mautic.notification.api',
            'mautic\\notificationbundle\\eventlistener\\buildjssubscriber' => 'mautic.core.js.subscriber',
            'mautic\\notificationbundle\\eventlistener\\campaignsubscriber' => 'mautic.notification.campaignbundle.subscriber',
            'mautic\\notificationbundle\\eventlistener\\channelsubscriber' => 'mautic.notification.subscriber.channel',
            'mautic\\notificationbundle\\eventlistener\\configsubscriber' => 'mautic.notification.configbundle.subscriber',
            'mautic\\notificationbundle\\eventlistener\\notificationsubscriber' => 'mautic.notification.notificationbundle.subscriber',
            'mautic\\notificationbundle\\eventlistener\\pagesubscriber' => 'mautic.notification.pagebundle.subscriber',
            'mautic\\notificationbundle\\eventlistener\\statssubscriber' => 'mautic.notification.stats.subscriber',
            'mautic\\notificationbundle\\form\\type\\configtype' => 'mautic.form.type.notificationconfig',
            'mautic\\notificationbundle\\form\\type\\notificationlisttype' => 'mautic.form.type.notification_list',
            'mautic\\notificationbundle\\form\\type\\notificationsendtype' => 'mautic.form.type.notificationsend_list',
            'mautic\\notificationbundle\\form\\type\\notificationtype' => 'mautic.form.type.notification',
            'mautic\\notificationbundle\\helper\\notificationhelper' => 'mautic.helper.notification',
            'mautic\\notificationbundle\\model\\notificationmodel' => 'mautic.notification.model.notification',
            'mautic\\pagebundle\\eventlistener\\buildersubscriber' => 'mautic.pagebuilder.subscriber',
            'mautic\\pagebundle\\eventlistener\\buildjssubscriber' => 'mautic.page.js.subscriber',
            'mautic\\pagebundle\\eventlistener\\calendarsubscriber' => 'mautic.page.calendarbundle.subscriber',
            'mautic\\pagebundle\\eventlistener\\campaignsubscriber' => 'mautic.page.campaignbundle.subscriber',
            'mautic\\pagebundle\\eventlistener\\configsubscriber' => 'mautic.page.configbundle.subscriber',
            'mautic\\pagebundle\\eventlistener\\dashboardsubscriber' => 'mautic.page.dashboard.subscriber',
            'mautic\\pagebundle\\eventlistener\\leadsubscriber' => 'mautic.page.leadbundle.subscriber',
            'mautic\\pagebundle\\eventlistener\\maintenancesubscriber' => 'mautic.page.maintenance.subscriber',
            'mautic\\pagebundle\\eventlistener\\pagesubscriber' => 'mautic.page.subscriber',
            'mautic\\pagebundle\\eventlistener\\pointsubscriber' => 'mautic.page.pointbundle.subscriber',
            'mautic\\pagebundle\\eventlistener\\reportsubscriber' => 'mautic.page.reportbundle.subscriber',
            'mautic\\pagebundle\\eventlistener\\searchsubscriber' => 'mautic.page.search.subscriber',
            'mautic\\pagebundle\\eventlistener\\statssubscriber' => 'mautic.page.stats.subscriber',
            'mautic\\pagebundle\\eventlistener\\tokensubscriber' => 'mautic.pagetoken.subscriber',
            'mautic\\pagebundle\\eventlistener\\webhooksubscriber' => 'mautic.page.webhook.subscriber',
            'mautic\\pagebundle\\form\\type\\abtestpropertiestype' => 'mautic.form.type.page_abtest_settings',
            'mautic\\pagebundle\\form\\type\\campaigneventpagehittype' => 'mautic.form.type.pagehit.campaign_trigger',
            'mautic\\pagebundle\\form\\type\\configtype' => 'mautic.form.type.pageconfig',
            'mautic\\pagebundle\\form\\type\\dashboardhitsintimewidgettype' => 'mautic.form.type.page_dashboard_hits_in_time_widget',
            'mautic\\pagebundle\\form\\type\\pagelisttype' => 'mautic.form.type.pagelist',
            'mautic\\pagebundle\\form\\type\\pagepublishdatestype' => 'mautic.form.type.page_publish_dates',
            'mautic\\pagebundle\\form\\type\\pagetype' => 'mautic.form.type.page',
            'mautic\\pagebundle\\form\\type\\pointactionpagehittype' => 'mautic.form.type.pointaction_pointhit',
            'mautic\\pagebundle\\form\\type\\pointactionurlhittype' => 'mautic.form.type.pointaction_urlhit',
            'mautic\\pagebundle\\form\\type\\redirectlisttype' => 'mautic.form.type.redirect_list',
            'mautic\\pagebundle\\form\\type\\slideshowglobalconfigtype' => 'mautic.form.type.slideshow_config',
            'mautic\\pagebundle\\form\\type\\slideshowslideconfigtype' => 'mautic.form.type.slideshow_slide_config',
            'mautic\\pagebundle\\form\\type\\varianttype' => 'mautic.form.type.pagevariant',
            'mautic\\pagebundle\\helper\\tokenhelper' => 'mautic.page.helper.token',
            'mautic\\pagebundle\\model\\pagemodel' => 'mautic.page.model.page',
            'mautic\\pagebundle\\model\\redirectmodel' => 'mautic.page.model.redirect',
            'mautic\\pagebundle\\model\\trackablemodel' => 'mautic.page.model.trackable',
            'mautic\\pagebundle\\model\\videomodel' => 'mautic.page.model.video',
            'mautic\\pluginbundle\\eventlistener\\campaignsubscriber' => 'mautic.plugin.campaignbundle.subscriber',
            'mautic\\pluginbundle\\eventlistener\\formsubscriber' => 'mautic.plugin.formbundle.subscriber',
            'mautic\\pluginbundle\\eventlistener\\leadsubscriber' => 'mautic.plugin.leadbundle.subscriber',
            'mautic\\pluginbundle\\eventlistener\\pointsubscriber' => 'mautic.plugin.pointbundle.subscriber',
            'mautic\\pluginbundle\\form\\type\\companyfieldstype' => 'mautic.form.type.integration.company.fields',
            'mautic\\pluginbundle\\form\\type\\detailstype' => 'mautic.form.type.integration.details',
            'mautic\\pluginbundle\\form\\type\\featuresettingstype' => 'mautic.form.type.integration.settings',
            'mautic\\pluginbundle\\form\\type\\fieldstype' => 'mautic.form.type.integration.fields',
            'mautic\\pluginbundle\\form\\type\\integrationconfigtype' => 'mautic.form.type.integration.config',
            'mautic\\pluginbundle\\form\\type\\integrationslisttype' => 'mautic.form.type.integration.list',
            'mautic\\pluginbundle\\form\\type\\keystype' => 'mautic.form.type.integration.keys',
            'mautic\\pluginbundle\\helper\\integrationhelper' => 'mautic.helper.integration',
            'mautic\\pluginbundle\\model\\pluginmodel' => 'mautic.plugin.model.plugin',
            'mautic\\pointbundle\\eventlistener\\dashboardsubscriber' => 'mautic.point.dashboard.subscriber',
            'mautic\\pointbundle\\eventlistener\\leadsubscriber' => 'mautic.point.leadbundle.subscriber',
            'mautic\\pointbundle\\eventlistener\\pointsubscriber' => 'mautic.point.subscriber',
            'mautic\\pointbundle\\eventlistener\\searchsubscriber' => 'mautic.point.search.subscriber',
            'mautic\\pointbundle\\eventlistener\\statssubscriber' => 'mautic.point.stats.subscriber',
            'mautic\\pointbundle\\form\\type\\genericpointsettingstype' => 'mautic.point.type.genericpoint_settings',
            'mautic\\pointbundle\\form\\type\\pointactiontype' => 'mautic.point.type.action',
            'mautic\\pointbundle\\form\\type\\pointtype' => 'mautic.point.type.form',
            'mautic\\pointbundle\\form\\type\\triggereventtype' => 'mautic.pointtrigger.type.action',
            'mautic\\pointbundle\\form\\type\\triggertype' => 'mautic.pointtrigger.type.form',
            'mautic\\pointbundle\\model\\pointmodel' => 'mautic.point.model.point',
            'mautic\\pointbundle\\model\\triggereventmodel' => 'mautic.point.model.triggerevent',
            'mautic\\pointbundle\\model\\triggermodel' => 'mautic.point.model.trigger',
            'mautic\\reportbundle\\eventlistener\\dashboardsubscriber' => 'mautic.report.dashboard.subscriber',
            'mautic\\reportbundle\\eventlistener\\reportsubscriber' => 'mautic.report.report.subscriber',
            'mautic\\reportbundle\\eventlistener\\searchsubscriber' => 'mautic.report.search.subscriber',
            'mautic\\reportbundle\\form\\type\\dynamicfilterstype' => 'mautic.form.type.report_dynamic_filters',
            'mautic\\reportbundle\\form\\type\\filterselectortype' => 'mautic.form.type.filter_selector',
            'mautic\\reportbundle\\form\\type\\reportfilterstype' => 'mautic.form.type.report_filters',
            'mautic\\reportbundle\\form\\type\\reporttype' => 'mautic.form.type.report',
            'mautic\\reportbundle\\form\\type\\reportwidgettype' => 'mautic.form.type.report_widget',
            'mautic\\reportbundle\\form\\type\\tableordertype' => 'mautic.form.type.table_order',
            'mautic\\reportbundle\\model\\reportmodel' => 'mautic.report.model.report',
            'mautic\\smsbundle\\api\\twilioapi' => 'mautic.sms.api',
            'mautic\\smsbundle\\eventlistener\\campaignsubscriber' => 'mautic.sms.campaignbundle.subscriber',
            'mautic\\smsbundle\\eventlistener\\channelsubscriber' => 'mautic.sms.channel.subscriber',
            'mautic\\smsbundle\\eventlistener\\configsubscriber' => 'mautic.sms.configbundle.subscriber',
            'mautic\\smsbundle\\eventlistener\\messagequeuesubscriber' => 'mautic.sms.message_queue.subscriber',
            'mautic\\smsbundle\\eventlistener\\smssubscriber' => 'mautic.sms.smsbundle.subscriber',
            'mautic\\smsbundle\\eventlistener\\statssubscriber' => 'mautic.sms.stats.subscriber',
            'mautic\\smsbundle\\form\\type\\configtype' => 'mautic.form.type.smsconfig',
            'mautic\\smsbundle\\form\\type\\smslisttype' => 'mautic.form.type.sms_list',
            'mautic\\smsbundle\\form\\type\\smssendtype' => 'mautic.form.type.smssend_list',
            'mautic\\smsbundle\\form\\type\\smstype' => 'mautic.form.type.sms',
            'mautic\\smsbundle\\helper\\smshelper' => 'mautic.helper.sms',
            'mautic\\smsbundle\\model\\smsmodel' => 'mautic.sms.model.sms',
            'mautic\\stagebundle\\eventlistener\\campaignsubscriber' => 'mautic.stage.campaignbundle.subscriber',
            'mautic\\stagebundle\\eventlistener\\dashboardsubscriber' => 'mautic.stage.dashboard.subscriber',
            'mautic\\stagebundle\\eventlistener\\leadsubscriber' => 'mautic.stage.leadbundle.subscriber',
            'mautic\\stagebundle\\eventlistener\\searchsubscriber' => 'mautic.stage.search.subscriber',
            'mautic\\stagebundle\\eventlistener\\stagesubscriber' => 'mautic.stage.subscriber',
            'mautic\\stagebundle\\eventlistener\\statssubscriber' => 'mautic.stage.stats.subscriber',
            'mautic\\stagebundle\\form\\type\\genericstagesettingstype' => 'mautic.point.type.genericstage_settings',
            'mautic\\stagebundle\\form\\type\\stageactionchangetype' => 'mautic.stage.type.action_change',
            'mautic\\stagebundle\\form\\type\\stageactionlisttype' => 'mautic.stage.type.action_list',
            'mautic\\stagebundle\\form\\type\\stageactiontype' => 'mautic.stage.type.action',
            'mautic\\stagebundle\\form\\type\\stagelisttype' => 'mautic.stage.type.stage_list',
            'mautic\\stagebundle\\form\\type\\stagetype' => 'mautic.stage.type.form',
            'mautic\\stagebundle\\model\\stagemodel' => 'mautic.stage.model.stage',
            'mautic\\userbundle\\entity\\permissionrepository' => 'mautic.permission.repository',
            'mautic\\userbundle\\entity\\userrepository' => 'mautic.user.repository',
            'mautic\\userbundle\\eventlistener\\configsubscriber' => 'mautic.user.config.subscriber',
            'mautic\\userbundle\\eventlistener\\routesubscriber' => 'mautic.user.route.subscriber',
            'mautic\\userbundle\\eventlistener\\searchsubscriber' => 'mautic.user.search.subscriber',
            'mautic\\userbundle\\eventlistener\\usersubscriber' => 'mautic.user.subscriber',
            'mautic\\userbundle\\form\\type\\configtype' => 'mautic.form.type.userconfig',
            'mautic\\userbundle\\form\\type\\passwordresetconfirmtype' => 'mautic.form.type.passwordresetconfirm',
            'mautic\\userbundle\\form\\type\\passwordresettype' => 'mautic.form.type.passwordreset',
            'mautic\\userbundle\\form\\type\\permissionlisttype' => 'mautic.form.type.permissionlist',
            'mautic\\userbundle\\form\\type\\permissionstype' => 'mautic.form.type.permissions',
            'mautic\\userbundle\\form\\type\\rolelisttype' => 'mautic.form.type.role_list',
            'mautic\\userbundle\\form\\type\\roletype' => 'mautic.form.type.role',
            'mautic\\userbundle\\form\\type\\userlisttype' => 'mautic.form.type.user_list',
            'mautic\\userbundle\\form\\type\\usertype' => 'mautic.form.type.user',
            'mautic\\userbundle\\model\\rolemodel' => 'mautic.user.model.role',
            'mautic\\userbundle\\model\\usermodel' => 'mautic.user.model.user',
            'mautic\\userbundle\\security\\authentication\\authenticationhandler' => 'mautic.security.authentication_handler',
            'mautic\\userbundle\\security\\authentication\\logouthandler' => 'mautic.security.logout_handler',
            'mautic\\userbundle\\security\\authenticator\\formauthenticator' => 'mautic.user.form_authenticator',
            'mautic\\userbundle\\security\\provider\\userprovider' => 'mautic.user.provider',
            'mautic\\userbundle\\security\\store\\idstore' => 'mautic.security.saml.id_store',
            'mautic\\userbundle\\security\\user\\usercreator' => 'mautic.security.saml.user_creator',
            'mautic\\webhookbundle\\eventlistener\\configsubscriber' => 'mautic.webhook.config.subscriber',
            'mautic\\webhookbundle\\eventlistener\\statssubscriber' => 'mautic.webhook.stats.subscriber',
            'mautic\\webhookbundle\\eventlistener\\webhooksubscriber' => 'mautic.webhook.audit.subscriber',
            'mautic\\webhookbundle\\form\\type\\configtype' => 'mautic.form.type.webhookconfig',
            'mautic\\webhookbundle\\form\\type\\webhooktype' => 'mautic.form.type.webhook',
            'mautic\\webhookbundle\\model\\webhookmodel' => 'mautic.webhook.model.webhook',
            'mauticplugin\\mauticcitrixbundle\\eventlistener\\campaignsubscriber' => 'mautic.citrix.campaignbundle.subscriber',
            'mauticplugin\\mauticcitrixbundle\\eventlistener\\emailsubscriber' => 'mautic.citrix.emailbundle.subscriber',
            'mauticplugin\\mauticcitrixbundle\\eventlistener\\formsubscriber' => 'mautic.citrix.formbundle.subscriber',
            'mauticplugin\\mauticcitrixbundle\\eventlistener\\leadsubscriber' => 'mautic.citrix.leadbundle.subscriber',
            'mauticplugin\\mauticcitrixbundle\\form\\type\\citrixactiontype' => 'mautic.form.type.citrix.submitaction',
            'mauticplugin\\mauticcitrixbundle\\form\\type\\citrixcampaignactiontype' => 'mautic.form.type.citrix.campaignaction',
            'mauticplugin\\mauticcitrixbundle\\form\\type\\citrixcampaigneventtype' => 'mautic.form.type.citrix.campaignevent',
            'mauticplugin\\mauticcitrixbundle\\form\\type\\citrixlisttype' => 'mautic.form.type.fieldslist.citrixlist',
            'mauticplugin\\mauticcitrixbundle\\model\\citrixmodel' => 'mautic.citrix.model.citrix',
            'mauticplugin\\mauticclearbitbundle\\eventlistener\\buttonsubscriber' => 'mautic.plugin.clearbit.button.subscriber',
            'mauticplugin\\mauticclearbitbundle\\eventlistener\\leadsubscriber' => 'mautic.plugin.clearbit.lead.subscriber',
            'mauticplugin\\mauticclearbitbundle\\form\\type\\batchlookuptype' => 'mautic.form.type.clearbit_batch_lookup',
            'mauticplugin\\mauticclearbitbundle\\form\\type\\lookuptype' => 'mautic.form.type.clearbit_lookup',
            'mauticplugin\\mauticclearbitbundle\\helper\\lookuphelper' => 'mautic.plugin.clearbit.lookup_helper',
            'mauticplugin\\mauticcloudstoragebundle\\eventlistener\\remoteassetbrowsesubscriber' => 'mautic.cloudstorage.remoteassetbrowse.subscriber',
            'mauticplugin\\mauticcloudstoragebundle\\form\\type\\openstacktype' => 'mautic.form.type.cloudstorage.openstack',
            'mauticplugin\\mauticcloudstoragebundle\\form\\type\\rackspacetype' => 'mautic.form.type.cloudstorage.rackspace',
            'mauticplugin\\mauticemailmarketingbundle\\form\\type\\constantcontacttype' => 'mautic.form.type.emailmarketing.constantcontact',
            'mauticplugin\\mauticemailmarketingbundle\\form\\type\\icontacttype' => 'mautic.form.type.emailmarketing.icontact',
            'mauticplugin\\mauticemailmarketingbundle\\form\\type\\mailchimptype' => 'mautic.form.type.emailmarketing.mailchimp',
            'mauticplugin\\mauticfocusbundle\\eventlistener\\focussubscriber' => 'mautic.focus.subscriber.focus',
            'mauticplugin\\mauticfocusbundle\\eventlistener\\formsubscriber' => 'mautic.focus.subscriber.form_bundle',
            'mauticplugin\\mauticfocusbundle\\eventlistener\\pagesubscriber' => 'mautic.focus.subscriber.page_bundle',
            'mauticplugin\\mauticfocusbundle\\eventlistener\\statssubscriber' => 'mautic.focus.stats.subscriber',
            'mauticplugin\\mauticfocusbundle\\eventlistener\\statsubscriber' => 'mautic.focus.subscriber.stat',
            'mauticplugin\\mauticfocusbundle\\form\\type\\colortype' => 'mautic.focus.form.type.color',
            'mauticplugin\\mauticfocusbundle\\form\\type\\contenttype' => 'mautic.focus.form.type.content',
            'mauticplugin\\mauticfocusbundle\\form\\type\\focuspropertiestype' => 'mautic.focus.form.type.properties',
            'mauticplugin\\mauticfocusbundle\\form\\type\\focustype' => 'mautic.focus.form.type.focus',
            'mauticplugin\\mauticfocusbundle\\form\\type\\propertiestype' => 'mautic.focus.form.type.entity_properties',
            'mauticplugin\\mauticfocusbundle\\helper\\tokenhelper' => 'mautic.focus.helper.token',
            'mauticplugin\\mauticfocusbundle\\model\\focusmodel' => 'mautic.focus.model.focus',
            'mauticplugin\\mauticfullcontactbundle\\eventlistener\\buttonsubscriber' => 'mautic.plugin.fullcontact.button.subscriber',
            'mauticplugin\\mauticfullcontactbundle\\eventlistener\\leadsubscriber' => 'mautic.plugin.fullcontact.lead.subscriber',
            'mauticplugin\\mauticfullcontactbundle\\form\\type\\batchlookuptype' => 'mautic.form.type.fullcontact_batch_lookup',
            'mauticplugin\\mauticfullcontactbundle\\form\\type\\lookuptype' => 'mautic.form.type.fullcontact_lookup',
            'mauticplugin\\mauticfullcontactbundle\\helper\\lookuphelper' => 'mautic.plugin.fullcontact.lookup_helper',
            'mauticplugin\\mauticsocialbundle\\eventlistener\\campaignsubscriber' => 'mautic.social.campaignbundle.subscriber',
            'mauticplugin\\mauticsocialbundle\\eventlistener\\channelsubscriber' => 'mautic.social.subscriber.channel',
            'mauticplugin\\mauticsocialbundle\\eventlistener\\configsubscriber' => 'mautic.social.configbundle.subscriber',
            'mauticplugin\\mauticsocialbundle\\eventlistener\\formsubscriber' => 'mautic.social.formbundle.subscriber',
            'mauticplugin\\mauticsocialbundle\\form\\type\\configtype' => 'mautic.social.config',
            'mauticplugin\\mauticsocialbundle\\form\\type\\facebooktype' => 'mautic.form.type.social.facebook',
            'mauticplugin\\mauticsocialbundle\\form\\type\\googleplustype' => 'mautic.form.type.social.googleplus',
            'mauticplugin\\mauticsocialbundle\\form\\type\\linkedintype' => 'mautic.form.type.social.linkedin',
            'mauticplugin\\mauticsocialbundle\\form\\type\\monitoringtype' => 'mautic.social.form.type.monitoring',
            'mauticplugin\\mauticsocialbundle\\form\\type\\sociallogintype' => 'mautic.form.type.social.sociallogin',
            'mauticplugin\\mauticsocialbundle\\form\\type\\tweettype' => 'mautic.social.form.type.twitter.tweet',
            'mauticplugin\\mauticsocialbundle\\form\\type\\twitterabstracttype' => 'mautic.social.form.type.network.twitter.abstract',
            'mauticplugin\\mauticsocialbundle\\form\\type\\twittercustomtype' => 'mautic.social.form.type.network.twitter.custom',
            'mauticplugin\\mauticsocialbundle\\form\\type\\twitterhashtagtype' => 'mautic.social.form.type.network.twitter.hashtag',
            'mauticplugin\\mauticsocialbundle\\form\\type\\twittermentiontype' => 'mautic.social.form.type.network.twitter.mention',
            'mauticplugin\\mauticsocialbundle\\form\\type\\twittertype' => 'mautic.form.type.social.twitter',
            'mauticplugin\\mauticsocialbundle\\helper\\campaigneventhelper' => 'mautic.social.helper.campaign',
            'mauticplugin\\mauticsocialbundle\\model\\monitoringmodel' => 'mautic.social.model.monitoring',
            'mauticplugin\\mauticsocialbundle\\model\\postcountmodel' => 'mautic.social.model.postcount',
            'mauticplugin\\mautictestbundle\\model\\somethingmodel' => 'mautic.mautictest.model.something',
            'security.user_checker.login' => 'security.user_checker.dev',
            'security.user_checker.main' => 'security.user_checker.dev',
            'security.user_checker.public' => 'security.user_checker.dev',
            'security.user_checker.saml_discovery' => 'security.user_checker.dev',
            'security.user_checker.sso_login' => 'security.user_checker.dev',
            'serializer' => 'jms_serializer',
            'services_twilio' => 'mautic.twilio.service',
            'session.storage' => 'session.storage.native',
            'swiftmailer.mailer' => 'swiftmailer.mailer.default',
            'swiftmailer.mailer.transport.mautic.transport.amazon' => 'mautic.transport.amazon',
            'swiftmailer.mailer.transport.mautic.transport.elasticemail' => 'mautic.transport.elasticemail',
            'swiftmailer.mailer.transport.mautic.transport.mailjet' => 'mautic.transport.mailjet',
            'swiftmailer.mailer.transport.mautic.transport.mandrill' => 'mautic.transport.mandrill',
            'swiftmailer.mailer.transport.mautic.transport.postmark' => 'mautic.transport.postmark',
            'swiftmailer.mailer.transport.mautic.transport.sendgrid' => 'mautic.transport.sendgrid',
            'swiftmailer.mailer.transport.mautic.transport.sparkpost' => 'mautic.transport.sparkpost',
            'swiftmailer.plugin.messagelogger' => 'swiftmailer.mailer.default.plugin.messagelogger',
            'swiftmailer.transport' => 'swiftmailer.mailer.default.transport',
        );
    }

    /**
     * {@inheritdoc}
     */
    public function compile()
    {
        throw new LogicException('You cannot compile a dumped frozen container.');
    }

    /**
     * {@inheritdoc}
     */
    public function isFrozen()
    {
        return true;
    }

    /**
     * Gets the 'annotation_reader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Common\Annotations\CachedReader A Doctrine\Common\Annotations\CachedReader instance
     */
    protected function getAnnotationReaderService()
    {
        return $this->services['annotation_reader'] = new \Doctrine\Common\Annotations\CachedReader(new \Doctrine\Common\Annotations\AnnotationReader(), new \Doctrine\Common\Cache\FilesystemCache((__DIR__.'/annotations')), true);
    }

    /**
     * Gets the 'assets.context' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Asset\Context\RequestStackContext A Symfony\Component\Asset\Context\RequestStackContext instance
     */
    protected function getAssets_ContextService()
    {
        return $this->services['assets.context'] = new \Symfony\Component\Asset\Context\RequestStackContext($this->get('request_stack'));
    }

    /**
     * Gets the 'assets.packages' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Asset\Packages A Symfony\Component\Asset\Packages instance
     */
    protected function getAssets_PackagesService()
    {
        return $this->services['assets.packages'] = new \Symfony\Component\Asset\Packages(new \Symfony\Component\Asset\PathPackage('', new \Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy(), $this->get('assets.context')), array());
    }

    /**
     * Gets the 'bazinga.oauth.controller.login' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Bazinga\OAuthServerBundle\Controller\LoginController A Bazinga\OAuthServerBundle\Controller\LoginController instance
     */
    protected function getBazinga_Oauth_Controller_LoginService()
    {
        return $this->services['bazinga.oauth.controller.login'] = new \Bazinga\OAuthServerBundle\Controller\LoginController($this->get('templating'), $this->get('security.context'), $this->get('bazinga.oauth.provider.token_provider'));
    }

    /**
     * Gets the 'bazinga.oauth.controller.server' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Bazinga\OAuthServerBundle\Controller\ServerController A Bazinga\OAuthServerBundle\Controller\ServerController instance
     */
    protected function getBazinga_Oauth_Controller_ServerService()
    {
        return $this->services['bazinga.oauth.controller.server'] = new \Bazinga\OAuthServerBundle\Controller\ServerController($this->get('router'), $this->get('templating'), $this->get('bazinga.oauth.server_service'), $this->get('bazinga.oauth.provider.token_provider'));
    }

    /**
     * Gets the 'bazinga.oauth.event_listener.exception' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Bazinga\OAuthServerBundle\EventListener\OAuthExceptionListener A Bazinga\OAuthServerBundle\EventListener\OAuthExceptionListener instance
     */
    protected function getBazinga_Oauth_EventListener_ExceptionService()
    {
        return $this->services['bazinga.oauth.event_listener.exception'] = new \Bazinga\OAuthServerBundle\EventListener\OAuthExceptionListener();
    }

    /**
     * Gets the 'bazinga.oauth.event_listener.request' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ApiBundle\EventListener\OAuth1\OAuthRequestListener A Mautic\ApiBundle\EventListener\OAuth1\OAuthRequestListener instance
     */
    protected function getBazinga_Oauth_EventListener_RequestService()
    {
        return $this->services['bazinga.oauth.event_listener.request'] = new \Mautic\ApiBundle\EventListener\OAuth1\OAuthRequestListener();
    }

    /**
     * Gets the 'bazinga.oauth.server_service' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Bazinga\OAuthServerBundle\Service\OAuthServerService A Bazinga\OAuthServerBundle\Service\OAuthServerService instance
     */
    protected function getBazinga_Oauth_ServerServiceService()
    {
        $this->services['bazinga.oauth.server_service'] = $instance = new \Bazinga\OAuthServerBundle\Service\OAuthServerService(new \Bazinga\OAuthServerBundle\Doctrine\Provider\ConsumerProvider($this->get('bazinga.oauth.entity_manager'), 'Mautic\\ApiBundle\\Entity\\oAuth1\\Consumer'), $this->get('bazinga.oauth.provider.token_provider'), $this->get('mautic.api.oauth1.nonce_provider'), $this->get('logger'));

        $instance->addSignatureService($this->get('bazinga.oauth.signature.plaintext'));
        $instance->addSignatureService($this->get('bazinga.oauth.signature.hmac_sha1'));

        return $instance;
    }

    /**
     * Gets the 'bazinga.oauth.signature.hmac_sha1' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Bazinga\OAuthServerBundle\Service\Signature\OAuthHmacSha1Signature A Bazinga\OAuthServerBundle\Service\Signature\OAuthHmacSha1Signature instance
     */
    protected function getBazinga_Oauth_Signature_HmacSha1Service()
    {
        return $this->services['bazinga.oauth.signature.hmac_sha1'] = new \Bazinga\OAuthServerBundle\Service\Signature\OAuthHmacSha1Signature();
    }

    /**
     * Gets the 'bazinga.oauth.signature.plaintext' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Bazinga\OAuthServerBundle\Service\Signature\OAuthPlainTextSignature A Bazinga\OAuthServerBundle\Service\Signature\OAuthPlainTextSignature instance
     */
    protected function getBazinga_Oauth_Signature_PlaintextService()
    {
        return $this->services['bazinga.oauth.signature.plaintext'] = new \Bazinga\OAuthServerBundle\Service\Signature\OAuthPlainTextSignature();
    }

    /**
     * Gets the 'cache_clearer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer A Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer instance
     */
    protected function getCacheClearerService()
    {
        return $this->services['cache_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer(array());
    }

    /**
     * Gets the 'cache_warmer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate A Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate instance
     */
    protected function getCacheWarmerService()
    {
        $a = $this->get('kernel');
        $b = $this->get('templating.filename_parser');

        $c = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder($a, $b, ($this->targetDirs[2].'/Resources'));

        return $this->services['cache_warmer'] = new \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate(array(0 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer($c, $this->get('templating.locator')), 1 => $this->get('kernel.class_cache.cache_warmer'), 2 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer($this->get('translator.default')), 3 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer($this->get('router')), 4 => new \Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer($this->get('doctrine')), 5 => new \Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer($this, $c, array()), 6 => new \Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer($this->get('twig'), new \Symfony\Bundle\TwigBundle\TemplateIterator($a, $this->targetDirs[2], array()))));
    }

    /**
     * Gets the 'config_cache_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Config\ResourceCheckerConfigCacheFactory A Symfony\Component\Config\ResourceCheckerConfigCacheFactory instance
     */
    protected function getConfigCacheFactoryService()
    {
        return $this->services['config_cache_factory'] = new \Symfony\Component\Config\ResourceCheckerConfigCacheFactory(array(0 => new \Symfony\Component\Config\Resource\SelfCheckingResourceChecker(), 1 => new \Symfony\Component\Config\Resource\BCResourceInterfaceChecker()));
    }

    /**
     * Gets the 'data_collector.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\DataCollector\FormDataCollector A Symfony\Component\Form\Extension\DataCollector\FormDataCollector instance
     */
    protected function getDataCollector_FormService()
    {
        return $this->services['data_collector.form'] = new \Symfony\Component\Form\Extension\DataCollector\FormDataCollector($this->get('data_collector.form.extractor'));
    }

    /**
     * Gets the 'data_collector.form.extractor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\DataCollector\FormDataExtractor A Symfony\Component\Form\Extension\DataCollector\FormDataExtractor instance
     */
    protected function getDataCollector_Form_ExtractorService()
    {
        return $this->services['data_collector.form.extractor'] = new \Symfony\Component\Form\Extension\DataCollector\FormDataExtractor();
    }

    /**
     * Gets the 'data_collector.request' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\DataCollector\RequestDataCollector A Symfony\Component\HttpKernel\DataCollector\RequestDataCollector instance
     */
    protected function getDataCollector_RequestService()
    {
        return $this->services['data_collector.request'] = new \Symfony\Component\HttpKernel\DataCollector\RequestDataCollector();
    }

    /**
     * Gets the 'data_collector.router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector A Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector instance
     */
    protected function getDataCollector_RouterService()
    {
        return $this->services['data_collector.router'] = new \Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector();
    }

    /**
     * Gets the 'data_collector.translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\DataCollector\TranslationDataCollector A Symfony\Component\Translation\DataCollector\TranslationDataCollector instance
     */
    protected function getDataCollector_TranslationService()
    {
        return $this->services['data_collector.translation'] = new \Symfony\Component\Translation\DataCollector\TranslationDataCollector($this->get('translator'));
    }

    /**
     * Gets the 'debril.file' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Debril\RssAtomBundle\Driver\FileDriver A Debril\RssAtomBundle\Driver\FileDriver instance
     */
    protected function getDebril_FileService()
    {
        return $this->services['debril.file'] = new \Debril\RssAtomBundle\Driver\FileDriver();
    }

    /**
     * Gets the 'debril.formatter.atom' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Debril\RssAtomBundle\Protocol\Formatter\FeedAtomFormatter A Debril\RssAtomBundle\Protocol\Formatter\FeedAtomFormatter instance
     */
    protected function getDebril_Formatter_AtomService()
    {
        return $this->services['debril.formatter.atom'] = new \Debril\RssAtomBundle\Protocol\Formatter\FeedAtomFormatter();
    }

    /**
     * Gets the 'debril.formatter.rss' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Debril\RssAtomBundle\Protocol\Formatter\FeedRssFormatter A Debril\RssAtomBundle\Protocol\Formatter\FeedRssFormatter instance
     */
    protected function getDebril_Formatter_RssService()
    {
        return $this->services['debril.formatter.rss'] = new \Debril\RssAtomBundle\Protocol\Formatter\FeedRssFormatter();
    }

    /**
     * Gets the 'debril.http.curl' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Debril\RssAtomBundle\Driver\HttpCurlDriver A Debril\RssAtomBundle\Driver\HttpCurlDriver instance
     */
    protected function getDebril_Http_CurlService()
    {
        return $this->services['debril.http.curl'] = new \Debril\RssAtomBundle\Driver\HttpCurlDriver(array());
    }

    /**
     * Gets the 'debril.http.guzzle_bridge' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Debril\RssAtomBundle\Driver\GuzzleBridgeDriver A Debril\RssAtomBundle\Driver\GuzzleBridgeDriver instance
     */
    protected function getDebril_Http_GuzzleBridgeService()
    {
        return $this->services['debril.http.guzzle_bridge'] = new \Debril\RssAtomBundle\Driver\GuzzleBridgeDriver();
    }

    /**
     * Gets the 'debril.parser.atom' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Debril\RssAtomBundle\Protocol\Parser\AtomParser A Debril\RssAtomBundle\Protocol\Parser\AtomParser instance
     */
    protected function getDebril_Parser_AtomService()
    {
        $this->services['debril.parser.atom'] = $instance = new \Debril\RssAtomBundle\Protocol\Parser\AtomParser();

        $instance->setDateFormats(array(0 => 'Y-m-d\\TH:i:sP', 1 => 'D, d M Y H:i:s O', 2 => 'Y-m-d\\TH:i:sP', 3 => 'Y-m-d\\TH:i:s.uP', 4 => 'Y-m-d', 5 => 'd/m/Y', 6 => 'd M Y H:i:s P', 7 => 'D, d M Y H:i O', 8 => 'D, d M Y H:i:s O', 9 => 'D M d Y H:i:s e'));

        return $instance;
    }

    /**
     * Gets the 'debril.parser.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Debril\RssAtomBundle\Protocol\Parser\Factory A Debril\RssAtomBundle\Protocol\Parser\Factory instance
     */
    protected function getDebril_Parser_FactoryService()
    {
        $this->services['debril.parser.factory'] = $instance = new \Debril\RssAtomBundle\Protocol\Parser\Factory();

        $instance->setFeedClass('Debril\\RssAtomBundle\\Protocol\\Parser\\FeedContent');
        $instance->setItemClass('Debril\\RssAtomBundle\\Protocol\\Parser\\Item');

        return $instance;
    }

    /**
     * Gets the 'debril.parser.rdf' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Debril\RssAtomBundle\Protocol\Parser\RdfParser A Debril\RssAtomBundle\Protocol\Parser\RdfParser instance
     */
    protected function getDebril_Parser_RdfService()
    {
        $this->services['debril.parser.rdf'] = $instance = new \Debril\RssAtomBundle\Protocol\Parser\RdfParser();

        $instance->setDateFormats(array(0 => 'Y-m-d\\TH:i:sP', 1 => 'D, d M Y H:i:s O', 2 => 'Y-m-d\\TH:i:sP', 3 => 'Y-m-d\\TH:i:s.uP', 4 => 'Y-m-d', 5 => 'd/m/Y', 6 => 'd M Y H:i:s P', 7 => 'D, d M Y H:i O', 8 => 'D, d M Y H:i:s O', 9 => 'D M d Y H:i:s e'));

        return $instance;
    }

    /**
     * Gets the 'debril.parser.rss' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Debril\RssAtomBundle\Protocol\Parser\RssParser A Debril\RssAtomBundle\Protocol\Parser\RssParser instance
     */
    protected function getDebril_Parser_RssService()
    {
        $this->services['debril.parser.rss'] = $instance = new \Debril\RssAtomBundle\Protocol\Parser\RssParser();

        $instance->setDateFormats(array(0 => 'Y-m-d\\TH:i:sP', 1 => 'D, d M Y H:i:s O', 2 => 'Y-m-d\\TH:i:sP', 3 => 'Y-m-d\\TH:i:s.uP', 4 => 'Y-m-d', 5 => 'd/m/Y', 6 => 'd M Y H:i:s P', 7 => 'D, d M Y H:i O', 8 => 'D, d M Y H:i:s O', 9 => 'D M d Y H:i:s e'));

        return $instance;
    }

    /**
     * Gets the 'debril.parser.xml' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Debril\RssAtomBundle\Protocol\Parser\XmlParser A Debril\RssAtomBundle\Protocol\Parser\XmlParser instance
     */
    protected function getDebril_Parser_XmlService()
    {
        return $this->services['debril.parser.xml'] = new \Debril\RssAtomBundle\Protocol\Parser\XmlParser();
    }

    /**
     * Gets the 'debril.provider.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Debril\RssAtomBundle\Provider\MockProvider A Debril\RssAtomBundle\Provider\MockProvider instance
     */
    protected function getDebril_Provider_DefaultService()
    {
        return $this->services['debril.provider.default'] = new \Debril\RssAtomBundle\Provider\MockProvider();
    }

    /**
     * Gets the 'debril.provider.mock' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Debril\RssAtomBundle\Provider\MockProvider A Debril\RssAtomBundle\Provider\MockProvider instance
     */
    protected function getDebril_Provider_MockService()
    {
        return $this->services['debril.provider.mock'] = new \Debril\RssAtomBundle\Provider\MockProvider();
    }

    /**
     * Gets the 'debril.reader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Debril\RssAtomBundle\Protocol\FeedReader A Debril\RssAtomBundle\Protocol\FeedReader instance
     */
    protected function getDebril_ReaderService()
    {
        $this->services['debril.reader'] = $instance = new \Debril\RssAtomBundle\Protocol\FeedReader($this->get('debril.http.curl'), $this->get('debril.parser.factory'), $this->get('debril.parser.xml'));

        $instance->addParser($this->get('debril.parser.rss'));
        $instance->addParser($this->get('debril.parser.rdf'));
        $instance->addParser($this->get('debril.parser.atom'));

        return $instance;
    }

    /**
     * Gets the 'debug.controller_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\TraceableControllerResolver A Symfony\Component\HttpKernel\Controller\TraceableControllerResolver instance
     */
    protected function getDebug_ControllerResolverService()
    {
        return $this->services['debug.controller_resolver'] = new \Symfony\Component\HttpKernel\Controller\TraceableControllerResolver(new \Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver($this, $this->get('controller_name_converter'), $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE)), $this->get('debug.stopwatch'));
    }

    /**
     * Gets the 'debug.debug_handlers_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener A Symfony\Component\HttpKernel\EventListener\DebugHandlersListener instance
     */
    protected function getDebug_DebugHandlersListenerService()
    {
        return $this->services['debug.debug_handlers_listener'] = new \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener(NULL, $this->get('monolog.logger.php', ContainerInterface::NULL_ON_INVALID_REFERENCE), -4182, NULL, true, NULL);
    }

    /**
     * Gets the 'debug.event_dispatcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher A Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher instance
     */
    protected function getDebug_EventDispatcherService()
    {
        $this->services['debug.event_dispatcher'] = $instance = new \Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher(new \Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher($this), $this->get('debug.stopwatch'), $this->get('monolog.logger.event', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        $instance->addListenerService('console.exception', array(0 => 'mautic.kernel.listener.command_exception', 1 => 'onConsoleException'), 0);
        $instance->addListenerService('console.terminate', array(0 => 'mautic.kernel.listener.command_terminate', 1 => 'onConsoleTerminate'), 0);
        $instance->addListenerService('kernel.controller', array(0 => 'data_collector.router', 1 => 'onKernelController'), 0);
        $instance->addListenerService('kernel.response', array(0 => 'monolog.handler.chrome', 1 => 'onKernelResponse'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'knp_menu.listener.voters', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'bazinga.oauth.event_listener.request', 1 => 'onEarlyKernelRequest'), 255);
        $instance->addListenerService('kernel.exception', array(0 => 'bazinga.oauth.event_listener.exception', 1 => 'onKernelException'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'fos_rest.body_listener', 1 => 'onKernelRequest'), 10);
        $instance->addListenerService('oneup_uploader.validation', array(0 => 'oneup_uploader.validation_listener.max_size', 1 => 'onValidate'), 0);
        $instance->addListenerService('oneup_uploader.validation', array(0 => 'oneup_uploader.validation_listener.allowed_mimetype', 1 => 'onValidate'), 0);
        $instance->addListenerService('oneup_uploader.validation', array(0 => 'oneup_uploader.validation_listener.disallowed_mimetype', 1 => 'onValidate'), 0);
        $instance->addListenerService('kernel.exception', array(0 => 'mautic.exception.listener', 1 => 'onKernelException'), '255');
        $instance->addListenerService('fos_oauth_server.pre_authorization_process', array(0 => 'mautic.api.oauth.event_listener', 1 => 'onPreAuthorizationProcess'), 0);
        $instance->addListenerService('fos_oauth_server.post_authorization_process', array(0 => 'mautic.api.oauth.event_listener', 1 => 'onPostAuthorizationProcess'), 0);
        $instance->addSubscriberService('response_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ResponseListener');
        $instance->addSubscriberService('streamed_response_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\StreamedResponseListener');
        $instance->addSubscriberService('locale_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener');
        $instance->addSubscriberService('translator_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\TranslatorListener');
        $instance->addSubscriberService('validate_request_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ValidateRequestListener');
        $instance->addSubscriberService('session_listener', 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\SessionListener');
        $instance->addSubscriberService('session.save_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\SaveSessionListener');
        $instance->addSubscriberService('fragment.listener', 'Symfony\\Component\\HttpKernel\\EventListener\\FragmentListener');
        $instance->addSubscriberService('profiler_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ProfilerListener');
        $instance->addSubscriberService('data_collector.request', 'Symfony\\Component\\HttpKernel\\DataCollector\\RequestDataCollector');
        $instance->addSubscriberService('router_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\RouterListener');
        $instance->addSubscriberService('debug.debug_handlers_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\DebugHandlersListener');
        $instance->addSubscriberService('security.firewall', 'Symfony\\Component\\Security\\Http\\Firewall');
        $instance->addSubscriberService('security.rememberme.response_listener', 'Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener');
        $instance->addSubscriberService('monolog.handler.console', 'Symfony\\Bridge\\Monolog\\Handler\\ConsoleHandler');
        $instance->addSubscriberService('swiftmailer.email_sender.listener', 'Symfony\\Bundle\\SwiftmailerBundle\\EventListener\\EmailSenderListener');
        $instance->addSubscriberService('twig.exception_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ExceptionListener');
        $instance->addSubscriberService('mautic.core.subscriber', 'Mautic\\CoreBundle\\EventListener\\CoreSubscriber');
        $instance->addSubscriberService('mautic.core.environment.subscriber', 'Mautic\\CoreBundle\\EventListener\\EnvironmentSubscriber');
        $instance->addSubscriberService('mautic.core.configbundle.subscriber', 'Mautic\\CoreBundle\\EventListener\\ConfigSubscriber');
        $instance->addSubscriberService('mautic.webpush.js.subscriber', 'Mautic\\CoreBundle\\EventListener\\BuildJsSubscriber');
        $instance->addSubscriberService('mautic.core.dashboard.subscriber', 'Mautic\\CoreBundle\\EventListener\\DashboardSubscriber');
        $instance->addSubscriberService('mautic.core.maintenance.subscriber', 'Mautic\\CoreBundle\\EventListener\\MaintenanceSubscriber');
        $instance->addSubscriberService('mautic.core.stats.subscriber', 'Mautic\\CoreBundle\\EventListener\\StatsSubscriber');
        $instance->addSubscriberService('mautic.core.assets.subscriber', 'Mautic\\CoreBundle\\EventListener\\AssetsSubscriber');
        $instance->addSubscriberService('mautic.core.errorhandler.subscriber', 'Mautic\\CoreBundle\\EventListener\\ErrorHandlingListener');
        $instance->addSubscriberService('mautic.api.subscriber', 'Mautic\\ApiBundle\\EventListener\\ApiSubscriber');
        $instance->addSubscriberService('mautic.api.configbundle.subscriber', 'Mautic\\ApiBundle\\EventListener\\ConfigSubscriber');
        $instance->addSubscriberService('mautic.api.search.subscriber', 'Mautic\\ApiBundle\\EventListener\\SearchSubscriber');
        $instance->addSubscriberService('mautic.asset.subscriber', 'Mautic\\AssetBundle\\EventListener\\AssetSubscriber');
        $instance->addSubscriberService('mautic.asset.pointbundle.subscriber', 'Mautic\\AssetBundle\\EventListener\\PointSubscriber');
        $instance->addSubscriberService('mautic.asset.formbundle.subscriber', 'Mautic\\AssetBundle\\EventListener\\FormSubscriber');
        $instance->addSubscriberService('mautic.asset.campaignbundle.subscriber', 'Mautic\\AssetBundle\\EventListener\\CampaignSubscriber');
        $instance->addSubscriberService('mautic.asset.reportbundle.subscriber', 'Mautic\\AssetBundle\\EventListener\\ReportSubscriber');
        $instance->addSubscriberService('mautic.asset.builder.subscriber', 'Mautic\\AssetBundle\\EventListener\\BuilderSubscriber');
        $instance->addSubscriberService('mautic.asset.leadbundle.subscriber', 'Mautic\\AssetBundle\\EventListener\\LeadSubscriber');
        $instance->addSubscriberService('mautic.asset.pagebundle.subscriber', 'Mautic\\AssetBundle\\EventListener\\PageSubscriber');
        $instance->addSubscriberService('mautic.asset.emailbundle.subscriber', 'Mautic\\AssetBundle\\EventListener\\EmailSubscriber');
        $instance->addSubscriberService('mautic.asset.configbundle.subscriber', 'Mautic\\AssetBundle\\EventListener\\ConfigSubscriber');
        $instance->addSubscriberService('mautic.asset.search.subscriber', 'Mautic\\AssetBundle\\EventListener\\SearchSubscriber');
        $instance->addSubscriberService('mautic.asset.stats.subscriber', 'Mautic\\AssetBundle\\EventListener\\StatsSubscriber');
        $instance->addSubscriberService('oneup_uploader.pre_upload', 'Mautic\\AssetBundle\\EventListener\\UploadSubscriber');
        $instance->addSubscriberService('mautic.asset.dashboard.subscriber', 'Mautic\\AssetBundle\\EventListener\\DashboardSubscriber');
        $instance->addSubscriberService('mautic.campaign.subscriber', 'Mautic\\CampaignBundle\\EventListener\\CampaignSubscriber');
        $instance->addSubscriberService('mautic.campaign.leadbundle.subscriber', 'Mautic\\CampaignBundle\\EventListener\\LeadSubscriber');
        $instance->addSubscriberService('mautic.campaign.calendarbundle.subscriber', 'Mautic\\CampaignBundle\\EventListener\\CalendarSubscriber');
        $instance->addSubscriberService('mautic.campaign.pointbundle.subscriber', 'Mautic\\CampaignBundle\\EventListener\\PointSubscriber');
        $instance->addSubscriberService('mautic.campaign.search.subscriber', 'Mautic\\CampaignBundle\\EventListener\\SearchSubscriber');
        $instance->addSubscriberService('mautic.campaign.dashboard.subscriber', 'Mautic\\CampaignBundle\\EventListener\\DashboardSubscriber');
        $instance->addSubscriberService('mautic.campaignconfigbundle.subscriber', 'Mautic\\CampaignBundle\\EventListener\\ConfigSubscriber');
        $instance->addSubscriberService('mautic.campaign.stats.subscriber', 'Mautic\\CampaignBundle\\EventListener\\StatsSubscriber');
        $instance->addSubscriberService('mautic.campaign.report.subscriber', 'Mautic\\CampaignBundle\\EventListener\\ReportSubscriber');
        $instance->addSubscriberService('mautic.category.subscriber', 'Mautic\\CategoryBundle\\EventListener\\CategorySubscriber');
        $instance->addSubscriberService('mautic.channel.campaignbundle.subscriber', 'Mautic\\ChannelBundle\\EventListener\\CampaignSubscriber');
        $instance->addSubscriberService('mautic.channel.channelbundle.subscriber', 'Mautic\\ChannelBundle\\EventListener\\MessageSubscriber');
        $instance->addSubscriberService('mautic.config.subscriber', 'Mautic\\ConfigBundle\\EventListener\\ConfigSubscriber');
        $instance->addSubscriberService('mautic.dynamiccontent.campaignbundle.subscriber', 'Mautic\\DynamicContentBundle\\EventListener\\CampaignSubscriber');
        $instance->addSubscriberService('mautic.dynamiccontent.js.subscriber', 'Mautic\\DynamicContentBundle\\EventListener\\BuildJsSubscriber');
        $instance->addSubscriberService('mautic.dynamiccontent.subscriber', 'Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber');
        $instance->addSubscriberService('mautic.dynamiccontent.subscriber.channel', 'Mautic\\DynamicContentBundle\\EventListener\\ChannelSubscriber');
        $instance->addSubscriberService('mautic.dynamiccontent.stats.subscriber', 'Mautic\\DynamicContentBundle\\EventListener\\StatsSubscriber');
        $instance->addSubscriberService('mautic.email.subscriber', 'Mautic\\EmailBundle\\EventListener\\EmailSubscriber');
        $instance->addSubscriberService('mautic.emailbuilder.subscriber', 'Mautic\\EmailBundle\\EventListener\\BuilderSubscriber');
        $instance->addSubscriberService('mautic.emailtoken.subscriber', 'Mautic\\EmailBundle\\EventListener\\TokenSubscriber');
        $instance->addSubscriberService('mautic.email.campaignbundle.subscriber', 'Mautic\\EmailBundle\\EventListener\\CampaignSubscriber');
        $instance->addSubscriberService('mautic.email.formbundle.subscriber', 'Mautic\\EmailBundle\\EventListener\\FormSubscriber');
        $instance->addSubscriberService('mautic.email.reportbundle.subscriber', 'Mautic\\EmailBundle\\EventListener\\ReportSubscriber');
        $instance->addSubscriberService('mautic.email.leadbundle.subscriber', 'Mautic\\EmailBundle\\EventListener\\LeadSubscriber');
        $instance->addSubscriberService('mautic.email.pointbundle.subscriber', 'Mautic\\EmailBundle\\EventListener\\PointSubscriber');
        $instance->addSubscriberService('mautic.email.calendarbundle.subscriber', 'Mautic\\EmailBundle\\EventListener\\CalendarSubscriber');
        $instance->addSubscriberService('mautic.email.search.subscriber', 'Mautic\\EmailBundle\\EventListener\\SearchSubscriber');
        $instance->addSubscriberService('mautic.email.webhook.subscriber', 'Mautic\\EmailBundle\\EventListener\\WebhookSubscriber');
        $instance->addSubscriberService('mautic.email.configbundle.subscriber', 'Mautic\\EmailBundle\\EventListener\\ConfigSubscriber');
        $instance->addSubscriberService('mautic.email.pagebundle.subscriber', 'Mautic\\EmailBundle\\EventListener\\PageSubscriber');
        $instance->addSubscriberService('mautic.email.dashboard.subscriber', 'Mautic\\EmailBundle\\EventListener\\DashboardSubscriber');
        $instance->addSubscriberService('mautic.email.broadcast.subscriber', 'Mautic\\EmailBundle\\EventListener\\BroadcastSubscriber');
        $instance->addSubscriberService('mautic.email.messagequeue.subscriber', 'Mautic\\EmailBundle\\EventListener\\MessageQueueSubscriber');
        $instance->addSubscriberService('mautic.email.channel.subscriber', 'Mautic\\EmailBundle\\EventListener\\ChannelSubscriber');
        $instance->addSubscriberService('mautic.email.stats.subscriber', 'Mautic\\EmailBundle\\EventListener\\StatsSubscriber');
        $instance->addSubscriberService('mautic.form.subscriber', 'Mautic\\FormBundle\\EventListener\\FormSubscriber');
        $instance->addSubscriberService('mautic.form.pagebundle.subscriber', 'Mautic\\FormBundle\\EventListener\\PageSubscriber');
        $instance->addSubscriberService('mautic.form.pointbundle.subscriber', 'Mautic\\FormBundle\\EventListener\\PointSubscriber');
        $instance->addSubscriberService('mautic.form.reportbundle.subscriber', 'Mautic\\FormBundle\\EventListener\\ReportSubscriber');
        $instance->addSubscriberService('mautic.form.campaignbundle.subscriber', 'Mautic\\FormBundle\\EventListener\\CampaignSubscriber');
        $instance->addSubscriberService('mautic.form.calendarbundle.subscriber', 'Mautic\\FormBundle\\EventListener\\CalendarSubscriber');
        $instance->addSubscriberService('mautic.form.leadbundle.subscriber', 'Mautic\\FormBundle\\EventListener\\LeadSubscriber');
        $instance->addSubscriberService('mautic.form.emailbundle.subscriber', 'Mautic\\FormBundle\\EventListener\\EmailSubscriber');
        $instance->addSubscriberService('mautic.form.search.subscriber', 'Mautic\\FormBundle\\EventListener\\SearchSubscriber');
        $instance->addSubscriberService('mautic.form.webhook.subscriber', 'Mautic\\FormBundle\\EventListener\\WebhookSubscriber');
        $instance->addSubscriberService('mautic.form.dashboard.subscriber', 'Mautic\\FormBundle\\EventListener\\DashboardSubscriber');
        $instance->addSubscriberService('mautic.form.stats.subscriber', 'Mautic\\FormBundle\\EventListener\\StatsSubscriber');
        $instance->addSubscriberService('mautic.lead.subscriber', 'Mautic\\LeadBundle\\EventListener\\LeadSubscriber');
        $instance->addSubscriberService('mautic.lead.subscriber.company', 'Mautic\\LeadBundle\\EventListener\\CompanySubscriber');
        $instance->addSubscriberService('mautic.lead.emailbundle.subscriber', 'Mautic\\LeadBundle\\EventListener\\EmailSubscriber');
        $instance->addSubscriberService('mautic.lead.formbundle.subscriber', 'Mautic\\LeadBundle\\EventListener\\FormSubscriber');
        $instance->addSubscriberService('mautic.lead.campaignbundle.subscriber', 'Mautic\\LeadBundle\\EventListener\\CampaignSubscriber');
        $instance->addSubscriberService('mautic.lead.reportbundle.subscriber', 'Mautic\\LeadBundle\\EventListener\\ReportSubscriber');
        $instance->addSubscriberService('mautic.lead.calendarbundle.subscriber', 'Mautic\\LeadBundle\\EventListener\\CalendarSubscriber');
        $instance->addSubscriberService('mautic.lead.pointbundle.subscriber', 'Mautic\\LeadBundle\\EventListener\\PointSubscriber');
        $instance->addSubscriberService('mautic.lead.search.subscriber', 'Mautic\\LeadBundle\\EventListener\\SearchSubscriber');
        $instance->addSubscriberService('mautic.webhook.subscriber', 'Mautic\\LeadBundle\\EventListener\\WebhookSubscriber');
        $instance->addSubscriberService('mautic.lead.dashboard.subscriber', 'Mautic\\LeadBundle\\EventListener\\DashboardSubscriber');
        $instance->addSubscriberService('mautic.lead.maintenance.subscriber', 'Mautic\\LeadBundle\\EventListener\\MaintenanceSubscriber');
        $instance->addSubscriberService('mautic.lead.stats.subscriber', 'Mautic\\LeadBundle\\EventListener\\StatsSubscriber');
        $instance->addSubscriberService('mautic.lead.button.subscriber', 'Mautic\\LeadBundle\\EventListener\\ButtonSubscriber');
        $instance->addSubscriberService('mautic.notification.campaignbundle.subscriber', 'Mautic\\NotificationBundle\\EventListener\\CampaignSubscriber');
        $instance->addSubscriberService('mautic.notification.configbundle.subscriber', 'Mautic\\NotificationBundle\\EventListener\\ConfigSubscriber');
        $instance->addSubscriberService('mautic.notification.pagebundle.subscriber', 'Mautic\\NotificationBundle\\EventListener\\PageSubscriber');
        $instance->addSubscriberService('mautic.core.js.subscriber', 'Mautic\\NotificationBundle\\EventListener\\BuildJsSubscriber');
        $instance->addSubscriberService('mautic.notification.notificationbundle.subscriber', 'Mautic\\NotificationBundle\\EventListener\\NotificationSubscriber');
        $instance->addSubscriberService('mautic.notification.subscriber.channel', 'Mautic\\NotificationBundle\\EventListener\\ChannelSubscriber');
        $instance->addSubscriberService('mautic.notification.stats.subscriber', 'Mautic\\NotificationBundle\\EventListener\\StatsSubscriber');
        $instance->addSubscriberService('mautic.page.subscriber', 'Mautic\\PageBundle\\EventListener\\PageSubscriber');
        $instance->addSubscriberService('mautic.pagebuilder.subscriber', 'Mautic\\PageBundle\\EventListener\\BuilderSubscriber');
        $instance->addSubscriberService('mautic.pagetoken.subscriber', 'Mautic\\PageBundle\\EventListener\\TokenSubscriber');
        $instance->addSubscriberService('mautic.page.pointbundle.subscriber', 'Mautic\\PageBundle\\EventListener\\PointSubscriber');
        $instance->addSubscriberService('mautic.page.reportbundle.subscriber', 'Mautic\\PageBundle\\EventListener\\ReportSubscriber');
        $instance->addSubscriberService('mautic.page.campaignbundle.subscriber', 'Mautic\\PageBundle\\EventListener\\CampaignSubscriber');
        $instance->addSubscriberService('mautic.page.leadbundle.subscriber', 'Mautic\\PageBundle\\EventListener\\LeadSubscriber');
        $instance->addSubscriberService('mautic.page.calendarbundle.subscriber', 'Mautic\\PageBundle\\EventListener\\CalendarSubscriber');
        $instance->addSubscriberService('mautic.page.configbundle.subscriber', 'Mautic\\PageBundle\\EventListener\\ConfigSubscriber');
        $instance->addSubscriberService('mautic.page.search.subscriber', 'Mautic\\PageBundle\\EventListener\\SearchSubscriber');
        $instance->addSubscriberService('mautic.page.webhook.subscriber', 'Mautic\\PageBundle\\EventListener\\WebhookSubscriber');
        $instance->addSubscriberService('mautic.page.dashboard.subscriber', 'Mautic\\PageBundle\\EventListener\\DashboardSubscriber');
        $instance->addSubscriberService('mautic.page.js.subscriber', 'Mautic\\PageBundle\\EventListener\\BuildJsSubscriber');
        $instance->addSubscriberService('mautic.page.maintenance.subscriber', 'Mautic\\PageBundle\\EventListener\\MaintenanceSubscriber');
        $instance->addSubscriberService('mautic.page.stats.subscriber', 'Mautic\\PageBundle\\EventListener\\StatsSubscriber');
        $instance->addSubscriberService('mautic.plugin.pointbundle.subscriber', 'Mautic\\PluginBundle\\EventListener\\PointSubscriber');
        $instance->addSubscriberService('mautic.plugin.formbundle.subscriber', 'Mautic\\PluginBundle\\EventListener\\FormSubscriber');
        $instance->addSubscriberService('mautic.plugin.campaignbundle.subscriber', 'Mautic\\PluginBundle\\EventListener\\CampaignSubscriber');
        $instance->addSubscriberService('mautic.plugin.leadbundle.subscriber', 'Mautic\\PluginBundle\\EventListener\\LeadSubscriber');
        $instance->addSubscriberService('mautic.point.subscriber', 'Mautic\\PointBundle\\EventListener\\PointSubscriber');
        $instance->addSubscriberService('mautic.point.leadbundle.subscriber', 'Mautic\\PointBundle\\EventListener\\LeadSubscriber');
        $instance->addSubscriberService('mautic.point.search.subscriber', 'Mautic\\PointBundle\\EventListener\\SearchSubscriber');
        $instance->addSubscriberService('mautic.point.dashboard.subscriber', 'Mautic\\PointBundle\\EventListener\\DashboardSubscriber');
        $instance->addSubscriberService('mautic.point.stats.subscriber', 'Mautic\\PointBundle\\EventListener\\StatsSubscriber');
        $instance->addSubscriberService('mautic.report.search.subscriber', 'Mautic\\ReportBundle\\EventListener\\SearchSubscriber');
        $instance->addSubscriberService('mautic.report.report.subscriber', 'Mautic\\ReportBundle\\EventListener\\ReportSubscriber');
        $instance->addSubscriberService('mautic.report.dashboard.subscriber', 'Mautic\\ReportBundle\\EventListener\\DashboardSubscriber');
        $instance->addSubscriberService('mautic.sms.campaignbundle.subscriber', 'Mautic\\SmsBundle\\EventListener\\CampaignSubscriber');
        $instance->addSubscriberService('mautic.sms.configbundle.subscriber', 'Mautic\\SmsBundle\\EventListener\\ConfigSubscriber');
        $instance->addSubscriberService('mautic.sms.smsbundle.subscriber', 'Mautic\\SmsBundle\\EventListener\\SmsSubscriber');
        $instance->addSubscriberService('mautic.sms.channel.subscriber', 'Mautic\\SmsBundle\\EventListener\\ChannelSubscriber');
        $instance->addSubscriberService('mautic.sms.message_queue.subscriber', 'Mautic\\SmsBundle\\EventListener\\MessageQueueSubscriber');
        $instance->addSubscriberService('mautic.sms.stats.subscriber', 'Mautic\\SmsBundle\\EventListener\\StatsSubscriber');
        $instance->addSubscriberService('mautic.stage.campaignbundle.subscriber', 'Mautic\\StageBundle\\EventListener\\CampaignSubscriber');
        $instance->addSubscriberService('mautic.stage.subscriber', 'Mautic\\StageBundle\\EventListener\\StageSubscriber');
        $instance->addSubscriberService('mautic.stage.leadbundle.subscriber', 'Mautic\\StageBundle\\EventListener\\LeadSubscriber');
        $instance->addSubscriberService('mautic.stage.search.subscriber', 'Mautic\\StageBundle\\EventListener\\SearchSubscriber');
        $instance->addSubscriberService('mautic.stage.dashboard.subscriber', 'Mautic\\StageBundle\\EventListener\\DashboardSubscriber');
        $instance->addSubscriberService('mautic.stage.stats.subscriber', 'Mautic\\StageBundle\\EventListener\\StatsSubscriber');
        $instance->addSubscriberService('mautic.user.subscriber', 'Mautic\\UserBundle\\EventListener\\UserSubscriber');
        $instance->addSubscriberService('mautic.user.search.subscriber', 'Mautic\\UserBundle\\EventListener\\SearchSubscriber');
        $instance->addSubscriberService('mautic.user.config.subscriber', 'Mautic\\UserBundle\\EventListener\\ConfigSubscriber');
        $instance->addSubscriberService('mautic.user.route.subscriber', 'Mautic\\UserBundle\\EventListener\\RouteSubscriber');
        $instance->addSubscriberService('mautic.webhook.config.subscriber', 'Mautic\\WebhookBundle\\EventListener\\ConfigSubscriber');
        $instance->addSubscriberService('mautic.webhook.audit.subscriber', 'Mautic\\WebhookBundle\\EventListener\\WebhookSubscriber');
        $instance->addSubscriberService('mautic.webhook.stats.subscriber', 'Mautic\\WebhookBundle\\EventListener\\StatsSubscriber');
        $instance->addSubscriberService('mautic.plugin.fullcontact.button.subscriber', 'MauticPlugin\\MauticFullContactBundle\\EventListener\\ButtonSubscriber');
        $instance->addSubscriberService('mautic.plugin.fullcontact.lead.subscriber', 'MauticPlugin\\MauticFullContactBundle\\EventListener\\LeadSubscriber');
        $instance->addSubscriberService('mautic.cloudstorage.remoteassetbrowse.subscriber', 'MauticPlugin\\MauticCloudStorageBundle\\EventListener\\RemoteAssetBrowseSubscriber');
        $instance->addSubscriberService('mautic.focus.subscriber.form_bundle', 'MauticPlugin\\MauticFocusBundle\\EventListener\\FormSubscriber');
        $instance->addSubscriberService('mautic.focus.subscriber.page_bundle', 'MauticPlugin\\MauticFocusBundle\\EventListener\\PageSubscriber');
        $instance->addSubscriberService('mautic.focus.subscriber.stat', 'MauticPlugin\\MauticFocusBundle\\EventListener\\StatSubscriber');
        $instance->addSubscriberService('mautic.focus.subscriber.focus', 'MauticPlugin\\MauticFocusBundle\\EventListener\\FocusSubscriber');
        $instance->addSubscriberService('mautic.focus.stats.subscriber', 'MauticPlugin\\MauticFocusBundle\\EventListener\\StatsSubscriber');
        $instance->addSubscriberService('mautic.social.formbundle.subscriber', 'MauticPlugin\\MauticSocialBundle\\EventListener\\FormSubscriber');
        $instance->addSubscriberService('mautic.social.campaignbundle.subscriber', 'MauticPlugin\\MauticSocialBundle\\EventListener\\CampaignSubscriber');
        $instance->addSubscriberService('mautic.social.configbundle.subscriber', 'MauticPlugin\\MauticSocialBundle\\EventListener\\ConfigSubscriber');
        $instance->addSubscriberService('mautic.social.subscriber.channel', 'MauticPlugin\\MauticSocialBundle\\EventListener\\ChannelSubscriber');
        $instance->addSubscriberService('mautic.citrix.formbundle.subscriber', 'MauticPlugin\\MauticCitrixBundle\\EventListener\\FormSubscriber');
        $instance->addSubscriberService('mautic.citrix.leadbundle.subscriber', 'MauticPlugin\\MauticCitrixBundle\\EventListener\\LeadSubscriber');
        $instance->addSubscriberService('mautic.citrix.campaignbundle.subscriber', 'MauticPlugin\\MauticCitrixBundle\\EventListener\\CampaignSubscriber');
        $instance->addSubscriberService('mautic.citrix.emailbundle.subscriber', 'MauticPlugin\\MauticCitrixBundle\\EventListener\\EmailSubscriber');
        $instance->addSubscriberService('mautic.plugin.clearbit.button.subscriber', 'MauticPlugin\\MauticClearbitBundle\\EventListener\\ButtonSubscriber');
        $instance->addSubscriberService('mautic.plugin.clearbit.lead.subscriber', 'MauticPlugin\\MauticClearbitBundle\\EventListener\\LeadSubscriber');
        $instance->addSubscriberService('web_profiler.debug_toolbar', 'Symfony\\Bundle\\WebProfilerBundle\\EventListener\\WebDebugToolbarListener');

        return $instance;
    }

    /**
     * Gets the 'debug.stopwatch' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Stopwatch\Stopwatch A Symfony\Component\Stopwatch\Stopwatch instance
     */
    protected function getDebug_StopwatchService()
    {
        return $this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch();
    }

    /**
     * Gets the 'debug.templating.engine.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Engine\PhpEngine A Mautic\CoreBundle\Templating\Engine\PhpEngine instance
     */
    protected function getDebug_Templating_Engine_PhpService()
    {
        $this->services['debug.templating.engine.php'] = $instance = new \Mautic\CoreBundle\Templating\Engine\PhpEngine($this->get('templating.name_parser'), $this, $this->get('templating.loader'), $this->get('debug.stopwatch'), $this->get('templating.globals'));

        $instance->setCharset('UTF-8');
        $instance->setHelpers(array('assets' => 'templating.helper.assets', 'router' => 'templating.helper.router', 'slots' => 'templating.helper.slots', 'request' => 'templating.helper.request', 'session' => 'templating.helper.session', 'actions' => 'templating.helper.actions', 'code' => 'templating.helper.code', 'translator' => 'templating.helper.translator', 'form' => 'templating.helper.form', 'stopwatch' => 'templating.helper.stopwatch', 'logout_url' => 'templating.helper.logout_url', 'security' => 'mautic.helper.template.security', 'knp_menu' => 'knp_menu.templating.helper', 'jms_serializer' => 'jms_serializer.templating.helper.serializer', 'oneup_uploader' => 'oneup_uploader.templating.uploader_helper', 'menu' => 'mautic.helper.template.menu', 'date' => 'mautic.helper.template.date', 'exception' => 'mautic.helper.template.exception', 'gravatar' => 'mautic.helper.template.gravatar', 'analytics' => 'mautic.helper.template.analytics', 'mautibot' => 'mautic.helper.template.mautibot', 'canvas' => 'mautic.helper.template.canvas', 'buttons' => 'mautic.helper.template.button', 'content' => 'mautic.helper.template.content', 'formatter' => 'mautic.helper.template.formatter', 'channel' => 'mautic.channel.helper.channel_list', 'lead_avatar' => 'mautic.helper.template.avatar', 'notification_helper' => 'mautic.helper.notification', 'sms_helper' => 'mautic.helper.sms'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setRequestStack($this->get('request_stack'));

        return $instance;
    }

    /**
     * Gets the 'doctrine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Registry A Doctrine\Bundle\DoctrineBundle\Registry instance
     */
    protected function getDoctrineService()
    {
        return $this->services['doctrine'] = new \Doctrine\Bundle\DoctrineBundle\Registry($this, array('default' => 'doctrine.dbal.default_connection'), array('default' => 'doctrine.orm.default_entity_manager'), 'default', 'default');
    }

    /**
     * Gets the 'doctrine.dbal.connection_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\ConnectionFactory A Doctrine\Bundle\DoctrineBundle\ConnectionFactory instance
     */
    protected function getDoctrine_Dbal_ConnectionFactoryService()
    {
        return $this->services['doctrine.dbal.connection_factory'] = new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory(array('array' => array('class' => 'Mautic\\CoreBundle\\Doctrine\\Type\\ArrayType', 'commented' => true), 'datetime' => array('class' => 'Mautic\\CoreBundle\\Doctrine\\Type\\UTCDateTimeType', 'commented' => true)));
    }

    /**
     * Gets the 'doctrine.dbal.default_connection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\DBAL\Connection A Doctrine\DBAL\Connection instance
     */
    protected function getDoctrine_Dbal_DefaultConnectionService()
    {
        $a = new \Doctrine\DBAL\Logging\LoggerChain();
        $a->addLogger(new \Symfony\Bridge\Doctrine\Logger\DbalLogger($this->get('monolog.logger.doctrine', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $a->addLogger($this->get('doctrine.dbal.logger.profiling.default'));

        $b = new \Doctrine\DBAL\Configuration();
        $b->setSQLLogger($a);

        $c = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager($this);
        $c->addEventSubscriber($this->get('mautic.lead.doctrine.subscriber'));
        $c->addEventSubscriber($this->get('mautic.tblprefix_subscriber'));
        $c->addEventListener(array(0 => 'loadClassMetadata'), $this->get('doctrine.orm.default_listeners.attach_entity_listeners'));

        return $this->services['doctrine.dbal.default_connection'] = $this->get('doctrine.dbal.connection_factory')->createConnection(array('driver' => 'pdo_mysql', 'host' => 'localhost', 'port' => '3306', 'dbname' => 'mautic', 'user' => 'root', 'password' => 'root', 'charset' => 'UTF8', 'driverOptions' => array(), 'serverVersion' => '5.7.17-0ubuntu0.16.04.1', 'defaultTableOptions' => array()), $b, $c, array('enum' => 'string', 'point' => 'string', 'bit' => 'string'));
    }

    /**
     * Gets the 'doctrine.orm.default_entity_listener_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\ORM\Mapping\DefaultEntityListenerResolver A Doctrine\ORM\Mapping\DefaultEntityListenerResolver instance
     */
    protected function getDoctrine_Orm_DefaultEntityListenerResolverService()
    {
        return $this->services['doctrine.orm.default_entity_listener_resolver'] = new \Doctrine\ORM\Mapping\DefaultEntityListenerResolver();
    }

    /**
     * Gets the 'doctrine.orm.default_entity_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Doctrine\ORM\EntityManager A Doctrine\ORM\EntityManager instance
     */
    protected function getDoctrine_Orm_DefaultEntityManagerService($lazyLoad = true)
    {
        $a = new \Doctrine\ORM\Mapping\Driver\StaticPHPDriver(array(0 => ($this->targetDirs[2].'/bundles/ApiBundle/Entity'), 1 => ($this->targetDirs[2].'/bundles/AssetBundle/Entity'), 2 => ($this->targetDirs[2].'/bundles/CampaignBundle/Entity'), 3 => ($this->targetDirs[2].'/bundles/CategoryBundle/Entity'), 4 => ($this->targetDirs[2].'/bundles/ChannelBundle/Entity'), 5 => ($this->targetDirs[2].'/bundles/CoreBundle/Entity'), 6 => ($this->targetDirs[2].'/bundles/DashboardBundle/Entity'), 7 => ($this->targetDirs[2].'/bundles/DynamicContentBundle/Entity'), 8 => ($this->targetDirs[2].'/bundles/EmailBundle/Entity'), 9 => ($this->targetDirs[2].'/bundles/FormBundle/Entity'), 10 => ($this->targetDirs[2].'/bundles/LeadBundle/Entity'), 11 => ($this->targetDirs[2].'/bundles/NotificationBundle/Entity'), 12 => ($this->targetDirs[2].'/bundles/PageBundle/Entity'), 13 => ($this->targetDirs[2].'/bundles/PluginBundle/Entity'), 14 => ($this->targetDirs[2].'/bundles/PointBundle/Entity'), 15 => ($this->targetDirs[2].'/bundles/ReportBundle/Entity'), 16 => ($this->targetDirs[2].'/bundles/SmsBundle/Entity'), 17 => ($this->targetDirs[2].'/bundles/StageBundle/Entity'), 18 => ($this->targetDirs[2].'/bundles/UserBundle/Entity'), 19 => ($this->targetDirs[2].'/bundles/WebhookBundle/Entity'), 20 => ($this->targetDirs[3].'/plugins/MauticTestBundle/Entity'), 21 => ($this->targetDirs[3].'/plugins/MauticFocusBundle/Entity'), 22 => ($this->targetDirs[3].'/plugins/MauticSocialBundle/Entity'), 23 => ($this->targetDirs[3].'/plugins/MauticCitrixBundle/Entity')));

        $b = new \Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver(array(($this->targetDirs[3].'/vendor/friendsofsymfony/oauth-server-bundle/Resources/config/doctrine') => 'FOS\\OAuthServerBundle\\Entity'));
        $b->setGlobalBasename('mapping');

        $c = new \Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain();
        $c->addDriver($a, 'Mautic\\ApiBundle\\Entity');
        $c->addDriver($a, 'Mautic\\AssetBundle\\Entity');
        $c->addDriver($a, 'Mautic\\CampaignBundle\\Entity');
        $c->addDriver($a, 'Mautic\\CategoryBundle\\Entity');
        $c->addDriver($a, 'Mautic\\ChannelBundle\\Entity');
        $c->addDriver($a, 'Mautic\\CoreBundle\\Entity');
        $c->addDriver($a, 'Mautic\\DashboardBundle\\Entity');
        $c->addDriver($a, 'Mautic\\DynamicContentBundle\\Entity');
        $c->addDriver($a, 'Mautic\\EmailBundle\\Entity');
        $c->addDriver($a, 'Mautic\\FormBundle\\Entity');
        $c->addDriver($a, 'Mautic\\LeadBundle\\Entity');
        $c->addDriver($a, 'Mautic\\NotificationBundle\\Entity');
        $c->addDriver($a, 'Mautic\\PageBundle\\Entity');
        $c->addDriver($a, 'Mautic\\PluginBundle\\Entity');
        $c->addDriver($a, 'Mautic\\PointBundle\\Entity');
        $c->addDriver($a, 'Mautic\\ReportBundle\\Entity');
        $c->addDriver($a, 'Mautic\\SmsBundle\\Entity');
        $c->addDriver($a, 'Mautic\\StageBundle\\Entity');
        $c->addDriver($a, 'Mautic\\UserBundle\\Entity');
        $c->addDriver($a, 'Mautic\\WebhookBundle\\Entity');
        $c->addDriver($a, 'MauticPlugin\\MauticTestBundle\\Entity');
        $c->addDriver($a, 'MauticPlugin\\MauticFocusBundle\\Entity');
        $c->addDriver($a, 'MauticPlugin\\MauticSocialBundle\\Entity');
        $c->addDriver($a, 'MauticPlugin\\MauticCitrixBundle\\Entity');
        $c->addDriver($b, 'FOS\\OAuthServerBundle\\Entity');
        $c->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/willdurand/oauth-server-bundle/Resources/config/model') => 'Bazinga\\OAuthServerBundle\\Model'), '.orm.xml')), 'Bazinga\\OAuthServerBundle\\Model');

        $d = new \Doctrine\ORM\Configuration();
        $d->setEntityNamespaces(array('MauticApiBundle' => 'Mautic\\ApiBundle\\Entity', 'MauticAssetBundle' => 'Mautic\\AssetBundle\\Entity', 'MauticCampaignBundle' => 'Mautic\\CampaignBundle\\Entity', 'MauticCategoryBundle' => 'Mautic\\CategoryBundle\\Entity', 'MauticChannelBundle' => 'Mautic\\ChannelBundle\\Entity', 'MauticCoreBundle' => 'Mautic\\CoreBundle\\Entity', 'MauticDashboardBundle' => 'Mautic\\DashboardBundle\\Entity', 'MauticDynamicContentBundle' => 'Mautic\\DynamicContentBundle\\Entity', 'MauticEmailBundle' => 'Mautic\\EmailBundle\\Entity', 'MauticFormBundle' => 'Mautic\\FormBundle\\Entity', 'MauticLeadBundle' => 'Mautic\\LeadBundle\\Entity', 'MauticNotificationBundle' => 'Mautic\\NotificationBundle\\Entity', 'MauticPageBundle' => 'Mautic\\PageBundle\\Entity', 'MauticPluginBundle' => 'Mautic\\PluginBundle\\Entity', 'MauticPointBundle' => 'Mautic\\PointBundle\\Entity', 'MauticReportBundle' => 'Mautic\\ReportBundle\\Entity', 'MauticSmsBundle' => 'Mautic\\SmsBundle\\Entity', 'MauticStageBundle' => 'Mautic\\StageBundle\\Entity', 'MauticUserBundle' => 'Mautic\\UserBundle\\Entity', 'MauticWebhookBundle' => 'Mautic\\WebhookBundle\\Entity', 'MauticTestBundle' => 'MauticPlugin\\MauticTestBundle\\Entity', 'MauticFocusBundle' => 'MauticPlugin\\MauticFocusBundle\\Entity', 'MauticSocialBundle' => 'MauticPlugin\\MauticSocialBundle\\Entity', 'MauticCitrixBundle' => 'MauticPlugin\\MauticCitrixBundle\\Entity', 'FOSOAuthServerBundle' => 'FOS\\OAuthServerBundle\\Entity'));
        $d->setMetadataCacheImpl($this->get('doctrine_cache.providers.doctrine.orm.default_metadata_cache'));
        $d->setQueryCacheImpl($this->get('doctrine_cache.providers.doctrine.orm.default_query_cache'));
        $d->setResultCacheImpl($this->get('doctrine_cache.providers.doctrine.orm.default_result_cache'));
        $d->setMetadataDriverImpl($c);
        $d->setProxyDir((__DIR__.'/doctrine/orm/Proxies'));
        $d->setProxyNamespace('Proxies');
        $d->setAutoGenerateProxyClasses(true);
        $d->setClassMetadataFactoryName('Doctrine\\ORM\\Mapping\\ClassMetadataFactory');
        $d->setDefaultRepositoryClassName('Doctrine\\ORM\\EntityRepository');
        $d->setNamingStrategy(new \Doctrine\ORM\Mapping\DefaultNamingStrategy());
        $d->setQuoteStrategy(new \Doctrine\ORM\Mapping\DefaultQuoteStrategy());
        $d->setEntityListenerResolver($this->get('doctrine.orm.default_entity_listener_resolver'));

        $this->services['doctrine.orm.default_entity_manager'] = $instance = \Doctrine\ORM\EntityManager::create($this->get('doctrine.dbal.default_connection'), $d);

        $this->get('doctrine.orm.default_manager_configurator')->configure($instance);

        return $instance;
    }

    /**
     * Gets the 'doctrine.orm.default_listeners.attach_entity_listeners' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\ORM\Tools\AttachEntityListenersListener A Doctrine\ORM\Tools\AttachEntityListenersListener instance
     */
    protected function getDoctrine_Orm_DefaultListeners_AttachEntityListenersService()
    {
        return $this->services['doctrine.orm.default_listeners.attach_entity_listeners'] = new \Doctrine\ORM\Tools\AttachEntityListenersListener();
    }

    /**
     * Gets the 'doctrine.orm.default_manager_configurator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator A Doctrine\Bundle\DoctrineBundle\ManagerConfigurator instance
     */
    protected function getDoctrine_Orm_DefaultManagerConfiguratorService()
    {
        return $this->services['doctrine.orm.default_manager_configurator'] = new \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator(array(), array());
    }

    /**
     * Gets the 'doctrine.orm.validator.unique' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator A Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator instance
     */
    protected function getDoctrine_Orm_Validator_UniqueService()
    {
        return $this->services['doctrine.orm.validator.unique'] = new \Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator($this->get('doctrine'));
    }

    /**
     * Gets the 'doctrine.orm.validator_initializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer A Symfony\Bridge\Doctrine\Validator\DoctrineInitializer instance
     */
    protected function getDoctrine_Orm_ValidatorInitializerService()
    {
        return $this->services['doctrine.orm.validator_initializer'] = new \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer($this->get('doctrine'));
    }

    /**
     * Gets the 'doctrine_cache.providers.doctrine.orm.default_metadata_cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Common\Cache\ArrayCache A Doctrine\Common\Cache\ArrayCache instance
     */
    protected function getDoctrineCache_Providers_Doctrine_Orm_DefaultMetadataCacheService()
    {
        $this->services['doctrine_cache.providers.doctrine.orm.default_metadata_cache'] = $instance = new \Doctrine\Common\Cache\ArrayCache();

        $instance->setNamespace('sf2orm_default_842aab75dd44198dc69b9be7c5b86d1700e274fc2d3cb62670b41b26774ba799');

        return $instance;
    }

    /**
     * Gets the 'doctrine_cache.providers.doctrine.orm.default_query_cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Common\Cache\ArrayCache A Doctrine\Common\Cache\ArrayCache instance
     */
    protected function getDoctrineCache_Providers_Doctrine_Orm_DefaultQueryCacheService()
    {
        $this->services['doctrine_cache.providers.doctrine.orm.default_query_cache'] = $instance = new \Doctrine\Common\Cache\ArrayCache();

        $instance->setNamespace('sf2orm_default_842aab75dd44198dc69b9be7c5b86d1700e274fc2d3cb62670b41b26774ba799');

        return $instance;
    }

    /**
     * Gets the 'doctrine_cache.providers.doctrine.orm.default_result_cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Common\Cache\ArrayCache A Doctrine\Common\Cache\ArrayCache instance
     */
    protected function getDoctrineCache_Providers_Doctrine_Orm_DefaultResultCacheService()
    {
        $this->services['doctrine_cache.providers.doctrine.orm.default_result_cache'] = $instance = new \Doctrine\Common\Cache\ArrayCache();

        $instance->setNamespace('sf2orm_default_842aab75dd44198dc69b9be7c5b86d1700e274fc2d3cb62670b41b26774ba799');

        return $instance;
    }

    /**
     * Gets the 'file_locator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Config\FileLocator A Symfony\Component\HttpKernel\Config\FileLocator instance
     */
    protected function getFileLocatorService()
    {
        return $this->services['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator($this->get('kernel'), ($this->targetDirs[2].'/Resources'));
    }

    /**
     * Gets the 'filesystem' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Filesystem\Filesystem A Symfony\Component\Filesystem\Filesystem instance
     */
    protected function getFilesystemService()
    {
        return $this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem();
    }

    /**
     * Gets the 'form.csrf_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter A Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter instance
     *
     * @deprecated The "form.csrf_provider" service is deprecated since Symfony 2.4 and will be removed in 3.0. Use the "security.csrf.token_manager" service instead.
     */
    protected function getForm_CsrfProviderService()
    {
        @trigger_error('The "form.csrf_provider" service is deprecated since Symfony 2.4 and will be removed in 3.0. Use the "security.csrf.token_manager" service instead.', E_USER_DEPRECATED);

        return $this->services['form.csrf_provider'] = new \Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter($this->get('security.csrf.token_manager'));
    }

    /**
     * Gets the 'form.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\FormFactory A Symfony\Component\Form\FormFactory instance
     */
    protected function getForm_FactoryService()
    {
        return $this->services['form.factory'] = new \Symfony\Component\Form\FormFactory($this->get('form.registry'), $this->get('form.resolved_type_factory'));
    }

    /**
     * Gets the 'form.registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\FormRegistry A Symfony\Component\Form\FormRegistry instance
     */
    protected function getForm_RegistryService()
    {
        return $this->services['form.registry'] = new \Symfony\Component\Form\FormRegistry(array(0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension($this, array('form' => 'form.type.form', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => 'form.type.form', 'birthday' => 'form.type.birthday', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\BirthdayType' => 'form.type.birthday', 'checkbox' => 'form.type.checkbox', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\CheckboxType' => 'form.type.checkbox', 'choice' => 'form.type.choice', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => 'form.type.choice', 'collection' => 'form.type.collection', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\CollectionType' => 'form.type.collection', 'country' => 'form.type.country', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\CountryType' => 'form.type.country', 'date' => 'form.type.date', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\DateType' => 'form.type.date', 'datetime' => 'form.type.datetime', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\DateTimeType' => 'form.type.datetime', 'email' => 'form.type.email', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\EmailType' => 'form.type.email', 'file' => 'form.type.file', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => 'form.type.file', 'hidden' => 'form.type.hidden', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\HiddenType' => 'form.type.hidden', 'integer' => 'form.type.integer', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\IntegerType' => 'form.type.integer', 'language' => 'form.type.language', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\LanguageType' => 'form.type.language', 'locale' => 'form.type.locale', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\LocaleType' => 'form.type.locale', 'money' => 'form.type.money', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\MoneyType' => 'form.type.money', 'number' => 'form.type.number', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\NumberType' => 'form.type.number', 'password' => 'form.type.password', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\PasswordType' => 'form.type.password', 'percent' => 'form.type.percent', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\PercentType' => 'form.type.percent', 'radio' => 'form.type.radio', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RadioType' => 'form.type.radio', 'range' => 'form.type.range', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RangeType' => 'form.type.range', 'repeated' => 'form.type.repeated', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => 'form.type.repeated', 'search' => 'form.type.search', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SearchType' => 'form.type.search', 'textarea' => 'form.type.textarea', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\TextareaType' => 'form.type.textarea', 'text' => 'form.type.text', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType' => 'form.type.text', 'time' => 'form.type.time', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\TimeType' => 'form.type.time', 'timezone' => 'form.type.timezone', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\TimezoneType' => 'form.type.timezone', 'url' => 'form.type.url', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\UrlType' => 'form.type.url', 'button' => 'form.type.button', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ButtonType' => 'form.type.button', 'submit' => 'form.type.submit', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => 'form.type.submit', 'reset' => 'form.type.reset', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ResetType' => 'form.type.reset', 'currency' => 'form.type.currency', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\CurrencyType' => 'form.type.currency', 'entity' => 'form.type.entity', 'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => 'form.type.entity', 'fos_oauth_server_authorize' => 'fos_oauth_server.authorize.form.type', 'FOS\\OAuthServerBundle\\Form\\Type\\AuthorizeFormType' => 'fos_oauth_server.authorize.form.type', 'spacer' => 'mautic.form.type.spacer', 'Mautic\\CoreBundle\\Form\\Type\\SpacerType' => 'mautic.form.type.spacer', 'tel' => 'mautic.form.type.tel', 'Mautic\\CoreBundle\\Form\\Type\\TelType' => 'mautic.form.type.tel', 'button_group' => 'mautic.form.type.button_group', 'Mautic\\CoreBundle\\Form\\Type\\ButtonGroupType' => 'mautic.form.type.button_group', 'yesno_button_group' => 'mautic.form.type.yesno_button_group', 'Mautic\\CoreBundle\\Form\\Type\\YesNoButtonGroupType' => 'mautic.form.type.yesno_button_group', 'standalone_button' => 'mautic.form.type.standalone_button', 'Mautic\\CoreBundle\\Form\\Type\\StandAloneButtonType' => 'mautic.form.type.standalone_button', 'form_buttons' => 'mautic.form.type.form_buttons', 'Mautic\\CoreBundle\\Form\\Type\\FormButtonsType' => 'mautic.form.type.form_buttons', 'hidden_entity' => 'mautic.form.type.hidden_entity', 'Mautic\\CoreBundle\\Form\\Type\\HiddenEntityType' => 'mautic.form.type.hidden_entity', 'sortablelist' => 'mautic.form.type.sortablelist', 'Mautic\\CoreBundle\\Form\\Type\\SortableListType' => 'mautic.form.type.sortablelist', 'dynamiclist' => 'mautic.form.type.dynamiclist', 'Mautic\\CoreBundle\\Form\\Type\\DynamicListType' => 'mautic.form.type.dynamiclist', 'coreconfig' => 'mautic.form.type.coreconfig', 'Mautic\\CoreBundle\\Form\\Type\\ConfigType' => 'mautic.form.type.coreconfig', 'iplookup_download_data_store_button' => 'mautic.form.type.coreconfig.iplookup_download_data_store_button', 'Mautic\\CoreBundle\\Form\\Type\\IpLookupDownloadDataStoreButtonType' => 'mautic.form.type.coreconfig.iplookup_download_data_store_button', 'theme_list' => 'mautic.form.type.theme_list', 'Mautic\\CoreBundle\\Form\\Type\\ThemeListType' => 'mautic.form.type.theme_list', 'daterange' => 'mautic.form.type.daterange', 'Mautic\\CoreBundle\\Form\\Type\\DateRangeType' => 'mautic.form.type.daterange', 'builder_section' => 'mautic.form.type.builder.section', 'Mautic\\CoreBundle\\Form\\Type\\BuilderSectionType' => 'mautic.form.type.builder.section', 'slot' => 'mautic.form.type.slot', 'Mautic\\CoreBundle\\Form\\Type\\SlotType' => 'mautic.form.type.slot', 'slot_button' => 'mautic.form.type.slot.button', 'Mautic\\CoreBundle\\Form\\Type\\SlotButtonType' => 'mautic.form.type.slot.button', 'slot_image' => 'mautic.form.type.slot.image', 'Mautic\\CoreBundle\\Form\\Type\\SlotImageType' => 'mautic.form.type.slot.image', 'slot_separator' => 'mautic.form.type.slot.separator', 'Mautic\\CoreBundle\\Form\\Type\\SlotSeparatorType' => 'mautic.form.type.slot.separator', 'slot_imagecard' => 'mautic.form.type.slot.imagecard', 'Mautic\\CoreBundle\\Form\\Type\\SlotImageCardType' => 'mautic.form.type.slot.imagecard', 'slot_imagecaption' => 'mautic.form.type.slot.imagecaption', 'Mautic\\CoreBundle\\Form\\Type\\SlotImageCaptionType' => 'mautic.form.type.slot.imagecaption', 'slot_socialshare' => 'mautic.form.type.slot.socialshare', 'Mautic\\CoreBundle\\Form\\Type\\SlotSocialShareType' => 'mautic.form.type.slot.socialshare', 'slot_socialfollow' => 'mautic.form.type.slot.socialfollow', 'Mautic\\CoreBundle\\Form\\Type\\SlotSocialFollowType' => 'mautic.form.type.slot.socialfollow', 'slot_codemode' => 'mautic.form.type.slot.codemode', 'Mautic\\CoreBundle\\Form\\Type\\SlotCodeModeType' => 'mautic.form.type.slot.codemode', 'theme_upload' => 'mautic.form.type.theme.upload', 'Mautic\\CoreBundle\\Form\\Type\\ThemeUploadType' => 'mautic.form.type.theme.upload', 'dynamic_content_filter' => 'mautic.form.type.dynamic_content_filter', 'Mautic\\CoreBundle\\Form\\Type\\DynamicContentFilterType' => 'mautic.form.type.dynamic_content_filter', 'dynamic_content_filter_entry' => 'mautic.form.type.dynamic_content_filter_entry', 'Mautic\\CoreBundle\\Form\\Type\\DynamicContentFilterEntryType' => 'mautic.form.type.dynamic_content_filter_entry', 'dynamic_content_filter_entry_filters' => 'mautic.form.type.dynamic_content_filter_entry_filters', 'Mautic\\CoreBundle\\Form\\Type\\DynamicContentFilterEntryFiltersType' => 'mautic.form.type.dynamic_content_filter_entry_filters', 'mautic.form.type.entity_lookup' => 'mautic.form.type.entity_lookup', 'Mautic\\CoreBundle\\Form\\Type\\EntityLookupType' => 'mautic.form.type.entity_lookup', 'client' => 'mautic.form.type.apiclients', 'Mautic\\ApiBundle\\Form\\Type\\ClientType' => 'mautic.form.type.apiclients', 'apiconfig' => 'mautic.form.type.apiconfig', 'Mautic\\ApiBundle\\Form\\Type\\ConfigType' => 'mautic.form.type.apiconfig', 'asset' => 'mautic.form.type.asset', 'Mautic\\AssetBundle\\Form\\Type\\AssetType' => 'mautic.form.type.asset', 'pointaction_assetdownload' => 'mautic.form.type.pointaction_assetdownload', 'Mautic\\AssetBundle\\Form\\Type\\PointActionAssetDownloadType' => 'mautic.form.type.pointaction_assetdownload', 'campaignevent_assetdownload' => 'mautic.form.type.campaignevent_assetdownload', 'Mautic\\AssetBundle\\Form\\Type\\CampaignEventAssetDownloadType' => 'mautic.form.type.campaignevent_assetdownload', 'asset_submitaction_downloadfile' => 'mautic.form.type.formsubmit_assetdownload', 'Mautic\\AssetBundle\\Form\\Type\\FormSubmitActionDownloadFileType' => 'mautic.form.type.formsubmit_assetdownload', 'asset_list' => 'mautic.form.type.assetlist', 'Mautic\\AssetBundle\\Form\\Type\\AssetListType' => 'mautic.form.type.assetlist', 'assetconfig' => 'mautic.form.type.assetconfig', 'Mautic\\AssetBundle\\Form\\Type\\ConfigType' => 'mautic.form.type.assetconfig', 'asset_dashboard_downloads_in_time_widget' => 'mautic.form.type.asset_dashboard_downloads_in_time_widget', 'Mautic\\AssetBundle\\Form\\Type\\DashboardDownloadsInTimeWidgetType' => 'mautic.form.type.asset_dashboard_downloads_in_time_widget', 'campaign' => 'mautic.campaign.type.form', 'Mautic\\CampaignBundle\\Form\\Type\\CampaignType' => 'mautic.campaign.type.form', 'campaignevent' => 'mautic.campaignrange.type.action', 'Mautic\\CampaignBundle\\Form\\Type\\EventType' => 'mautic.campaignrange.type.action', 'campaign_list' => 'mautic.campaign.type.campaignlist', 'Mautic\\CampaignBundle\\Form\\Type\\CampaignListType' => 'mautic.campaign.type.campaignlist', 'campaignevent_leadchange' => 'mautic.campaign.type.trigger.leadchange', 'Mautic\\CampaignBundle\\Form\\Type\\CampaignEventLeadChangeType' => 'mautic.campaign.type.trigger.leadchange', 'campaignevent_addremovelead' => 'mautic.campaign.type.action.addremovelead', 'Mautic\\CampaignBundle\\Form\\Type\\CampaignEventAddRemoveLeadType' => 'mautic.campaign.type.action.addremovelead', 'campaignevent_canvassettings' => 'mautic.campaign.type.canvassettings', 'Mautic\\CampaignBundle\\Form\\Type\\EventCanvasSettingsType' => 'mautic.campaign.type.canvassettings', 'campaign_leadsource' => 'mautic.campaign.type.leadsource', 'Mautic\\CampaignBundle\\Form\\Type\\CampaignLeadSourceType' => 'mautic.campaign.type.leadsource', 'campaignconfig' => 'mautic.form.type.campaignconfig', 'Mautic\\CampaignBundle\\Form\\Type\\ConfigType' => 'mautic.form.type.campaignconfig', 'category' => 'mautic.form.type.category', 'Mautic\\CategoryBundle\\Form\\Type\\CategoryListType' => 'mautic.form.type.category', 'category_form' => 'mautic.form.type.category_form', 'Mautic\\CategoryBundle\\Form\\Type\\CategoryType' => 'mautic.form.type.category_form', 'category_bundles_form' => 'mautic.form.type.category_bundles_form', 'Mautic\\CategoryBundle\\Form\\Type\\CategoryBundlesType' => 'mautic.form.type.category_bundles_form', 'mautic\\channelbundle\\form\\type\\messagetype' => 'mautic\\channelbundle\\form\\type\\messagetype', 'Mautic\\ChannelBundle\\Form\\Type\\MessageType' => 'mautic\\channelbundle\\form\\type\\messagetype', 'message_list' => 'mautic.form.type.message_list', 'Mautic\\ChannelBundle\\Form\\Type\\MessageListType' => 'mautic.form.type.message_list', 'message_send' => 'mautic.form.type.message_send', 'Mautic\\ChannelBundle\\Form\\Type\\MessageSendType' => 'mautic.form.type.message_send', 'config' => 'mautic.form.type.config', 'Mautic\\ConfigBundle\\Form\\Type\\ConfigType' => 'mautic.form.type.config', 'widget' => 'mautic.dashboard.form.type.widget', 'Mautic\\DashboardBundle\\Form\\Type\\WidgetType' => 'mautic.dashboard.form.type.widget', 'dashboard_upload' => 'mautic.dashboard.form.uplload', 'Mautic\\DashboardBundle\\Form\\Type\\UploadType' => 'mautic.dashboard.form.uplload', 'dashboard_filter' => 'mautic.dashboard.form.filter', 'Mautic\\DashboardBundle\\Form\\Type\\FilterType' => 'mautic.dashboard.form.filter', 'dwc' => 'mautic.form.type.dwc', 'Mautic\\DynamicContentBundle\\Form\\Type\\DynamicContentType' => 'mautic.form.type.dwc', 'dwcsend_list' => 'mautic.form.type.dwcsend_list', 'Mautic\\DynamicContentBundle\\Form\\Type\\DynamicContentSendType' => 'mautic.form.type.dwcsend_list', 'dwcdecision_list' => 'mautic.form.type.dwcdecision_list', 'Mautic\\DynamicContentBundle\\Form\\Type\\DynamicContentDecisionType' => 'mautic.form.type.dwcdecision_list', 'dwc_list' => 'mautic.form.type.dwc_list', 'Mautic\\DynamicContentBundle\\Form\\Type\\DynamicContentListType' => 'mautic.form.type.dwc_list', 'emailform' => 'mautic.form.type.email', 'Mautic\\EmailBundle\\Form\\Type\\EmailType' => 'mautic.form.type.email', 'emailvariant' => 'mautic.form.type.emailvariant', 'Mautic\\EmailBundle\\Form\\Type\\VariantType' => 'mautic.form.type.emailvariant', 'email_list' => 'mautic.form.type.email_list', 'Mautic\\EmailBundle\\Form\\Type\\EmailListType' => 'mautic.form.type.email_list', 'emailopen_list' => 'mautic.form.type.emailopen_list', 'Mautic\\EmailBundle\\Form\\Type\\EmailOpenType' => 'mautic.form.type.emailopen_list', 'emailsend_list' => 'mautic.form.type.emailsend_list', 'Mautic\\EmailBundle\\Form\\Type\\EmailSendType' => 'mautic.form.type.emailsend_list', 'email_submitaction_useremail' => 'mautic.form.type.formsubmit_sendemail_admin', 'Mautic\\EmailBundle\\Form\\Type\\FormSubmitActionUserEmailType' => 'mautic.form.type.formsubmit_sendemail_admin', 'email_abtest_settings' => 'mautic.email.type.email_abtest_settings', 'Mautic\\EmailBundle\\Form\\Type\\AbTestPropertiesType' => 'mautic.email.type.email_abtest_settings', 'batch_send' => 'mautic.email.type.batch_send', 'Mautic\\EmailBundle\\Form\\Type\\BatchSendType' => 'mautic.email.type.batch_send', 'emailconfig' => 'mautic.form.type.emailconfig', 'Mautic\\EmailBundle\\Form\\Type\\ConfigType' => 'mautic.form.type.emailconfig', 'monitored_mailboxes' => 'mautic.form.type.coreconfig_monitored_mailboxes', 'Mautic\\EmailBundle\\Form\\Type\\ConfigMonitoredMailboxesType' => 'mautic.form.type.coreconfig_monitored_mailboxes', 'monitored_email' => 'mautic.form.type.coreconfig_monitored_email', 'Mautic\\EmailBundle\\Form\\Type\\ConfigMonitoredEmailType' => 'mautic.form.type.coreconfig_monitored_email', 'email_dashboard_emails_in_time_widget' => 'mautic.form.type.email_dashboard_emails_in_time_widget', 'Mautic\\EmailBundle\\Form\\Type\\DashboardEmailsInTimeWidgetType' => 'mautic.form.type.email_dashboard_emails_in_time_widget', 'mauticform' => 'mautic.form.type.form', 'Mautic\\FormBundle\\Form\\Type\\FormType' => 'mautic.form.type.form', 'formfield' => 'mautic.form.type.field', 'Mautic\\FormBundle\\Form\\Type\\FieldType' => 'mautic.form.type.field', 'formaction' => 'mautic.form.type.action', 'Mautic\\FormBundle\\Form\\Type\\ActionType' => 'mautic.form.type.action', 'formfield_text' => 'mautic.form.type.field_propertytext', 'Mautic\\FormBundle\\Form\\Type\\FormFieldTextType' => 'mautic.form.type.field_propertytext', 'formfield_placeholder' => 'mautic.form.type.field_propertyplaceholder', 'Mautic\\FormBundle\\Form\\Type\\FormFieldPlaceholderType' => 'mautic.form.type.field_propertyplaceholder', 'formfield_select' => 'mautic.form.type.field_propertyselect', 'Mautic\\FormBundle\\Form\\Type\\FormFieldSelectType' => 'mautic.form.type.field_propertyselect', 'formfield_captcha' => 'mautic.form.type.field_propertycaptcha', 'Mautic\\FormBundle\\Form\\Type\\FormFieldCaptchaType' => 'mautic.form.type.field_propertycaptcha', 'muatic.form.type.field_propertypagebreak' => 'muatic.form.type.field_propertypagebreak', 'Mautic\\FormBundle\\Form\\Type\\FormFieldPageBreakType' => 'muatic.form.type.field_propertypagebreak', 'formfield_group' => 'mautic.form.type.field_propertygroup', 'Mautic\\FormBundle\\Form\\Type\\FormFieldGroupType' => 'mautic.form.type.field_propertygroup', 'pointaction_formsubmit' => 'mautic.form.type.pointaction_formsubmit', 'Mautic\\FormBundle\\Form\\Type\\PointActionFormSubmitType' => 'mautic.form.type.pointaction_formsubmit', 'form_list' => 'mautic.form.type.form_list', 'Mautic\\FormBundle\\Form\\Type\\FormListType' => 'mautic.form.type.form_list', 'campaignevent_formsubmit' => 'mautic.form.type.campaignevent_formsubmit', 'Mautic\\FormBundle\\Form\\Type\\CampaignEventFormSubmitType' => 'mautic.form.type.campaignevent_formsubmit', 'campaignevent_form_field_value' => 'mautic.form.type.campaignevent_form_field_value', 'Mautic\\FormBundle\\Form\\Type\\CampaignEventFormFieldValueType' => 'mautic.form.type.campaignevent_form_field_value', 'form_submitaction_sendemail' => 'mautic.form.type.form_submitaction_sendemail', 'Mautic\\FormBundle\\Form\\Type\\SubmitActionEmailType' => 'mautic.form.type.form_submitaction_sendemail', 'mautic.form.type.form_submitaction_repost' => 'mautic.form.type.form_submitaction_repost', 'Mautic\\FormBundle\\Form\\Type\\SubmitActionRepostType' => 'mautic.form.type.form_submitaction_repost', 'lead' => 'mautic.form.type.lead', 'Mautic\\LeadBundle\\Form\\Type\\LeadType' => 'mautic.form.type.lead', 'leadlist' => 'mautic.form.type.leadlist', 'Mautic\\LeadBundle\\Form\\Type\\ListType' => 'mautic.form.type.leadlist', 'leadlist_choices' => 'mautic.form.type.leadlist_choices', 'Mautic\\LeadBundle\\Form\\Type\\LeadListType' => 'mautic.form.type.leadlist_choices', 'leadlist_filter' => 'mautic.form.type.leadlist_filter', 'Mautic\\LeadBundle\\Form\\Type\\FilterType' => 'mautic.form.type.leadlist_filter', 'leadfield' => 'mautic.form.type.leadfield', 'Mautic\\LeadBundle\\Form\\Type\\FieldType' => 'mautic.form.type.leadfield', 'lead_submitaction_pointschange' => 'mautic.form.type.lead.submitaction.pointschange', 'Mautic\\LeadBundle\\Form\\Type\\FormSubmitActionPointsChangeType' => 'mautic.form.type.lead.submitaction.pointschange', 'lead_action_addutmtags' => 'mautic.form.type.lead.submitaction.addutmtags', 'Mautic\\LeadBundle\\Form\\Type\\ActionAddUtmTagsType' => 'mautic.form.type.lead.submitaction.addutmtags', 'lead_action_removedonotcontact' => 'mautic.form.type.lead.submitaction.removedonotcontact', 'Mautic\\LeadBundle\\Form\\Type\\ActionRemoveDoNotContact' => 'mautic.form.type.lead.submitaction.removedonotcontact', 'leadlist_action_type' => 'mautic.form.type.lead.submitaction.changelist', 'Mautic\\LeadBundle\\Form\\Type\\EventListType' => 'mautic.form.type.lead.submitaction.changelist', 'leadpoints_trigger' => 'mautic.form.type.leadpoints_trigger', 'Mautic\\LeadBundle\\Form\\Type\\PointTriggerType' => 'mautic.form.type.leadpoints_trigger', 'leadpoints_action' => 'mautic.form.type.leadpoints_action', 'Mautic\\LeadBundle\\Form\\Type\\PointActionType' => 'mautic.form.type.leadpoints_action', 'leadlist_trigger' => 'mautic.form.type.leadlist_trigger', 'Mautic\\LeadBundle\\Form\\Type\\ListTriggerType' => 'mautic.form.type.leadlist_trigger', 'leadlist_action' => 'mautic.form.type.leadlist_action', 'Mautic\\LeadBundle\\Form\\Type\\ListActionType' => 'mautic.form.type.leadlist_action', 'updatelead_action' => 'mautic.form.type.updatelead_action', 'Mautic\\LeadBundle\\Form\\Type\\UpdateLeadActionType' => 'mautic.form.type.updatelead_action', 'leadnote' => 'mautic.form.type.leadnote', 'Mautic\\LeadBundle\\Form\\Type\\NoteType' => 'mautic.form.type.leadnote', 'leaddevice' => 'mautic.form.type.leaddevice', 'Mautic\\LeadBundle\\Form\\Type\\DeviceType' => 'mautic.form.type.leaddevice', 'lead_import' => 'mautic.form.type.lead_import', 'Mautic\\LeadBundle\\Form\\Type\\LeadImportType' => 'mautic.form.type.lead_import', 'lead_field_import' => 'mautic.form.type.lead_field_import', 'Mautic\\LeadBundle\\Form\\Type\\LeadImportFieldType' => 'mautic.form.type.lead_field_import', 'lead_quickemail' => 'mautic.form.type.lead_quickemail', 'Mautic\\LeadBundle\\Form\\Type\\EmailType' => 'mautic.form.type.lead_quickemail', 'lead_tags' => 'mautic.form.type.lead_tags', 'Mautic\\LeadBundle\\Form\\Type\\TagListType' => 'mautic.form.type.lead_tags', 'lead_tag' => 'mautic.form.type.lead_tag', 'Mautic\\LeadBundle\\Form\\Type\\TagType' => 'mautic.form.type.lead_tag', 'modify_lead_tags' => 'mautic.form.type.modify_lead_tags', 'Mautic\\LeadBundle\\Form\\Type\\ModifyLeadTagsType' => 'mautic.form.type.modify_lead_tags', 'lead_batch' => 'mautic.form.type.lead_batch', 'Mautic\\LeadBundle\\Form\\Type\\BatchType' => 'mautic.form.type.lead_batch', 'lead_batch_dnc' => 'mautic.form.type.lead_batch_dnc', 'Mautic\\LeadBundle\\Form\\Type\\DncType' => 'mautic.form.type.lead_batch_dnc', 'lead_batch_stage' => 'mautic.form.type.lead_batch_stage', 'Mautic\\LeadBundle\\Form\\Type\\StageType' => 'mautic.form.type.lead_batch_stage', 'lead_merge' => 'mautic.form.type.lead_merge', 'Mautic\\LeadBundle\\Form\\Type\\MergeType' => 'mautic.form.type.lead_merge', 'lead_contact_frequency_rules' => 'mautic.form.type.lead_contact_frequency_rules', 'Mautic\\LeadBundle\\Form\\Type\\ContactFrequencyType' => 'mautic.form.type.lead_contact_frequency_rules', 'campaignevent_lead_field_value' => 'mautic.form.type.campaignevent_lead_field_value', 'Mautic\\LeadBundle\\Form\\Type\\CampaignEventLeadFieldValueType' => 'mautic.form.type.campaignevent_lead_field_value', 'leadfields_choices' => 'mautic.form.type.lead_fields', 'Mautic\\LeadBundle\\Form\\Type\\LeadFieldsType' => 'mautic.form.type.lead_fields', 'lead_dashboard_leads_in_time_widget' => 'mautic.form.type.lead_dashboard_leads_in_time_widget', 'Mautic\\LeadBundle\\Form\\Type\\DashboardLeadsInTimeWidgetType' => 'mautic.form.type.lead_dashboard_leads_in_time_widget', 'lead_dashboard_leads_lifetime_widget' => 'mautic.form.type.lead_dashboard_leads_lifetime_widget', 'Mautic\\LeadBundle\\Form\\Type\\DashboardLeadsLifetimeWidgetType' => 'mautic.form.type.lead_dashboard_leads_lifetime_widget', 'company' => 'mautic.company.type.form', 'Mautic\\LeadBundle\\Form\\Type\\CompanyType' => 'mautic.company.type.form', 'addtocompany_action' => 'mautic.company.campaign.action.type.form', 'Mautic\\LeadBundle\\Form\\Type\\AddToCompanyActionType' => 'mautic.company.campaign.action.type.form', 'company_list' => 'mautic.company.list.type.form', 'Mautic\\LeadBundle\\Form\\Type\\CompanyListType' => 'mautic.company.list.type.form', 'leadcategory_choices' => 'mautic.form.type.lead_categories', 'Mautic\\LeadBundle\\Form\\Type\\LeadCategoryType' => 'mautic.form.type.lead_categories', 'company_merge' => 'mautic.company.merge.type.form', 'Mautic\\LeadBundle\\Form\\Type\\CompanyMergeType' => 'mautic.company.merge.type.form', 'scorecontactscompanies_action' => 'mautic.form.type.company_change_score', 'Mautic\\LeadBundle\\Form\\Type\\CompanyChangeScoreActionType' => 'mautic.form.type.company_change_score', 'notification' => 'mautic.form.type.notification', 'Mautic\\NotificationBundle\\Form\\Type\\NotificationType' => 'mautic.form.type.notification', 'notificationconfig' => 'mautic.form.type.notificationconfig', 'Mautic\\NotificationBundle\\Form\\Type\\ConfigType' => 'mautic.form.type.notificationconfig', 'notificationsend_list' => 'mautic.form.type.notificationsend_list', 'Mautic\\NotificationBundle\\Form\\Type\\NotificationSendType' => 'mautic.form.type.notificationsend_list', 'notification_list' => 'mautic.form.type.notification_list', 'Mautic\\NotificationBundle\\Form\\Type\\NotificationListType' => 'mautic.form.type.notification_list', 'page' => 'mautic.form.type.page', 'Mautic\\PageBundle\\Form\\Type\\PageType' => 'mautic.form.type.page', 'pagevariant' => 'mautic.form.type.pagevariant', 'Mautic\\PageBundle\\Form\\Type\\VariantType' => 'mautic.form.type.pagevariant', 'pointaction_pagehit' => 'mautic.form.type.pointaction_pointhit', 'Mautic\\PageBundle\\Form\\Type\\PointActionPageHitType' => 'mautic.form.type.pointaction_pointhit', 'pointaction_urlhit' => 'mautic.form.type.pointaction_urlhit', 'Mautic\\PageBundle\\Form\\Type\\PointActionUrlHitType' => 'mautic.form.type.pointaction_urlhit', 'campaignevent_pagehit' => 'mautic.form.type.pagehit.campaign_trigger', 'Mautic\\PageBundle\\Form\\Type\\CampaignEventPageHitType' => 'mautic.form.type.pagehit.campaign_trigger', 'page_list' => 'mautic.form.type.pagelist', 'Mautic\\PageBundle\\Form\\Type\\PageListType' => 'mautic.form.type.pagelist', 'page_abtest_settings' => 'mautic.form.type.page_abtest_settings', 'Mautic\\PageBundle\\Form\\Type\\AbTestPropertiesType' => 'mautic.form.type.page_abtest_settings', 'page_publish_dates' => 'mautic.form.type.page_publish_dates', 'Mautic\\PageBundle\\Form\\Type\\PagePublishDatesType' => 'mautic.form.type.page_publish_dates', 'pageconfig' => 'mautic.form.type.pageconfig', 'Mautic\\PageBundle\\Form\\Type\\ConfigType' => 'mautic.form.type.pageconfig', 'slideshow_config' => 'mautic.form.type.slideshow_config', 'Mautic\\PageBundle\\Form\\Type\\SlideshowGlobalConfigType' => 'mautic.form.type.slideshow_config', 'slideshow_slide_config' => 'mautic.form.type.slideshow_slide_config', 'Mautic\\PageBundle\\Form\\Type\\SlideshowSlideConfigType' => 'mautic.form.type.slideshow_slide_config', 'redirect_list' => 'mautic.form.type.redirect_list', 'Mautic\\PageBundle\\Form\\Type\\RedirectListType' => 'mautic.form.type.redirect_list', 'page_dashboard_hits_in_time_widget' => 'mautic.form.type.page_dashboard_hits_in_time_widget', 'Mautic\\PageBundle\\Form\\Type\\DashboardHitsInTimeWidgetType' => 'mautic.form.type.page_dashboard_hits_in_time_widget', 'integration_details' => 'mautic.form.type.integration.details', 'Mautic\\PluginBundle\\Form\\Type\\DetailsType' => 'mautic.form.type.integration.details', 'integration_featuresettings' => 'mautic.form.type.integration.settings', 'Mautic\\PluginBundle\\Form\\Type\\FeatureSettingsType' => 'mautic.form.type.integration.settings', 'integration_fields' => 'mautic.form.type.integration.fields', 'Mautic\\PluginBundle\\Form\\Type\\FieldsType' => 'mautic.form.type.integration.fields', 'integration_company_fields' => 'mautic.form.type.integration.company.fields', 'Mautic\\PluginBundle\\Form\\Type\\CompanyFieldsType' => 'mautic.form.type.integration.company.fields', 'integration_keys' => 'mautic.form.type.integration.keys', 'Mautic\\PluginBundle\\Form\\Type\\KeysType' => 'mautic.form.type.integration.keys', 'integration_list' => 'mautic.form.type.integration.list', 'Mautic\\PluginBundle\\Form\\Type\\IntegrationsListType' => 'mautic.form.type.integration.list', 'integration_config' => 'mautic.form.type.integration.config', 'Mautic\\PluginBundle\\Form\\Type\\IntegrationConfigType' => 'mautic.form.type.integration.config', 'point' => 'mautic.point.type.form', 'Mautic\\PointBundle\\Form\\Type\\PointType' => 'mautic.point.type.form', 'pointaction' => 'mautic.point.type.action', 'Mautic\\PointBundle\\Form\\Type\\PointActionType' => 'mautic.point.type.action', 'pointtrigger' => 'mautic.pointtrigger.type.form', 'Mautic\\PointBundle\\Form\\Type\\TriggerType' => 'mautic.pointtrigger.type.form', 'pointtriggerevent' => 'mautic.pointtrigger.type.action', 'Mautic\\PointBundle\\Form\\Type\\TriggerEventType' => 'mautic.pointtrigger.type.action', 'genericpoint_settings' => 'mautic.point.type.genericpoint_settings', 'Mautic\\PointBundle\\Form\\Type\\GenericPointSettingsType' => 'mautic.point.type.genericpoint_settings', 'report' => 'mautic.form.type.report', 'Mautic\\ReportBundle\\Form\\Type\\ReportType' => 'mautic.form.type.report', 'filter_selector' => 'mautic.form.type.filter_selector', 'Mautic\\ReportBundle\\Form\\Type\\FilterSelectorType' => 'mautic.form.type.filter_selector', 'table_order' => 'mautic.form.type.table_order', 'Mautic\\ReportBundle\\Form\\Type\\TableOrderType' => 'mautic.form.type.table_order', 'report_filters' => 'mautic.form.type.report_filters', 'Mautic\\ReportBundle\\Form\\Type\\ReportFiltersType' => 'mautic.form.type.report_filters', 'report_dynamicfilters' => 'mautic.form.type.report_dynamic_filters', 'Mautic\\ReportBundle\\Form\\Type\\DynamicFiltersType' => 'mautic.form.type.report_dynamic_filters', 'report_widget' => 'mautic.form.type.report_widget', 'Mautic\\ReportBundle\\Form\\Type\\ReportWidgetType' => 'mautic.form.type.report_widget', 'sms' => 'mautic.form.type.sms', 'Mautic\\SmsBundle\\Form\\Type\\SmsType' => 'mautic.form.type.sms', 'smsconfig' => 'mautic.form.type.smsconfig', 'Mautic\\SmsBundle\\Form\\Type\\ConfigType' => 'mautic.form.type.smsconfig', 'smssend_list' => 'mautic.form.type.smssend_list', 'Mautic\\SmsBundle\\Form\\Type\\SmsSendType' => 'mautic.form.type.smssend_list', 'sms_list' => 'mautic.form.type.sms_list', 'Mautic\\SmsBundle\\Form\\Type\\SmsListType' => 'mautic.form.type.sms_list', 'stage' => 'mautic.stage.type.form', 'Mautic\\StageBundle\\Form\\Type\\StageType' => 'mautic.stage.type.form', 'stageaction' => 'mautic.stage.type.action', 'Mautic\\StageBundle\\Form\\Type\\StageActionType' => 'mautic.stage.type.action', 'stageaction_list' => 'mautic.stage.type.action_list', 'Mautic\\StageBundle\\Form\\Type\\StageActionListType' => 'mautic.stage.type.action_list', 'stageaction_change' => 'mautic.stage.type.action_change', 'Mautic\\StageBundle\\Form\\Type\\StageActionChangeType' => 'mautic.stage.type.action_change', 'stage_list' => 'mautic.stage.type.stage_list', 'Mautic\\StageBundle\\Form\\Type\\StageListType' => 'mautic.stage.type.stage_list', 'genericstage_settings' => 'mautic.point.type.genericstage_settings', 'Mautic\\StageBundle\\Form\\Type\\GenericStageSettingsType' => 'mautic.point.type.genericstage_settings', 'user' => 'mautic.form.type.user', 'Mautic\\UserBundle\\Form\\Type\\UserType' => 'mautic.form.type.user', 'role' => 'mautic.form.type.role', 'Mautic\\UserBundle\\Form\\Type\\RoleType' => 'mautic.form.type.role', 'permissions' => 'mautic.form.type.permissions', 'Mautic\\UserBundle\\Form\\Type\\PermissionsType' => 'mautic.form.type.permissions', 'permissionlist' => 'mautic.form.type.permissionlist', 'Mautic\\UserBundle\\Form\\Type\\PermissionListType' => 'mautic.form.type.permissionlist', 'passwordreset' => 'mautic.form.type.passwordreset', 'Mautic\\UserBundle\\Form\\Type\\PasswordResetType' => 'mautic.form.type.passwordreset', 'passwordresetconfirm' => 'mautic.form.type.passwordresetconfirm', 'Mautic\\UserBundle\\Form\\Type\\PasswordResetConfirmType' => 'mautic.form.type.passwordresetconfirm', 'user_list' => 'mautic.form.type.user_list', 'Mautic\\UserBundle\\Form\\Type\\UserListType' => 'mautic.form.type.user_list', 'role_list' => 'mautic.form.type.role_list', 'Mautic\\UserBundle\\Form\\Type\\RoleListType' => 'mautic.form.type.role_list', 'userconfig' => 'mautic.form.type.userconfig', 'Mautic\\UserBundle\\Form\\Type\\ConfigType' => 'mautic.form.type.userconfig', 'webhook' => 'mautic.form.type.webhook', 'Mautic\\WebhookBundle\\Form\\Type\\WebhookType' => 'mautic.form.type.webhook', 'webhookconfig' => 'mautic.form.type.webhookconfig', 'Mautic\\WebhookBundle\\Form\\Type\\ConfigType' => 'mautic.form.type.webhookconfig', 'fullcontact_lookup' => 'mautic.form.type.fullcontact_lookup', 'MauticPlugin\\MauticFullContactBundle\\Form\\Type\\LookupType' => 'mautic.form.type.fullcontact_lookup', 'fullcontact_batch_lookup' => 'mautic.form.type.fullcontact_batch_lookup', 'MauticPlugin\\MauticFullContactBundle\\Form\\Type\\BatchLookupType' => 'mautic.form.type.fullcontact_batch_lookup', 'cloudstorage_openstack' => 'mautic.form.type.cloudstorage.openstack', 'MauticPlugin\\MauticCloudStorageBundle\\Form\\Type\\OpenStackType' => 'mautic.form.type.cloudstorage.openstack', 'cloudstorage_rackspace' => 'mautic.form.type.cloudstorage.rackspace', 'MauticPlugin\\MauticCloudStorageBundle\\Form\\Type\\RackspaceType' => 'mautic.form.type.cloudstorage.rackspace', 'emailmarketing_mailchimp' => 'mautic.form.type.emailmarketing.mailchimp', 'MauticPlugin\\MauticEmailMarketingBundle\\Form\\Type\\MailchimpType' => 'mautic.form.type.emailmarketing.mailchimp', 'emailmarketing_constantcontact' => 'mautic.form.type.emailmarketing.constantcontact', 'MauticPlugin\\MauticEmailMarketingBundle\\Form\\Type\\ConstantContactType' => 'mautic.form.type.emailmarketing.constantcontact', 'emailmarketing_icontact' => 'mautic.form.type.emailmarketing.icontact', 'MauticPlugin\\MauticEmailMarketingBundle\\Form\\Type\\IcontactType' => 'mautic.form.type.emailmarketing.icontact', 'focus_color' => 'mautic.focus.form.type.color', 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\ColorType' => 'mautic.focus.form.type.color', 'focus_content' => 'mautic.focus.form.type.content', 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\ContentType' => 'mautic.focus.form.type.content', 'focus' => 'mautic.focus.form.type.focus', 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\FocusType' => 'mautic.focus.form.type.focus', 'focus_entity_properties' => 'mautic.focus.form.type.entity_properties', 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\PropertiesType' => 'mautic.focus.form.type.entity_properties', 'focus_properties' => 'mautic.focus.form.type.properties', 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\FocusPropertiesType' => 'mautic.focus.form.type.properties', 'sociallogin' => 'mautic.form.type.social.sociallogin', 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\SocialLoginType' => 'mautic.form.type.social.sociallogin', 'socialmedia_facebook' => 'mautic.form.type.social.facebook', 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\FacebookType' => 'mautic.form.type.social.facebook', 'socialmedia_twitter' => 'mautic.form.type.social.twitter', 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterType' => 'mautic.form.type.social.twitter', 'socialmedia_googleplus' => 'mautic.form.type.social.googleplus', 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\GooglePlusType' => 'mautic.form.type.social.googleplus', 'socialmedia_linkedin' => 'mautic.form.type.social.linkedin', 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\LinkedInType' => 'mautic.form.type.social.linkedin', 'twitter_tweet' => 'mautic.social.form.type.twitter.tweet', 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TweetType' => 'mautic.social.form.type.twitter.tweet', 'monitoring' => 'mautic.social.form.type.monitoring', 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\MonitoringType' => 'mautic.social.form.type.monitoring', 'twitter_abstract' => 'mautic.social.form.type.network.twitter.abstract', 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterAbstractType' => 'mautic.social.form.type.network.twitter.abstract', 'twitter_hashtag' => 'mautic.social.form.type.network.twitter.hashtag', 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterHashtagType' => 'mautic.social.form.type.network.twitter.hashtag', 'twitter_handle' => 'mautic.social.form.type.network.twitter.mention', 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterMentionType' => 'mautic.social.form.type.network.twitter.mention', 'twitter_custom' => 'mautic.social.form.type.network.twitter.custom', 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterCustomType' => 'mautic.social.form.type.network.twitter.custom', 'social_config' => 'mautic.social.config', 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\ConfigType' => 'mautic.social.config', 'citrix_list' => 'mautic.form.type.fieldslist.citrixlist', 'MauticPlugin\\MauticCitrixBundle\\Form\\Type\\CitrixListType' => 'mautic.form.type.fieldslist.citrixlist', 'citrix_submit_action' => 'mautic.form.type.citrix.submitaction', 'MauticPlugin\\MauticCitrixBundle\\Form\\Type\\CitrixActionType' => 'mautic.form.type.citrix.submitaction', 'citrix_campaign_event' => 'mautic.form.type.citrix.campaignevent', 'MauticPlugin\\MauticCitrixBundle\\Form\\Type\\CitrixCampaignEventType' => 'mautic.form.type.citrix.campaignevent', 'citrix_campaign_action' => 'mautic.form.type.citrix.campaignaction', 'MauticPlugin\\MauticCitrixBundle\\Form\\Type\\CitrixCampaignActionType' => 'mautic.form.type.citrix.campaignaction', 'clearbit_lookup' => 'mautic.form.type.clearbit_lookup', 'MauticPlugin\\MauticClearbitBundle\\Form\\Type\\LookupType' => 'mautic.form.type.clearbit_lookup', 'clearbit_batch_lookup' => 'mautic.form.type.clearbit_batch_lookup', 'MauticPlugin\\MauticClearbitBundle\\Form\\Type\\BatchLookupType' => 'mautic.form.type.clearbit_batch_lookup'), array('Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => array(0 => 'form.type_extension.form.http_foundation', 1 => 'form.type_extension.form.validator', 2 => 'form.type_extension.upload.validator', 3 => 'form.type_extension.csrf', 4 => 'form.type_extension.form.data_collector', 5 => 'fos_rest.form.extension.csrf_disable'), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => array(0 => 'form.type_extension.repeated.validator'), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => array(0 => 'form.type_extension.submit.validator'), 'form' => array(0 => 'mautic.form.extension.custom')), array(0 => 'form.type_guesser.validator', 1 => 'form.type_guesser.doctrine'))), $this->get('form.resolved_type_factory'));
    }

    /**
     * Gets the 'form.resolved_type_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy A Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy instance
     */
    protected function getForm_ResolvedTypeFactoryService()
    {
        return $this->services['form.resolved_type_factory'] = new \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy(new \Symfony\Component\Form\ResolvedFormTypeFactory(), $this->get('data_collector.form'));
    }

    /**
     * Gets the 'form.type.birthday' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\BirthdayType A Symfony\Component\Form\Extension\Core\Type\BirthdayType instance
     */
    protected function getForm_Type_BirthdayService()
    {
        return $this->services['form.type.birthday'] = new \Symfony\Component\Form\Extension\Core\Type\BirthdayType();
    }

    /**
     * Gets the 'form.type.button' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\ButtonType A Symfony\Component\Form\Extension\Core\Type\ButtonType instance
     */
    protected function getForm_Type_ButtonService()
    {
        return $this->services['form.type.button'] = new \Symfony\Component\Form\Extension\Core\Type\ButtonType();
    }

    /**
     * Gets the 'form.type.checkbox' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CheckboxType A Symfony\Component\Form\Extension\Core\Type\CheckboxType instance
     */
    protected function getForm_Type_CheckboxService()
    {
        return $this->services['form.type.checkbox'] = new \Symfony\Component\Form\Extension\Core\Type\CheckboxType();
    }

    /**
     * Gets the 'form.type.choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\ChoiceType A Symfony\Component\Form\Extension\Core\Type\ChoiceType instance
     */
    protected function getForm_Type_ChoiceService()
    {
        return $this->services['form.type.choice'] = new \Symfony\Component\Form\Extension\Core\Type\ChoiceType(new \Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator(new \Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator(new \Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory(), $this->get('property_accessor'))));
    }

    /**
     * Gets the 'form.type.collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CollectionType A Symfony\Component\Form\Extension\Core\Type\CollectionType instance
     */
    protected function getForm_Type_CollectionService()
    {
        return $this->services['form.type.collection'] = new \Symfony\Component\Form\Extension\Core\Type\CollectionType();
    }

    /**
     * Gets the 'form.type.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CountryType A Symfony\Component\Form\Extension\Core\Type\CountryType instance
     */
    protected function getForm_Type_CountryService()
    {
        return $this->services['form.type.country'] = new \Symfony\Component\Form\Extension\Core\Type\CountryType();
    }

    /**
     * Gets the 'form.type.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CurrencyType A Symfony\Component\Form\Extension\Core\Type\CurrencyType instance
     */
    protected function getForm_Type_CurrencyService()
    {
        return $this->services['form.type.currency'] = new \Symfony\Component\Form\Extension\Core\Type\CurrencyType();
    }

    /**
     * Gets the 'form.type.date' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\DateType A Symfony\Component\Form\Extension\Core\Type\DateType instance
     */
    protected function getForm_Type_DateService()
    {
        return $this->services['form.type.date'] = new \Symfony\Component\Form\Extension\Core\Type\DateType();
    }

    /**
     * Gets the 'form.type.datetime' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\DateTimeType A Symfony\Component\Form\Extension\Core\Type\DateTimeType instance
     */
    protected function getForm_Type_DatetimeService()
    {
        return $this->services['form.type.datetime'] = new \Symfony\Component\Form\Extension\Core\Type\DateTimeType();
    }

    /**
     * Gets the 'form.type.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\EmailType A Symfony\Component\Form\Extension\Core\Type\EmailType instance
     */
    protected function getForm_Type_EmailService()
    {
        return $this->services['form.type.email'] = new \Symfony\Component\Form\Extension\Core\Type\EmailType();
    }

    /**
     * Gets the 'form.type.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Doctrine\Form\Type\EntityType A Symfony\Bridge\Doctrine\Form\Type\EntityType instance
     */
    protected function getForm_Type_EntityService()
    {
        return $this->services['form.type.entity'] = new \Symfony\Bridge\Doctrine\Form\Type\EntityType($this->get('doctrine'));
    }

    /**
     * Gets the 'form.type.file' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\FileType A Symfony\Component\Form\Extension\Core\Type\FileType instance
     */
    protected function getForm_Type_FileService()
    {
        return $this->services['form.type.file'] = new \Symfony\Component\Form\Extension\Core\Type\FileType();
    }

    /**
     * Gets the 'form.type.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\FormType A Symfony\Component\Form\Extension\Core\Type\FormType instance
     */
    protected function getForm_Type_FormService()
    {
        return $this->services['form.type.form'] = new \Symfony\Component\Form\Extension\Core\Type\FormType($this->get('property_accessor'));
    }

    /**
     * Gets the 'form.type.hidden' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\HiddenType A Symfony\Component\Form\Extension\Core\Type\HiddenType instance
     */
    protected function getForm_Type_HiddenService()
    {
        return $this->services['form.type.hidden'] = new \Symfony\Component\Form\Extension\Core\Type\HiddenType();
    }

    /**
     * Gets the 'form.type.integer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\IntegerType A Symfony\Component\Form\Extension\Core\Type\IntegerType instance
     */
    protected function getForm_Type_IntegerService()
    {
        return $this->services['form.type.integer'] = new \Symfony\Component\Form\Extension\Core\Type\IntegerType();
    }

    /**
     * Gets the 'form.type.language' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\LanguageType A Symfony\Component\Form\Extension\Core\Type\LanguageType instance
     */
    protected function getForm_Type_LanguageService()
    {
        return $this->services['form.type.language'] = new \Symfony\Component\Form\Extension\Core\Type\LanguageType();
    }

    /**
     * Gets the 'form.type.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\LocaleType A Symfony\Component\Form\Extension\Core\Type\LocaleType instance
     */
    protected function getForm_Type_LocaleService()
    {
        return $this->services['form.type.locale'] = new \Symfony\Component\Form\Extension\Core\Type\LocaleType();
    }

    /**
     * Gets the 'form.type.money' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\MoneyType A Symfony\Component\Form\Extension\Core\Type\MoneyType instance
     */
    protected function getForm_Type_MoneyService()
    {
        return $this->services['form.type.money'] = new \Symfony\Component\Form\Extension\Core\Type\MoneyType();
    }

    /**
     * Gets the 'form.type.number' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\NumberType A Symfony\Component\Form\Extension\Core\Type\NumberType instance
     */
    protected function getForm_Type_NumberService()
    {
        return $this->services['form.type.number'] = new \Symfony\Component\Form\Extension\Core\Type\NumberType();
    }

    /**
     * Gets the 'form.type.password' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\PasswordType A Symfony\Component\Form\Extension\Core\Type\PasswordType instance
     */
    protected function getForm_Type_PasswordService()
    {
        return $this->services['form.type.password'] = new \Symfony\Component\Form\Extension\Core\Type\PasswordType();
    }

    /**
     * Gets the 'form.type.percent' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\PercentType A Symfony\Component\Form\Extension\Core\Type\PercentType instance
     */
    protected function getForm_Type_PercentService()
    {
        return $this->services['form.type.percent'] = new \Symfony\Component\Form\Extension\Core\Type\PercentType();
    }

    /**
     * Gets the 'form.type.radio' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\RadioType A Symfony\Component\Form\Extension\Core\Type\RadioType instance
     */
    protected function getForm_Type_RadioService()
    {
        return $this->services['form.type.radio'] = new \Symfony\Component\Form\Extension\Core\Type\RadioType();
    }

    /**
     * Gets the 'form.type.range' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\RangeType A Symfony\Component\Form\Extension\Core\Type\RangeType instance
     */
    protected function getForm_Type_RangeService()
    {
        return $this->services['form.type.range'] = new \Symfony\Component\Form\Extension\Core\Type\RangeType();
    }

    /**
     * Gets the 'form.type.repeated' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\RepeatedType A Symfony\Component\Form\Extension\Core\Type\RepeatedType instance
     */
    protected function getForm_Type_RepeatedService()
    {
        return $this->services['form.type.repeated'] = new \Symfony\Component\Form\Extension\Core\Type\RepeatedType();
    }

    /**
     * Gets the 'form.type.reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\ResetType A Symfony\Component\Form\Extension\Core\Type\ResetType instance
     */
    protected function getForm_Type_ResetService()
    {
        return $this->services['form.type.reset'] = new \Symfony\Component\Form\Extension\Core\Type\ResetType();
    }

    /**
     * Gets the 'form.type.search' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\SearchType A Symfony\Component\Form\Extension\Core\Type\SearchType instance
     */
    protected function getForm_Type_SearchService()
    {
        return $this->services['form.type.search'] = new \Symfony\Component\Form\Extension\Core\Type\SearchType();
    }

    /**
     * Gets the 'form.type.submit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\SubmitType A Symfony\Component\Form\Extension\Core\Type\SubmitType instance
     */
    protected function getForm_Type_SubmitService()
    {
        return $this->services['form.type.submit'] = new \Symfony\Component\Form\Extension\Core\Type\SubmitType();
    }

    /**
     * Gets the 'form.type.text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TextType A Symfony\Component\Form\Extension\Core\Type\TextType instance
     */
    protected function getForm_Type_TextService()
    {
        return $this->services['form.type.text'] = new \Symfony\Component\Form\Extension\Core\Type\TextType();
    }

    /**
     * Gets the 'form.type.textarea' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TextareaType A Symfony\Component\Form\Extension\Core\Type\TextareaType instance
     */
    protected function getForm_Type_TextareaService()
    {
        return $this->services['form.type.textarea'] = new \Symfony\Component\Form\Extension\Core\Type\TextareaType();
    }

    /**
     * Gets the 'form.type.time' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TimeType A Symfony\Component\Form\Extension\Core\Type\TimeType instance
     */
    protected function getForm_Type_TimeService()
    {
        return $this->services['form.type.time'] = new \Symfony\Component\Form\Extension\Core\Type\TimeType();
    }

    /**
     * Gets the 'form.type.timezone' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TimezoneType A Symfony\Component\Form\Extension\Core\Type\TimezoneType instance
     */
    protected function getForm_Type_TimezoneService()
    {
        return $this->services['form.type.timezone'] = new \Symfony\Component\Form\Extension\Core\Type\TimezoneType();
    }

    /**
     * Gets the 'form.type.url' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\UrlType A Symfony\Component\Form\Extension\Core\Type\UrlType instance
     */
    protected function getForm_Type_UrlService()
    {
        return $this->services['form.type.url'] = new \Symfony\Component\Form\Extension\Core\Type\UrlType();
    }

    /**
     * Gets the 'form.type_extension.csrf' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension A Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension instance
     */
    protected function getForm_TypeExtension_CsrfService()
    {
        return $this->services['form.type_extension.csrf'] = new \Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension($this->get('security.csrf.token_manager'), true, '_token', $this->get('translator.default'), 'validators', $this->get('form.server_params'));
    }

    /**
     * Gets the 'form.type_extension.form.data_collector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension A Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension instance
     */
    protected function getForm_TypeExtension_Form_DataCollectorService()
    {
        return $this->services['form.type_extension.form.data_collector'] = new \Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension($this->get('data_collector.form'));
    }

    /**
     * Gets the 'form.type_extension.form.http_foundation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension A Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension instance
     */
    protected function getForm_TypeExtension_Form_HttpFoundationService()
    {
        return $this->services['form.type_extension.form.http_foundation'] = new \Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension(new \Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler($this->get('form.server_params')));
    }

    /**
     * Gets the 'form.type_extension.form.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension A Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension instance
     */
    protected function getForm_TypeExtension_Form_ValidatorService()
    {
        return $this->services['form.type_extension.form.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension($this->get('validator'));
    }

    /**
     * Gets the 'form.type_extension.repeated.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension A Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension instance
     */
    protected function getForm_TypeExtension_Repeated_ValidatorService()
    {
        return $this->services['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension();
    }

    /**
     * Gets the 'form.type_extension.submit.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension A Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension instance
     */
    protected function getForm_TypeExtension_Submit_ValidatorService()
    {
        return $this->services['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension();
    }

    /**
     * Gets the 'form.type_extension.upload.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension A Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension instance
     */
    protected function getForm_TypeExtension_Upload_ValidatorService()
    {
        return $this->services['form.type_extension.upload.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension($this->get('translator'), 'validators');
    }

    /**
     * Gets the 'form.type_guesser.doctrine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser A Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser instance
     */
    protected function getForm_TypeGuesser_DoctrineService()
    {
        return $this->services['form.type_guesser.doctrine'] = new \Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser($this->get('doctrine'));
    }

    /**
     * Gets the 'form.type_guesser.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser A Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser instance
     */
    protected function getForm_TypeGuesser_ValidatorService()
    {
        return $this->services['form.type_guesser.validator'] = new \Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser($this->get('validator'));
    }

    /**
     * Gets the 'fos_oauth_server.access_token_manager.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\OAuthServerBundle\Entity\AccessTokenManager A FOS\OAuthServerBundle\Entity\AccessTokenManager instance
     */
    protected function getFosOauthServer_AccessTokenManager_DefaultService()
    {
        return $this->services['fos_oauth_server.access_token_manager.default'] = new \FOS\OAuthServerBundle\Entity\AccessTokenManager($this->get('fos_oauth_server.entity_manager'), 'Mautic\\ApiBundle\\Entity\\oAuth2\\AccessToken');
    }

    /**
     * Gets the 'fos_oauth_server.auth_code_manager.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\OAuthServerBundle\Entity\AuthCodeManager A FOS\OAuthServerBundle\Entity\AuthCodeManager instance
     */
    protected function getFosOauthServer_AuthCodeManager_DefaultService()
    {
        return $this->services['fos_oauth_server.auth_code_manager.default'] = new \FOS\OAuthServerBundle\Entity\AuthCodeManager($this->get('fos_oauth_server.entity_manager'), 'Mautic\\ApiBundle\\Entity\\oAuth2\\AuthCode');
    }

    /**
     * Gets the 'fos_oauth_server.authorize.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Form A Symfony\Component\Form\Form instance
     */
    protected function getFosOauthServer_Authorize_FormService()
    {
        return $this->services['fos_oauth_server.authorize.form'] = $this->get('form.factory')->createNamed('fos_oauth_server_authorize_form', 'FOS\\OAuthServerBundle\\Form\\Type\\AuthorizeFormType', NULL, array('validation_groups' => array(0 => 'Authorize', 1 => 'Default')));
    }

    /**
     * Gets the 'fos_oauth_server.authorize.form.handler.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\OAuthServerBundle\Form\Handler\AuthorizeFormHandler A FOS\OAuthServerBundle\Form\Handler\AuthorizeFormHandler instance
     */
    protected function getFosOauthServer_Authorize_Form_Handler_DefaultService()
    {
        return $this->services['fos_oauth_server.authorize.form.handler.default'] = new \FOS\OAuthServerBundle\Form\Handler\AuthorizeFormHandler($this->get('fos_oauth_server.authorize.form'), $this->get('request_stack', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'fos_oauth_server.authorize.form.type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\OAuthServerBundle\Form\Type\AuthorizeFormType A FOS\OAuthServerBundle\Form\Type\AuthorizeFormType instance
     */
    protected function getFosOauthServer_Authorize_Form_TypeService()
    {
        return $this->services['fos_oauth_server.authorize.form.type'] = new \FOS\OAuthServerBundle\Form\Type\AuthorizeFormType();
    }

    /**
     * Gets the 'fos_oauth_server.client_manager.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\OAuthServerBundle\Entity\ClientManager A FOS\OAuthServerBundle\Entity\ClientManager instance
     */
    protected function getFosOauthServer_ClientManager_DefaultService()
    {
        return $this->services['fos_oauth_server.client_manager.default'] = new \FOS\OAuthServerBundle\Entity\ClientManager($this->get('fos_oauth_server.entity_manager'), 'Mautic\\ApiBundle\\Entity\\oAuth2\\Client');
    }

    /**
     * Gets the 'fos_oauth_server.controller.token' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\OAuthServerBundle\Controller\TokenController A FOS\OAuthServerBundle\Controller\TokenController instance
     */
    protected function getFosOauthServer_Controller_TokenService()
    {
        return $this->services['fos_oauth_server.controller.token'] = new \FOS\OAuthServerBundle\Controller\TokenController($this->get('fos_oauth_server.server'));
    }

    /**
     * Gets the 'fos_oauth_server.refresh_token_manager.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\OAuthServerBundle\Entity\RefreshTokenManager A FOS\OAuthServerBundle\Entity\RefreshTokenManager instance
     */
    protected function getFosOauthServer_RefreshTokenManager_DefaultService()
    {
        return $this->services['fos_oauth_server.refresh_token_manager.default'] = new \FOS\OAuthServerBundle\Entity\RefreshTokenManager($this->get('fos_oauth_server.entity_manager'), 'Mautic\\ApiBundle\\Entity\\oAuth2\\RefreshToken');
    }

    /**
     * Gets the 'fos_oauth_server.server' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \OAuth2\OAuth2 A OAuth2\OAuth2 instance
     */
    protected function getFosOauthServer_ServerService()
    {
        return $this->services['fos_oauth_server.server'] = new \OAuth2\OAuth2($this->get('fos_oauth_server.storage'), array('access_token_lifetime' => 3600, 'refresh_token_lifetime' => 1209600));
    }

    /**
     * Gets the 'fos_oauth_server.storage' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\OAuthServerBundle\Storage\OAuthStorage A FOS\OAuthServerBundle\Storage\OAuthStorage instance
     */
    protected function getFosOauthServer_StorageService()
    {
        return $this->services['fos_oauth_server.storage'] = new \FOS\OAuthServerBundle\Storage\OAuthStorage($this->get('fos_oauth_server.client_manager.default'), $this->get('fos_oauth_server.access_token_manager.default'), $this->get('fos_oauth_server.refresh_token_manager.default'), $this->get('fos_oauth_server.auth_code_manager.default'), $this->get('mautic.user.provider', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.encoder_factory'));
    }

    /**
     * Gets the 'fos_rest.body_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\EventListener\BodyListener A FOS\RestBundle\EventListener\BodyListener instance
     */
    protected function getFosRest_BodyListenerService()
    {
        $this->services['fos_rest.body_listener'] = $instance = new \FOS\RestBundle\EventListener\BodyListener($this->get('fos_rest.decoder_provider'), false);

        $instance->setDefaultFormat(NULL);

        return $instance;
    }

    /**
     * Gets the 'fos_rest.decoder.json' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Decoder\JsonDecoder A FOS\RestBundle\Decoder\JsonDecoder instance
     */
    protected function getFosRest_Decoder_JsonService()
    {
        return $this->services['fos_rest.decoder.json'] = new \FOS\RestBundle\Decoder\JsonDecoder();
    }

    /**
     * Gets the 'fos_rest.decoder.jsontoform' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Decoder\JsonToFormDecoder A FOS\RestBundle\Decoder\JsonToFormDecoder instance
     */
    protected function getFosRest_Decoder_JsontoformService()
    {
        return $this->services['fos_rest.decoder.jsontoform'] = new \FOS\RestBundle\Decoder\JsonToFormDecoder();
    }

    /**
     * Gets the 'fos_rest.decoder.xml' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Decoder\XmlDecoder A FOS\RestBundle\Decoder\XmlDecoder instance
     */
    protected function getFosRest_Decoder_XmlService()
    {
        return $this->services['fos_rest.decoder.xml'] = new \FOS\RestBundle\Decoder\XmlDecoder();
    }

    /**
     * Gets the 'fos_rest.decoder_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Decoder\ContainerDecoderProvider A FOS\RestBundle\Decoder\ContainerDecoderProvider instance
     */
    protected function getFosRest_DecoderProviderService()
    {
        $this->services['fos_rest.decoder_provider'] = $instance = new \FOS\RestBundle\Decoder\ContainerDecoderProvider(array('json' => 'fos_rest.decoder.json', 'xml' => 'fos_rest.decoder.xml'));

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'fos_rest.exception_format_negotiator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Negotiation\FormatNegotiator A FOS\RestBundle\Negotiation\FormatNegotiator instance
     */
    protected function getFosRest_ExceptionFormatNegotiatorService()
    {
        return $this->services['fos_rest.exception_format_negotiator'] = new \FOS\RestBundle\Negotiation\FormatNegotiator();
    }

    /**
     * Gets the 'fos_rest.form.extension.csrf_disable' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Form\Extension\DisableCSRFExtension A FOS\RestBundle\Form\Extension\DisableCSRFExtension instance
     */
    protected function getFosRest_Form_Extension_CsrfDisableService()
    {
        return $this->services['fos_rest.form.extension.csrf_disable'] = new \FOS\RestBundle\Form\Extension\DisableCSRFExtension($this->get('security.token_storage'), 'ROLE_API', $this->get('security.authorization_checker'));
    }

    /**
     * Gets the 'fos_rest.format_negotiator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Negotiation\FormatNegotiator A FOS\RestBundle\Negotiation\FormatNegotiator instance
     */
    protected function getFosRest_FormatNegotiatorService()
    {
        return $this->services['fos_rest.format_negotiator'] = new \FOS\RestBundle\Negotiation\FormatNegotiator();
    }

    /**
     * Gets the 'fos_rest.inflector.doctrine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Inflector\DoctrineInflector A FOS\RestBundle\Inflector\DoctrineInflector instance
     */
    protected function getFosRest_Inflector_DoctrineService()
    {
        return $this->services['fos_rest.inflector.doctrine'] = new \FOS\RestBundle\Inflector\DoctrineInflector();
    }

    /**
     * Gets the 'fos_rest.normalizer.camel_keys' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Normalizer\CamelKeysNormalizer A FOS\RestBundle\Normalizer\CamelKeysNormalizer instance
     */
    protected function getFosRest_Normalizer_CamelKeysService()
    {
        return $this->services['fos_rest.normalizer.camel_keys'] = new \FOS\RestBundle\Normalizer\CamelKeysNormalizer();
    }

    /**
     * Gets the 'fos_rest.normalizer.camel_keys_with_leading_underscore' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore A FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore instance
     */
    protected function getFosRest_Normalizer_CamelKeysWithLeadingUnderscoreService()
    {
        return $this->services['fos_rest.normalizer.camel_keys_with_leading_underscore'] = new \FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore();
    }

    /**
     * Gets the 'fos_rest.request.param_fetcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Request\ParamFetcher A FOS\RestBundle\Request\ParamFetcher instance
     */
    protected function getFosRest_Request_ParamFetcherService()
    {
        return $this->services['fos_rest.request.param_fetcher'] = new \FOS\RestBundle\Request\ParamFetcher($this->get('fos_rest.request.param_fetcher.reader'), $this->get('request_stack', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('fos_rest.violation_formatter'), $this->get('validator', ContainerInterface::NULL_ON_INVALID_REFERENCE), false);
    }

    /**
     * Gets the 'fos_rest.request.param_fetcher.reader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Request\ParamReader A FOS\RestBundle\Request\ParamReader instance
     */
    protected function getFosRest_Request_ParamFetcher_ReaderService()
    {
        return $this->services['fos_rest.request.param_fetcher.reader'] = new \FOS\RestBundle\Request\ParamReader($this->get('annotation_reader'));
    }

    /**
     * Gets the 'fos_rest.routing.loader.controller' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Routing\Loader\RestRouteLoader A FOS\RestBundle\Routing\Loader\RestRouteLoader instance
     */
    protected function getFosRest_Routing_Loader_ControllerService()
    {
        return $this->services['fos_rest.routing.loader.controller'] = new \FOS\RestBundle\Routing\Loader\RestRouteLoader($this, $this->get('file_locator'), $this->get('controller_name_converter'), $this->get('fos_rest.routing.loader.reader.controller'), 'json');
    }

    /**
     * Gets the 'fos_rest.routing.loader.processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Routing\Loader\RestRouteProcessor A FOS\RestBundle\Routing\Loader\RestRouteProcessor instance
     */
    protected function getFosRest_Routing_Loader_ProcessorService()
    {
        return $this->services['fos_rest.routing.loader.processor'] = new \FOS\RestBundle\Routing\Loader\RestRouteProcessor();
    }

    /**
     * Gets the 'fos_rest.routing.loader.reader.action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Routing\Loader\Reader\RestActionReader A FOS\RestBundle\Routing\Loader\Reader\RestActionReader instance
     */
    protected function getFosRest_Routing_Loader_Reader_ActionService()
    {
        return $this->services['fos_rest.routing.loader.reader.action'] = new \FOS\RestBundle\Routing\Loader\Reader\RestActionReader($this->get('annotation_reader'), $this->get('fos_rest.request.param_fetcher.reader'), $this->get('fos_rest.inflector.doctrine'), false, array('json' => false));
    }

    /**
     * Gets the 'fos_rest.routing.loader.reader.controller' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Routing\Loader\Reader\RestControllerReader A FOS\RestBundle\Routing\Loader\Reader\RestControllerReader instance
     */
    protected function getFosRest_Routing_Loader_Reader_ControllerService()
    {
        return $this->services['fos_rest.routing.loader.reader.controller'] = new \FOS\RestBundle\Routing\Loader\Reader\RestControllerReader($this->get('fos_rest.routing.loader.reader.action'), $this->get('annotation_reader'));
    }

    /**
     * Gets the 'fos_rest.routing.loader.xml_collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader A FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader instance
     */
    protected function getFosRest_Routing_Loader_XmlCollectionService()
    {
        return $this->services['fos_rest.routing.loader.xml_collection'] = new \FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader($this->get('file_locator'), $this->get('fos_rest.routing.loader.processor'), false, array('json' => false), 'json');
    }

    /**
     * Gets the 'fos_rest.routing.loader.yaml_collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader A FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader instance
     */
    protected function getFosRest_Routing_Loader_YamlCollectionService()
    {
        return $this->services['fos_rest.routing.loader.yaml_collection'] = new \FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader($this->get('file_locator'), $this->get('fos_rest.routing.loader.processor'), false, array('json' => false), 'json');
    }

    /**
     * Gets the 'fos_rest.serializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \FOS\RestBundle\Serializer\JMSSerializerAdapter A FOS\RestBundle\Serializer\JMSSerializerAdapter instance
     */
    protected function getFosRest_SerializerService($lazyLoad = true)
    {
        return $this->services['fos_rest.serializer'] = new \FOS\RestBundle\Serializer\JMSSerializerAdapter($this->get('jms_serializer'));
    }

    /**
     * Gets the 'fos_rest.serializer.exception_wrapper_normalizer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Serializer\ExceptionWrapperNormalizer A FOS\RestBundle\Serializer\ExceptionWrapperNormalizer instance
     */
    protected function getFosRest_Serializer_ExceptionWrapperNormalizerService()
    {
        return $this->services['fos_rest.serializer.exception_wrapper_normalizer'] = new \FOS\RestBundle\Serializer\ExceptionWrapperNormalizer($this->get('translator'));
    }

    /**
     * Gets the 'fos_rest.serializer.exception_wrapper_serialize_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Serializer\ExceptionWrapperSerializeHandler A FOS\RestBundle\Serializer\ExceptionWrapperSerializeHandler instance
     */
    protected function getFosRest_Serializer_ExceptionWrapperSerializeHandlerService()
    {
        return $this->services['fos_rest.serializer.exception_wrapper_serialize_handler'] = new \FOS\RestBundle\Serializer\ExceptionWrapperSerializeHandler();
    }

    /**
     * Gets the 'fos_rest.view.exception_wrapper_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\View\ExceptionWrapperHandler A FOS\RestBundle\View\ExceptionWrapperHandler instance
     */
    protected function getFosRest_View_ExceptionWrapperHandlerService()
    {
        return $this->services['fos_rest.view.exception_wrapper_handler'] = new \FOS\RestBundle\View\ExceptionWrapperHandler();
    }

    /**
     * Gets the 'fos_rest.view_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\View\ViewHandler A FOS\RestBundle\View\ViewHandler instance
     */
    protected function getFosRest_ViewHandlerService()
    {
        $this->services['fos_rest.view_handler'] = $instance = new \FOS\RestBundle\View\ViewHandler(array('json' => false), 400, 204, false, array('html' => 302), 'twig');

        $instance->setExclusionStrategyGroups(array());
        $instance->setExclusionStrategyVersion('');
        $instance->setSerializeNullStrategy(false);
        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'fos_rest.violation_formatter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Util\ViolationFormatter A FOS\RestBundle\Util\ViolationFormatter instance
     */
    protected function getFosRest_ViolationFormatterService()
    {
        return $this->services['fos_rest.violation_formatter'] = new \FOS\RestBundle\Util\ViolationFormatter(false);
    }

    /**
     * Gets the 'fragment.handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler A Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler instance
     */
    protected function getFragment_HandlerService()
    {
        $this->services['fragment.handler'] = $instance = new \Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler($this, $this->get('request_stack'), true);

        $instance->addRendererService('inline', 'fragment.renderer.inline');
        $instance->addRendererService('hinclude', 'fragment.renderer.hinclude');
        $instance->addRendererService('esi', 'fragment.renderer.esi');
        $instance->addRendererService('ssi', 'fragment.renderer.ssi');

        return $instance;
    }

    /**
     * Gets the 'fragment.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\FragmentListener A Symfony\Component\HttpKernel\EventListener\FragmentListener instance
     */
    protected function getFragment_ListenerService()
    {
        return $this->services['fragment.listener'] = new \Symfony\Component\HttpKernel\EventListener\FragmentListener($this->get('uri_signer'), '/_fragment');
    }

    /**
     * Gets the 'fragment.renderer.esi' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer A Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer instance
     */
    protected function getFragment_Renderer_EsiService()
    {
        $this->services['fragment.renderer.esi'] = $instance = new \Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer(NULL, $this->get('fragment.renderer.inline'), $this->get('uri_signer'));

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the 'fragment.renderer.hinclude' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer A Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer instance
     */
    protected function getFragment_Renderer_HincludeService()
    {
        $this->services['fragment.renderer.hinclude'] = $instance = new \Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer($this->get('templating'), $this->get('uri_signer'), NULL);

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the 'fragment.renderer.inline' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer A Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer instance
     */
    protected function getFragment_Renderer_InlineService()
    {
        $this->services['fragment.renderer.inline'] = $instance = new \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer($this->get('http_kernel'), $this->get('debug.event_dispatcher'));

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the 'fragment.renderer.ssi' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer A Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer instance
     */
    protected function getFragment_Renderer_SsiService()
    {
        $this->services['fragment.renderer.ssi'] = $instance = new \Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer(NULL, $this->get('fragment.renderer.inline'), $this->get('uri_signer'));

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the 'http_kernel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel A Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel instance
     */
    protected function getHttpKernelService()
    {
        return $this->services['http_kernel'] = new \Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel($this->get('debug.event_dispatcher'), $this, $this->get('debug.controller_resolver'), $this->get('request_stack'), false);
    }

    /**
     * Gets the 'jms_serializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Serializer A JMS\Serializer\Serializer instance
     */
    protected function getJmsSerializerService()
    {
        $a = new \JMS\Serializer\EventDispatcher\LazyEventDispatcher($this);
        $a->setListeners(array('serializer.pre_serialize' => array(0 => array(0 => array(0 => 'jms_serializer.stopwatch_subscriber', 1 => 'onPreSerialize'), 1 => NULL, 2 => NULL), 1 => array(0 => array(0 => 'jms_serializer.doctrine_proxy_subscriber', 1 => 'onPreSerialize'), 1 => NULL, 2 => NULL)), 'serializer.post_serialize' => array(0 => array(0 => array(0 => 'jms_serializer.stopwatch_subscriber', 1 => 'onPostSerialize'), 1 => NULL, 2 => NULL))));

        return $this->services['jms_serializer'] = new \JMS\Serializer\Serializer(new \Metadata\MetadataFactory(new \Metadata\Driver\LazyLoadingDriver($this, 'jms_serializer.metadata_driver'), 'Metadata\\ClassHierarchyMetadata', true), $this->get('jms_serializer.handler_registry'), $this->get('jms_serializer.unserialize_object_constructor'), new \PhpCollection\Map(array('json' => $this->get('jms_serializer.json_serialization_visitor'), 'xml' => $this->get('jms_serializer.xml_serialization_visitor'), 'yml' => $this->get('jms_serializer.yaml_serialization_visitor'))), new \PhpCollection\Map(array('json' => $this->get('jms_serializer.json_deserialization_visitor'), 'xml' => $this->get('jms_serializer.xml_deserialization_visitor'))), $a);
    }

    /**
     * Gets the 'jms_serializer.array_collection_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\ArrayCollectionHandler A JMS\Serializer\Handler\ArrayCollectionHandler instance
     */
    protected function getJmsSerializer_ArrayCollectionHandlerService()
    {
        return $this->services['jms_serializer.array_collection_handler'] = new \JMS\Serializer\Handler\ArrayCollectionHandler();
    }

    /**
     * Gets the 'jms_serializer.constraint_violation_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\ConstraintViolationHandler A JMS\Serializer\Handler\ConstraintViolationHandler instance
     */
    protected function getJmsSerializer_ConstraintViolationHandlerService()
    {
        return $this->services['jms_serializer.constraint_violation_handler'] = new \JMS\Serializer\Handler\ConstraintViolationHandler();
    }

    /**
     * Gets the 'jms_serializer.datetime_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\DateHandler A JMS\Serializer\Handler\DateHandler instance
     */
    protected function getJmsSerializer_DatetimeHandlerService()
    {
        return $this->services['jms_serializer.datetime_handler'] = new \JMS\Serializer\Handler\DateHandler('c', 'UTC', true);
    }

    /**
     * Gets the 'jms_serializer.doctrine_proxy_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber A JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber instance
     */
    protected function getJmsSerializer_DoctrineProxySubscriberService()
    {
        return $this->services['jms_serializer.doctrine_proxy_subscriber'] = new \JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber();
    }

    /**
     * Gets the 'jms_serializer.form_error_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\FormErrorHandler A JMS\Serializer\Handler\FormErrorHandler instance
     */
    protected function getJmsSerializer_FormErrorHandlerService()
    {
        return $this->services['jms_serializer.form_error_handler'] = new \JMS\Serializer\Handler\FormErrorHandler($this->get('translator'));
    }

    /**
     * Gets the 'jms_serializer.handler_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\LazyHandlerRegistry A JMS\Serializer\Handler\LazyHandlerRegistry instance
     */
    protected function getJmsSerializer_HandlerRegistryService()
    {
        return $this->services['jms_serializer.handler_registry'] = new \JMS\Serializer\Handler\LazyHandlerRegistry($this, array(1 => array('FOS\\RestBundle\\Util\\ExceptionWrapper' => array('json' => array(0 => 'fos_rest.serializer.exception_wrapper_serialize_handler', 1 => 'serializeToJson'), 'xml' => array(0 => 'fos_rest.serializer.exception_wrapper_serialize_handler', 1 => 'serializeToXml')), 'DateTime' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime')), 'DateInterval' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval')), 'ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\Common\\Collections\\ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ORM\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ODM\\MongoDB\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ODM\\PHPCR\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'PhpCollection\\Sequence' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence')), 'PhpCollection\\Map' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap')), 'Symfony\\Component\\Form\\Form' => array('xml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormToxml'), 'json' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormTojson'), 'yml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormToyml')), 'Symfony\\Component\\Form\\FormError' => array('xml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorToxml'), 'json' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorTojson'), 'yml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorToyml')), 'Symfony\\Component\\Validator\\ConstraintViolationList' => array('xml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListToxml'), 'json' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListTojson'), 'yml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListToyml')), 'Symfony\\Component\\Validator\\ConstraintViolation' => array('xml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationToxml'), 'json' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationTojson'), 'yml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationToyml'))), 2 => array('DateTime' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromjson'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromxml'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromyml')), 'ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\Common\\Collections\\ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ORM\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ODM\\MongoDB\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ODM\\PHPCR\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'PhpCollection\\Sequence' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence')), 'PhpCollection\\Map' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap')))));
    }

    /**
     * Gets the 'jms_serializer.json_deserialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\JsonDeserializationVisitor A JMS\Serializer\JsonDeserializationVisitor instance
     */
    protected function getJmsSerializer_JsonDeserializationVisitorService()
    {
        return $this->services['jms_serializer.json_deserialization_visitor'] = new \JMS\Serializer\JsonDeserializationVisitor($this->get('jms_serializer.naming_strategy'), $this->get('jms_serializer.unserialize_object_constructor'));
    }

    /**
     * Gets the 'jms_serializer.json_serialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\JsonSerializationVisitor A JMS\Serializer\JsonSerializationVisitor instance
     */
    protected function getJmsSerializer_JsonSerializationVisitorService()
    {
        $this->services['jms_serializer.json_serialization_visitor'] = $instance = new \JMS\Serializer\JsonSerializationVisitor($this->get('jms_serializer.naming_strategy'));

        $instance->setOptions(128);

        return $instance;
    }

    /**
     * Gets the 'jms_serializer.metadata_driver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Metadata\Driver\DoctrineTypeDriver A JMS\Serializer\Metadata\Driver\DoctrineTypeDriver instance
     */
    protected function getJmsSerializer_MetadataDriverService()
    {
        $a = new \Metadata\Driver\FileLocator(array('Mautic\\AssetBundle\\Entity' => ($this->targetDirs[2].'/bundles/AssetBundle/Entity'), 'Mautic\\CampaignBundle\\Entity' => ($this->targetDirs[2].'/bundles/CampaignBundle/Entity'), 'Mautic\\CategoryBundle\\Entity' => ($this->targetDirs[2].'/bundles/CategoryBundle/Entity'), 'Mautic\\ChannelBundle\\Entity' => ($this->targetDirs[2].'/bundles/ChannelBundle/Entity'), 'Mautic\\CoreBundle\\Entity' => ($this->targetDirs[2].'/bundles/CoreBundle/Entity'), 'Mautic\\DashboardBundle\\Entity' => ($this->targetDirs[2].'/bundles/DashboardBundle/Entity'), 'Mautic\\DynamicContentBundle\\Entity' => ($this->targetDirs[2].'/bundles/DynamicContentBundle/Entity'), 'Mautic\\EmailBundle\\Entity' => ($this->targetDirs[2].'/bundles/EmailBundle/Entity'), 'Mautic\\FormBundle\\Entity' => ($this->targetDirs[2].'/bundles/FormBundle/Entity'), 'Mautic\\LeadBundle\\Entity' => ($this->targetDirs[2].'/bundles/LeadBundle/Entity'), 'Mautic\\NotificationBundle\\Entity' => ($this->targetDirs[2].'/bundles/NotificationBundle/Entity'), 'Mautic\\PageBundle\\Entity' => ($this->targetDirs[2].'/bundles/PageBundle/Entity'), 'Mautic\\PointBundle\\Entity' => ($this->targetDirs[2].'/bundles/PointBundle/Entity'), 'Mautic\\ReportBundle\\Entity' => ($this->targetDirs[2].'/bundles/ReportBundle/Entity'), 'Mautic\\SmsBundle\\Entity' => ($this->targetDirs[2].'/bundles/SmsBundle/Entity'), 'Mautic\\StageBundle\\Entity' => ($this->targetDirs[2].'/bundles/StageBundle/Entity'), 'Mautic\\UserBundle\\Entity' => ($this->targetDirs[2].'/bundles/UserBundle/Entity'), 'Mautic\\WebhookBundle\\Entity' => ($this->targetDirs[2].'/bundles/WebhookBundle/Entity'), 'MauticPlugin\\MauticFocusBundle\\Entity' => ($this->targetDirs[3].'/plugins/MauticFocusBundle/Entity'), 'MauticPlugin\\MauticSocialBundle\\Entity' => ($this->targetDirs[3].'/plugins/MauticSocialBundle/Entity')));

        return $this->services['jms_serializer.metadata_driver'] = new \JMS\Serializer\Metadata\Driver\DoctrineTypeDriver(new \Metadata\Driver\DriverChain(array(0 => new \JMS\Serializer\Metadata\Driver\YamlDriver($a), 1 => new \JMS\Serializer\Metadata\Driver\XmlDriver($a), 2 => new \Mautic\ApiBundle\Serializer\Driver\ApiMetadataDriver($a), 3 => new \Mautic\ApiBundle\Serializer\Driver\AnnotationDriver($this->get('annotation_reader')))), $this->get('doctrine'));
    }

    /**
     * Gets the 'jms_serializer.naming_strategy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Naming\CacheNamingStrategy A JMS\Serializer\Naming\CacheNamingStrategy instance
     */
    protected function getJmsSerializer_NamingStrategyService()
    {
        return $this->services['jms_serializer.naming_strategy'] = new \JMS\Serializer\Naming\CacheNamingStrategy(new \JMS\Serializer\Naming\SerializedNameAnnotationStrategy(new \JMS\Serializer\Naming\IdenticalPropertyNamingStrategy('', false)));
    }

    /**
     * Gets the 'jms_serializer.object_constructor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Construction\DoctrineObjectConstructor A JMS\Serializer\Construction\DoctrineObjectConstructor instance
     */
    protected function getJmsSerializer_ObjectConstructorService()
    {
        return $this->services['jms_serializer.object_constructor'] = new \JMS\Serializer\Construction\DoctrineObjectConstructor($this->get('doctrine'), $this->get('jms_serializer.unserialize_object_constructor'));
    }

    /**
     * Gets the 'jms_serializer.php_collection_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\PhpCollectionHandler A JMS\Serializer\Handler\PhpCollectionHandler instance
     */
    protected function getJmsSerializer_PhpCollectionHandlerService()
    {
        return $this->services['jms_serializer.php_collection_handler'] = new \JMS\Serializer\Handler\PhpCollectionHandler();
    }

    /**
     * Gets the 'jms_serializer.stopwatch_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\SerializerBundle\Serializer\StopwatchEventSubscriber A JMS\SerializerBundle\Serializer\StopwatchEventSubscriber instance
     */
    protected function getJmsSerializer_StopwatchSubscriberService()
    {
        return $this->services['jms_serializer.stopwatch_subscriber'] = new \JMS\SerializerBundle\Serializer\StopwatchEventSubscriber($this->get('debug.stopwatch'));
    }

    /**
     * Gets the 'jms_serializer.templating.helper.serializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\SerializerBundle\Templating\SerializerHelper A JMS\SerializerBundle\Templating\SerializerHelper instance
     */
    protected function getJmsSerializer_Templating_Helper_SerializerService()
    {
        return $this->services['jms_serializer.templating.helper.serializer'] = new \JMS\SerializerBundle\Templating\SerializerHelper($this->get('jms_serializer'));
    }

    /**
     * Gets the 'jms_serializer.xml_deserialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\XmlDeserializationVisitor A JMS\Serializer\XmlDeserializationVisitor instance
     */
    protected function getJmsSerializer_XmlDeserializationVisitorService()
    {
        $this->services['jms_serializer.xml_deserialization_visitor'] = $instance = new \JMS\Serializer\XmlDeserializationVisitor($this->get('jms_serializer.naming_strategy'), $this->get('jms_serializer.unserialize_object_constructor'));

        $instance->setDoctypeWhitelist(array());

        return $instance;
    }

    /**
     * Gets the 'jms_serializer.xml_serialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\XmlSerializationVisitor A JMS\Serializer\XmlSerializationVisitor instance
     */
    protected function getJmsSerializer_XmlSerializationVisitorService()
    {
        return $this->services['jms_serializer.xml_serialization_visitor'] = new \JMS\Serializer\XmlSerializationVisitor($this->get('jms_serializer.naming_strategy'));
    }

    /**
     * Gets the 'jms_serializer.yaml_serialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\YamlSerializationVisitor A JMS\Serializer\YamlSerializationVisitor instance
     */
    protected function getJmsSerializer_YamlSerializationVisitorService()
    {
        return $this->services['jms_serializer.yaml_serialization_visitor'] = new \JMS\Serializer\YamlSerializationVisitor($this->get('jms_serializer.naming_strategy'));
    }

    /**
     * Gets the 'kernel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @throws RuntimeException always since this service is expected to be injected dynamically
     */
    protected function getKernelService()
    {
        throw new RuntimeException('You have requested a synthetic service ("kernel"). The DIC does not know how to construct this service.');
    }

    /**
     * Gets the 'kernel.class_cache.cache_warmer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer A Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer instance
     */
    protected function getKernel_ClassCache_CacheWarmerService()
    {
        return $this->services['kernel.class_cache.cache_warmer'] = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer();
    }

    /**
     * Gets the 'knp_menu.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\MenuFactory A Knp\Menu\MenuFactory instance
     */
    protected function getKnpMenu_FactoryService()
    {
        $this->services['knp_menu.factory'] = $instance = new \Knp\Menu\MenuFactory();

        $instance->addExtension(new \Knp\Menu\Integration\Symfony\RoutingExtension($this->get('router')), 0);

        return $instance;
    }

    /**
     * Gets the 'knp_menu.listener.voters' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener A Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener instance
     */
    protected function getKnpMenu_Listener_VotersService()
    {
        $this->services['knp_menu.listener.voters'] = $instance = new \Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener();

        $instance->addVoter($this->get('knp_menu.voter.router'));

        return $instance;
    }

    /**
     * Gets the 'knp_menu.matcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\Matcher\Matcher A Knp\Menu\Matcher\Matcher instance
     */
    protected function getKnpMenu_MatcherService()
    {
        $this->services['knp_menu.matcher'] = $instance = new \Knp\Menu\Matcher\Matcher();

        $instance->addVoter($this->get('knp_menu.voter.router'));

        return $instance;
    }

    /**
     * Gets the 'knp_menu.menu_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\Provider\ChainProvider A Knp\Menu\Provider\ChainProvider instance
     */
    protected function getKnpMenu_MenuProviderService()
    {
        return $this->services['knp_menu.menu_provider'] = new \Knp\Menu\Provider\ChainProvider(array(0 => new \Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider($this, array('main' => 'mautic.menu.main', 'admin' => 'mautic.menu.admin', 'extra' => 'mautic.menu.extra', 'profile' => 'mautic.menu.profile')), 1 => new \Knp\Bundle\MenuBundle\Provider\BuilderServiceProvider($this, array()), 2 => new \Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider($this->get('kernel'), $this, $this->get('knp_menu.factory'))));
    }

    /**
     * Gets the 'knp_menu.renderer.list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\Renderer\ListRenderer A Knp\Menu\Renderer\ListRenderer instance
     */
    protected function getKnpMenu_Renderer_ListService()
    {
        return $this->services['knp_menu.renderer.list'] = new \Knp\Menu\Renderer\ListRenderer($this->get('knp_menu.matcher'), array(), 'UTF-8');
    }

    /**
     * Gets the 'knp_menu.renderer_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider A Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider instance
     */
    protected function getKnpMenu_RendererProviderService()
    {
        return $this->services['knp_menu.renderer_provider'] = new \Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider($this, 'mautic', array('list' => 'knp_menu.renderer.list', 'mautic' => 'mautic.menu_renderer', 'main' => 'mautic.menu_renderer.main', 'admin' => 'mautic.menu_renderer.admin', 'extra' => 'mautic.menu_renderer.extra', 'profile' => 'mautic.menu_renderer.profile'));
    }

    /**
     * Gets the 'knp_menu.templating.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Bundle\MenuBundle\Templating\Helper\MenuHelper A Knp\Bundle\MenuBundle\Templating\Helper\MenuHelper instance
     */
    protected function getKnpMenu_Templating_HelperService()
    {
        return $this->services['knp_menu.templating.helper'] = new \Knp\Bundle\MenuBundle\Templating\Helper\MenuHelper($this->get('knp_menu.helper'), $this->get('knp_menu.matcher'), $this->get('knp_menu.manipulator'));
    }

    /**
     * Gets the 'knp_menu.voter.router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\Matcher\Voter\RouteVoter A Knp\Menu\Matcher\Voter\RouteVoter instance
     */
    protected function getKnpMenu_Voter_RouterService()
    {
        return $this->services['knp_menu.voter.router'] = new \Knp\Menu\Matcher\Voter\RouteVoter();
    }

    /**
     * Gets the 'lightsaml.container.build' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\SymfonyBridgeBundle\Bridge\Container\BuildContainer A LightSaml\SymfonyBridgeBundle\Bridge\Container\BuildContainer instance
     */
    protected function getLightsaml_Container_BuildService()
    {
        return $this->services['lightsaml.container.build'] = new \LightSaml\SymfonyBridgeBundle\Bridge\Container\BuildContainer($this);
    }

    /**
     * Gets the 'lightsaml.credential.credential_store' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Store\Credential\CompositeCredentialStore A LightSaml\Store\Credential\CompositeCredentialStore instance
     */
    protected function getLightsaml_Credential_CredentialStoreService()
    {
        return $this->services['lightsaml.credential.credential_store'] = $this->get('lightsaml.credential.credential_store_factory')->buildFromOwnCredentialStore($this->get('lightsaml.party.idp_entity_descriptor_store'), $this->get('lightsaml.party.sp_entity_descriptor_store'), 'http://nautic.dev', $this->get('lightsaml.own.credential_store'), array());
    }

    /**
     * Gets the 'lightsaml.credential.credential_store_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Store\Credential\Factory\CredentialFactory A LightSaml\Store\Credential\Factory\CredentialFactory instance
     */
    protected function getLightsaml_Credential_CredentialStoreFactoryService()
    {
        return $this->services['lightsaml.credential.credential_store_factory'] = new \LightSaml\Store\Credential\Factory\CredentialFactory();
    }

    /**
     * Gets the 'lightsaml.own.credential_store' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Store\Credential\CompositeCredentialStore A LightSaml\Store\Credential\CompositeCredentialStore instance
     */
    protected function getLightsaml_Own_CredentialStoreService()
    {
        return $this->services['lightsaml.own.credential_store'] = new \LightSaml\Store\Credential\CompositeCredentialStore();
    }

    /**
     * Gets the 'lightsaml.own.entity_descriptor_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Builder\EntityDescriptor\SimpleEntityDescriptorBuilder A LightSaml\Builder\EntityDescriptor\SimpleEntityDescriptorBuilder instance
     */
    protected function getLightsaml_Own_EntityDescriptorProviderService()
    {
        return $this->services['lightsaml.own.entity_descriptor_provider'] = \LightSaml\SymfonyBridgeBundle\Factory\OwnEntityDescriptorProviderFactory::build('http://nautic.dev', $this->get('router'), 'lightsaml_sp.login_check', NULL, $this->get('lightsaml.own.credential_store'));
    }

    /**
     * Gets the 'lightsaml.party.idp_entity_descriptor_store' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Store\EntityDescriptor\CompositeEntityDescriptorStore A LightSaml\Store\EntityDescriptor\CompositeEntityDescriptorStore instance
     */
    protected function getLightsaml_Party_IdpEntityDescriptorStoreService()
    {
        return $this->services['lightsaml.party.idp_entity_descriptor_store'] = new \LightSaml\Store\EntityDescriptor\CompositeEntityDescriptorStore();
    }

    /**
     * Gets the 'lightsaml.party.sp_entity_descriptor_store' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Store\EntityDescriptor\CompositeEntityDescriptorStore A LightSaml\Store\EntityDescriptor\CompositeEntityDescriptorStore instance
     */
    protected function getLightsaml_Party_SpEntityDescriptorStoreService()
    {
        return $this->services['lightsaml.party.sp_entity_descriptor_store'] = new \LightSaml\Store\EntityDescriptor\CompositeEntityDescriptorStore();
    }

    /**
     * Gets the 'lightsaml.party.trust_options_store' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Store\TrustOptions\CompositeTrustOptionsStore A LightSaml\Store\TrustOptions\CompositeTrustOptionsStore instance
     */
    protected function getLightsaml_Party_TrustOptionsStoreService()
    {
        return $this->services['lightsaml.party.trust_options_store'] = new \LightSaml\Store\TrustOptions\CompositeTrustOptionsStore();
    }

    /**
     * Gets the 'lightsaml.provider.attribute_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Provider\Attribute\FixedAttributeValueProvider A LightSaml\Provider\Attribute\FixedAttributeValueProvider instance
     */
    protected function getLightsaml_Provider_AttributeValueService()
    {
        return $this->services['lightsaml.provider.attribute_value'] = new \LightSaml\Provider\Attribute\FixedAttributeValueProvider();
    }

    /**
     * Gets the 'lightsaml.provider.name_id' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Provider\NameID\FixedNameIdProvider A LightSaml\Provider\NameID\FixedNameIdProvider instance
     */
    protected function getLightsaml_Provider_NameIdService()
    {
        return $this->services['lightsaml.provider.name_id'] = new \LightSaml\Provider\NameID\FixedNameIdProvider();
    }

    /**
     * Gets the 'lightsaml.provider.session_info' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Provider\Session\FixedSessionInfoProvider A LightSaml\Provider\Session\FixedSessionInfoProvider instance
     */
    protected function getLightsaml_Provider_SessionInfoService()
    {
        return $this->services['lightsaml.provider.session_info'] = new \LightSaml\Provider\Session\FixedSessionInfoProvider();
    }

    /**
     * Gets the 'lightsaml.service.assertion_time_validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Validator\Model\Assertion\AssertionTimeValidator A LightSaml\Validator\Model\Assertion\AssertionTimeValidator instance
     */
    protected function getLightsaml_Service_AssertionTimeValidatorService()
    {
        return $this->services['lightsaml.service.assertion_time_validator'] = new \LightSaml\Validator\Model\Assertion\AssertionTimeValidator();
    }

    /**
     * Gets the 'lightsaml.service.assertion_validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Validator\Model\Assertion\AssertionValidator A LightSaml\Validator\Model\Assertion\AssertionValidator instance
     */
    protected function getLightsaml_Service_AssertionValidatorService()
    {
        return $this->services['lightsaml.service.assertion_validator'] = new \LightSaml\Validator\Model\Assertion\AssertionValidator($this->get('lightsaml.service.name_id_validator'), $this->get('lightsaml.service.subject_validator'), $this->get('lightsaml.service.statement_validator'));
    }

    /**
     * Gets the 'lightsaml.service.binding_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Binding\BindingFactory A LightSaml\Binding\BindingFactory instance
     */
    protected function getLightsaml_Service_BindingFactoryService()
    {
        return $this->services['lightsaml.service.binding_factory'] = new \LightSaml\Binding\BindingFactory($this->get('lightsaml.system.event_dispatcher'));
    }

    /**
     * Gets the 'lightsaml.service.credential_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Resolver\Credential\CompositeFilterResolver A LightSaml\Resolver\Credential\CompositeFilterResolver instance
     */
    protected function getLightsaml_Service_CredentialResolverService()
    {
        return $this->services['lightsaml.service.credential_resolver'] = $this->get('lightsaml.service.credential_resolver_factory')->build();
    }

    /**
     * Gets the 'lightsaml.service.credential_resolver_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Resolver\Credential\Factory\CredentialResolverFactory A LightSaml\Resolver\Credential\Factory\CredentialResolverFactory instance
     */
    protected function getLightsaml_Service_CredentialResolverFactoryService()
    {
        return $this->services['lightsaml.service.credential_resolver_factory'] = new \LightSaml\Resolver\Credential\Factory\CredentialResolverFactory($this->get('lightsaml.credential.credential_store'));
    }

    /**
     * Gets the 'lightsaml.service.endpoint_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Resolver\Endpoint\CompositeEndpointResolver A LightSaml\Resolver\Endpoint\CompositeEndpointResolver instance
     */
    protected function getLightsaml_Service_EndpointResolverService()
    {
        $this->services['lightsaml.service.endpoint_resolver'] = $instance = new \LightSaml\Resolver\Endpoint\CompositeEndpointResolver();

        $instance->add($this->get('lightsaml.service.endpoint_resolver.binding'));
        $instance->add($this->get('lightsaml.service.endpoint_resolver.descriptor_type'));
        $instance->add($this->get('lightsaml.service.endpoint_resolver.service_type'));
        $instance->add($this->get('lightsaml.service.endpoint_resolver.index'));
        $instance->add($this->get('lightsaml.service.endpoint_resolver.location'));

        return $instance;
    }

    /**
     * Gets the 'lightsaml.service.endpoint_resolver.binding' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Resolver\Endpoint\BindingEndpointResolver A LightSaml\Resolver\Endpoint\BindingEndpointResolver instance
     */
    protected function getLightsaml_Service_EndpointResolver_BindingService()
    {
        return $this->services['lightsaml.service.endpoint_resolver.binding'] = new \LightSaml\Resolver\Endpoint\BindingEndpointResolver();
    }

    /**
     * Gets the 'lightsaml.service.endpoint_resolver.descriptor_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Resolver\Endpoint\DescriptorTypeEndpointResolver A LightSaml\Resolver\Endpoint\DescriptorTypeEndpointResolver instance
     */
    protected function getLightsaml_Service_EndpointResolver_DescriptorTypeService()
    {
        return $this->services['lightsaml.service.endpoint_resolver.descriptor_type'] = new \LightSaml\Resolver\Endpoint\DescriptorTypeEndpointResolver();
    }

    /**
     * Gets the 'lightsaml.service.endpoint_resolver.index' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Resolver\Endpoint\IndexEndpointResolver A LightSaml\Resolver\Endpoint\IndexEndpointResolver instance
     */
    protected function getLightsaml_Service_EndpointResolver_IndexService()
    {
        return $this->services['lightsaml.service.endpoint_resolver.index'] = new \LightSaml\Resolver\Endpoint\IndexEndpointResolver();
    }

    /**
     * Gets the 'lightsaml.service.endpoint_resolver.location' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Resolver\Endpoint\LocationEndpointResolver A LightSaml\Resolver\Endpoint\LocationEndpointResolver instance
     */
    protected function getLightsaml_Service_EndpointResolver_LocationService()
    {
        return $this->services['lightsaml.service.endpoint_resolver.location'] = new \LightSaml\Resolver\Endpoint\LocationEndpointResolver();
    }

    /**
     * Gets the 'lightsaml.service.endpoint_resolver.service_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Resolver\Endpoint\ServiceTypeEndpointResolver A LightSaml\Resolver\Endpoint\ServiceTypeEndpointResolver instance
     */
    protected function getLightsaml_Service_EndpointResolver_ServiceTypeService()
    {
        return $this->services['lightsaml.service.endpoint_resolver.service_type'] = new \LightSaml\Resolver\Endpoint\ServiceTypeEndpointResolver();
    }

    /**
     * Gets the 'lightsaml.service.name_id_validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Validator\Model\NameId\NameIdValidator A LightSaml\Validator\Model\NameId\NameIdValidator instance
     */
    protected function getLightsaml_Service_NameIdValidatorService()
    {
        return $this->services['lightsaml.service.name_id_validator'] = new \LightSaml\Validator\Model\NameId\NameIdValidator();
    }

    /**
     * Gets the 'lightsaml.service.session_processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Resolver\Session\SessionProcessor A LightSaml\Resolver\Session\SessionProcessor instance
     */
    protected function getLightsaml_Service_SessionProcessorService()
    {
        return $this->services['lightsaml.service.session_processor'] = new \LightSaml\Resolver\Session\SessionProcessor($this->get('lightsaml.store.sso_state'), $this->get('lightsaml.system.time_provider'));
    }

    /**
     * Gets the 'lightsaml.service.signature_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Resolver\Signature\OwnSignatureResolver A LightSaml\Resolver\Signature\OwnSignatureResolver instance
     */
    protected function getLightsaml_Service_SignatureResolverService()
    {
        return $this->services['lightsaml.service.signature_resolver'] = new \LightSaml\Resolver\Signature\OwnSignatureResolver($this->get('lightsaml.service.credential_resolver'));
    }

    /**
     * Gets the 'lightsaml.service.signature_validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Validator\Model\Signature\SignatureValidator A LightSaml\Validator\Model\Signature\SignatureValidator instance
     */
    protected function getLightsaml_Service_SignatureValidatorService()
    {
        return $this->services['lightsaml.service.signature_validator'] = new \LightSaml\Validator\Model\Signature\SignatureValidator($this->get('lightsaml.service.credential_resolver'));
    }

    /**
     * Gets the 'lightsaml.service.statement_validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Validator\Model\Statement\StatementValidator A LightSaml\Validator\Model\Statement\StatementValidator instance
     */
    protected function getLightsaml_Service_StatementValidatorService()
    {
        return $this->services['lightsaml.service.statement_validator'] = new \LightSaml\Validator\Model\Statement\StatementValidator();
    }

    /**
     * Gets the 'lightsaml.service.subject_validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Validator\Model\Subject\SubjectValidator A LightSaml\Validator\Model\Subject\SubjectValidator instance
     */
    protected function getLightsaml_Service_SubjectValidatorService()
    {
        return $this->services['lightsaml.service.subject_validator'] = new \LightSaml\Validator\Model\Subject\SubjectValidator($this->get('lightsaml.service.name_id_validator'));
    }

    /**
     * Gets the 'lightsaml.store.request' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Store\Request\RequestStateSessionStore A LightSaml\Store\Request\RequestStateSessionStore instance
     */
    protected function getLightsaml_Store_RequestService()
    {
        return $this->services['lightsaml.store.request'] = new \LightSaml\Store\Request\RequestStateSessionStore($this->get('session'), 'main', 'saml_request_state_');
    }

    /**
     * Gets the 'lightsaml.store.sso_state' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Store\Sso\SsoStateSessionStore A LightSaml\Store\Sso\SsoStateSessionStore instance
     */
    protected function getLightsaml_Store_SsoStateService()
    {
        return $this->services['lightsaml.store.sso_state'] = new \LightSaml\Store\Sso\SsoStateSessionStore($this->get('session'), 'samlsso');
    }

    /**
     * Gets the 'lightsaml.system.event_dispatcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\EventDispatcher\EventDispatcher A Symfony\Component\EventDispatcher\EventDispatcher instance
     */
    protected function getLightsaml_System_EventDispatcherService()
    {
        return $this->services['lightsaml.system.event_dispatcher'] = new \Symfony\Component\EventDispatcher\EventDispatcher();
    }

    /**
     * Gets the 'lightsaml.system.time_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Provider\TimeProvider\SystemTimeProvider A LightSaml\Provider\TimeProvider\SystemTimeProvider instance
     */
    protected function getLightsaml_System_TimeProviderService()
    {
        return $this->services['lightsaml.system.time_provider'] = new \LightSaml\Provider\TimeProvider\SystemTimeProvider();
    }

    /**
     * Gets the 'lightsaml_sp.token_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\SpBundle\Security\Authentication\Token\SamlSpTokenFactory A LightSaml\SpBundle\Security\Authentication\Token\SamlSpTokenFactory instance
     */
    protected function getLightsamlSp_TokenFactoryService()
    {
        return $this->services['lightsaml_sp.token_factory'] = new \LightSaml\SpBundle\Security\Authentication\Token\SamlSpTokenFactory();
    }

    /**
     * Gets the 'lightsaml_sp.username_mapper.simple' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\SpBundle\Security\User\SimpleUsernameMapper A LightSaml\SpBundle\Security\User\SimpleUsernameMapper instance
     */
    protected function getLightsamlSp_UsernameMapper_SimpleService()
    {
        return $this->services['lightsaml_sp.username_mapper.simple'] = new \LightSaml\SpBundle\Security\User\SimpleUsernameMapper(array('email' => '', 'username' => '', 'firstname' => '', 'lastname' => '', 'nameId' => '@name_id@'));
    }

    /**
     * Gets the 'ligthsaml.profile.acs' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Builder\Profile\WebBrowserSso\Sp\SsoSpReceiveResponseProfileBuilder A LightSaml\Builder\Profile\WebBrowserSso\Sp\SsoSpReceiveResponseProfileBuilder instance
     */
    protected function getLigthsaml_Profile_AcsService()
    {
        return $this->services['ligthsaml.profile.acs'] = new \LightSaml\Builder\Profile\WebBrowserSso\Sp\SsoSpReceiveResponseProfileBuilder($this->get('lightsaml.container.build'));
    }

    /**
     * Gets the 'ligthsaml.profile.login_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Builder\Profile\WebBrowserSso\Sp\SsoSpSendAuthnRequestProfileBuilderFactory A LightSaml\Builder\Profile\WebBrowserSso\Sp\SsoSpSendAuthnRequestProfileBuilderFactory instance
     */
    protected function getLigthsaml_Profile_LoginFactoryService()
    {
        return $this->services['ligthsaml.profile.login_factory'] = new \LightSaml\Builder\Profile\WebBrowserSso\Sp\SsoSpSendAuthnRequestProfileBuilderFactory($this->get('lightsaml.container.build'));
    }

    /**
     * Gets the 'ligthsaml.profile.metadata' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \LightSaml\Builder\Profile\Metadata\MetadataProfileBuilder A LightSaml\Builder\Profile\Metadata\MetadataProfileBuilder instance
     */
    protected function getLigthsaml_Profile_MetadataService()
    {
        return $this->services['ligthsaml.profile.metadata'] = new \LightSaml\Builder\Profile\Metadata\MetadataProfileBuilder($this->get('lightsaml.container.build'));
    }

    /**
     * Gets the 'locale_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\LocaleListener A Symfony\Component\HttpKernel\EventListener\LocaleListener instance
     */
    protected function getLocaleListenerService()
    {
        return $this->services['locale_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleListener($this->get('request_stack'), 'en_US', $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'logger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getLoggerService()
    {
        $this->services['logger'] = $instance = new \Symfony\Bridge\Monolog\Logger('app');

        $instance->useMicrosecondTimestamps(true);
        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'mautic.api.configbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ApiBundle\EventListener\ConfigSubscriber A Mautic\ApiBundle\EventListener\ConfigSubscriber instance
     */
    protected function getMautic_Api_Configbundle_SubscriberService()
    {
        $this->services['mautic.api.configbundle.subscriber'] = $instance = new \Mautic\ApiBundle\EventListener\ConfigSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.api.model.client' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ApiBundle\Model\ClientModel A Mautic\ApiBundle\Model\ClientModel instance
     */
    protected function getMautic_Api_Model_ClientService()
    {
        $this->services['mautic.api.model.client'] = $instance = new \Mautic\ApiBundle\Model\ClientModel($this->get('request_stack'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setSession($this->get('session'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.api.oauth.event_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ApiBundle\EventListener\OAuthEventListener A Mautic\ApiBundle\EventListener\OAuthEventListener instance
     */
    protected function getMautic_Api_Oauth_EventListenerService()
    {
        return $this->services['mautic.api.oauth.event_listener'] = new \Mautic\ApiBundle\EventListener\OAuthEventListener($this->get('doctrine.orm.default_entity_manager'), $this->get('mautic.security'), $this->get('translator'));
    }

    /**
     * Gets the 'mautic.api.oauth1.nonce_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ApiBundle\Provider\NonceProvider A Mautic\ApiBundle\Provider\NonceProvider instance
     */
    protected function getMautic_Api_Oauth1_NonceProviderService()
    {
        return $this->services['mautic.api.oauth1.nonce_provider'] = new \Mautic\ApiBundle\Provider\NonceProvider($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'mautic.api.search.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ApiBundle\EventListener\SearchSubscriber A Mautic\ApiBundle\EventListener\SearchSubscriber instance
     */
    protected function getMautic_Api_Search_SubscriberService()
    {
        $this->services['mautic.api.search.subscriber'] = $instance = new \Mautic\ApiBundle\EventListener\SearchSubscriber($this->get('mautic.api.model.client'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.api.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ApiBundle\EventListener\ApiSubscriber A Mautic\ApiBundle\EventListener\ApiSubscriber instance
     */
    protected function getMautic_Api_SubscriberService()
    {
        $this->services['mautic.api.subscriber'] = $instance = new \Mautic\ApiBundle\EventListener\ApiSubscriber($this->get('mautic.helper.ip_lookup'), $this->get('mautic.helper.core_parameters'), $this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.builder.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\EventListener\BuilderSubscriber A Mautic\AssetBundle\EventListener\BuilderSubscriber instance
     */
    protected function getMautic_Asset_Builder_SubscriberService()
    {
        $this->services['mautic.asset.builder.subscriber'] = $instance = new \Mautic\AssetBundle\EventListener\BuilderSubscriber($this->get('mautic.asset.helper.token'), $this->get('mautic.lead.model.lead'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.campaignbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\EventListener\CampaignSubscriber A Mautic\AssetBundle\EventListener\CampaignSubscriber instance
     */
    protected function getMautic_Asset_Campaignbundle_SubscriberService()
    {
        $this->services['mautic.asset.campaignbundle.subscriber'] = $instance = new \Mautic\AssetBundle\EventListener\CampaignSubscriber($this->get('mautic.campaign.model.event'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.configbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\EventListener\ConfigSubscriber A Mautic\AssetBundle\EventListener\ConfigSubscriber instance
     */
    protected function getMautic_Asset_Configbundle_SubscriberService()
    {
        $this->services['mautic.asset.configbundle.subscriber'] = $instance = new \Mautic\AssetBundle\EventListener\ConfigSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.dashboard.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\EventListener\DashboardSubscriber A Mautic\AssetBundle\EventListener\DashboardSubscriber instance
     */
    protected function getMautic_Asset_Dashboard_SubscriberService()
    {
        $this->services['mautic.asset.dashboard.subscriber'] = $instance = new \Mautic\AssetBundle\EventListener\DashboardSubscriber($this->get('mautic.asset.model.asset'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.emailbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\EventListener\EmailSubscriber A Mautic\AssetBundle\EventListener\EmailSubscriber instance
     */
    protected function getMautic_Asset_Emailbundle_SubscriberService()
    {
        $this->services['mautic.asset.emailbundle.subscriber'] = $instance = new \Mautic\AssetBundle\EventListener\EmailSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.formbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\EventListener\FormSubscriber A Mautic\AssetBundle\EventListener\FormSubscriber instance
     */
    protected function getMautic_Asset_Formbundle_SubscriberService()
    {
        $this->services['mautic.asset.formbundle.subscriber'] = $instance = new \Mautic\AssetBundle\EventListener\FormSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.helper.token' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\Helper\TokenHelper A Mautic\AssetBundle\Helper\TokenHelper instance
     */
    protected function getMautic_Asset_Helper_TokenService()
    {
        return $this->services['mautic.asset.helper.token'] = new \Mautic\AssetBundle\Helper\TokenHelper($this->get('mautic.asset.model.asset'));
    }

    /**
     * Gets the 'mautic.asset.leadbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\EventListener\LeadSubscriber A Mautic\AssetBundle\EventListener\LeadSubscriber instance
     */
    protected function getMautic_Asset_Leadbundle_SubscriberService()
    {
        $this->services['mautic.asset.leadbundle.subscriber'] = $instance = new \Mautic\AssetBundle\EventListener\LeadSubscriber($this->get('mautic.asset.model.asset'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.model.asset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\Model\AssetModel A Mautic\AssetBundle\Model\AssetModel instance
     */
    protected function getMautic_Asset_Model_AssetService()
    {
        $this->services['mautic.asset.model.asset'] = $instance = new \Mautic\AssetBundle\Model\AssetModel($this->get('mautic.lead.model.lead'), $this->get('mautic.category.model.category'), $this->get('request_stack'), $this->get('mautic.helper.ip_lookup'), $this->get('mautic.helper.core_parameters'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.pagebundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\EventListener\PageSubscriber A Mautic\AssetBundle\EventListener\PageSubscriber instance
     */
    protected function getMautic_Asset_Pagebundle_SubscriberService()
    {
        $this->services['mautic.asset.pagebundle.subscriber'] = $instance = new \Mautic\AssetBundle\EventListener\PageSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.pointbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\EventListener\PointSubscriber A Mautic\AssetBundle\EventListener\PointSubscriber instance
     */
    protected function getMautic_Asset_Pointbundle_SubscriberService()
    {
        $this->services['mautic.asset.pointbundle.subscriber'] = $instance = new \Mautic\AssetBundle\EventListener\PointSubscriber($this->get('mautic.point.model.point'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.reportbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\EventListener\ReportSubscriber A Mautic\AssetBundle\EventListener\ReportSubscriber instance
     */
    protected function getMautic_Asset_Reportbundle_SubscriberService()
    {
        $this->services['mautic.asset.reportbundle.subscriber'] = $instance = new \Mautic\AssetBundle\EventListener\ReportSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.search.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\EventListener\SearchSubscriber A Mautic\AssetBundle\EventListener\SearchSubscriber instance
     */
    protected function getMautic_Asset_Search_SubscriberService()
    {
        $this->services['mautic.asset.search.subscriber'] = $instance = new \Mautic\AssetBundle\EventListener\SearchSubscriber($this->get('mautic.asset.model.asset'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.stats.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\EventListener\StatsSubscriber A Mautic\AssetBundle\EventListener\StatsSubscriber instance
     */
    protected function getMautic_Asset_Stats_SubscriberService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        $this->services['mautic.asset.stats.subscriber'] = $instance = new \Mautic\AssetBundle\EventListener\StatsSubscriber($a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($a);
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\EventListener\AssetSubscriber A Mautic\AssetBundle\EventListener\AssetSubscriber instance
     */
    protected function getMautic_Asset_SubscriberService()
    {
        $this->services['mautic.asset.subscriber'] = $instance = new \Mautic\AssetBundle\EventListener\AssetSubscriber($this->get('mautic.helper.ip_lookup'), $this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.asset.upload.error.handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\ErrorHandler\DropzoneErrorHandler A Mautic\AssetBundle\ErrorHandler\DropzoneErrorHandler instance
     */
    protected function getMautic_Asset_Upload_Error_HandlerService()
    {
        return $this->services['mautic.asset.upload.error.handler'] = new \Mautic\AssetBundle\ErrorHandler\DropzoneErrorHandler($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.calendar.model.calendar' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CalendarBundle\Model\CalendarModel A Mautic\CalendarBundle\Model\CalendarModel instance
     */
    protected function getMautic_Calendar_Model_CalendarService()
    {
        $this->services['mautic.calendar.model.calendar'] = $instance = new \Mautic\CalendarBundle\Model\CalendarModel();

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.campaign.calendarbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\EventListener\CalendarSubscriber A Mautic\CampaignBundle\EventListener\CalendarSubscriber instance
     */
    protected function getMautic_Campaign_Calendarbundle_SubscriberService()
    {
        $this->services['mautic.campaign.calendarbundle.subscriber'] = $instance = new \Mautic\CampaignBundle\EventListener\CalendarSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.campaign.dashboard.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\EventListener\DashboardSubscriber A Mautic\CampaignBundle\EventListener\DashboardSubscriber instance
     */
    protected function getMautic_Campaign_Dashboard_SubscriberService()
    {
        $this->services['mautic.campaign.dashboard.subscriber'] = $instance = new \Mautic\CampaignBundle\EventListener\DashboardSubscriber($this->get('mautic.campaign.model.campaign'), $this->get('mautic.campaign.model.event'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.campaign.leadbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\EventListener\LeadSubscriber A Mautic\CampaignBundle\EventListener\LeadSubscriber instance
     */
    protected function getMautic_Campaign_Leadbundle_SubscriberService()
    {
        $this->services['mautic.campaign.leadbundle.subscriber'] = $instance = new \Mautic\CampaignBundle\EventListener\LeadSubscriber($this->get('mautic.campaign.model.campaign'), $this->get('mautic.lead.model.lead'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.campaign.model.campaign' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\Model\CampaignModel A Mautic\CampaignBundle\Model\CampaignModel instance
     */
    protected function getMautic_Campaign_Model_CampaignService()
    {
        $this->services['mautic.campaign.model.campaign'] = $instance = new \Mautic\CampaignBundle\Model\CampaignModel($this->get('mautic.helper.core_parameters'), $this->get('mautic.lead.model.lead'), $this->get('mautic.lead.model.list'), $this->get('mautic.form.model.form'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.campaign.model.event' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\Model\EventModel A Mautic\CampaignBundle\Model\EventModel instance
     */
    protected function getMautic_Campaign_Model_EventService()
    {
        $a = $this->get('mautic.factory');

        $this->services['mautic.campaign.model.event'] = $instance = new \Mautic\CampaignBundle\Model\EventModel($this->get('mautic.helper.ip_lookup'), $this->get('mautic.helper.core_parameters'), $this->get('mautic.lead.model.lead'), $this->get('mautic.campaign.model.campaign'), $this->get('mautic.user.model.user'), $this->get('mautic.core.model.notification'), $a);

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($a);

        return $instance;
    }

    /**
     * Gets the 'mautic.campaign.model.event_log' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\Model\EventLogModel A Mautic\CampaignBundle\Model\EventLogModel instance
     */
    protected function getMautic_Campaign_Model_EventLogService()
    {
        $this->services['mautic.campaign.model.event_log'] = $instance = new \Mautic\CampaignBundle\Model\EventLogModel($this->get('mautic.campaign.model.event'), $this->get('mautic.campaign.model.campaign'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.campaign.pointbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\EventListener\PointSubscriber A Mautic\CampaignBundle\EventListener\PointSubscriber instance
     */
    protected function getMautic_Campaign_Pointbundle_SubscriberService()
    {
        $this->services['mautic.campaign.pointbundle.subscriber'] = $instance = new \Mautic\CampaignBundle\EventListener\PointSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.campaign.report.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\EventListener\ReportSubscriber A Mautic\CampaignBundle\EventListener\ReportSubscriber instance
     */
    protected function getMautic_Campaign_Report_SubscriberService()
    {
        $this->services['mautic.campaign.report.subscriber'] = $instance = new \Mautic\CampaignBundle\EventListener\ReportSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.campaign.search.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\EventListener\SearchSubscriber A Mautic\CampaignBundle\EventListener\SearchSubscriber instance
     */
    protected function getMautic_Campaign_Search_SubscriberService()
    {
        $this->services['mautic.campaign.search.subscriber'] = $instance = new \Mautic\CampaignBundle\EventListener\SearchSubscriber($this->get('mautic.campaign.model.campaign'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.campaign.stats.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\EventListener\StatsSubscriber A Mautic\CampaignBundle\EventListener\StatsSubscriber instance
     */
    protected function getMautic_Campaign_Stats_SubscriberService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        $this->services['mautic.campaign.stats.subscriber'] = $instance = new \Mautic\CampaignBundle\EventListener\StatsSubscriber($a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($a);
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.campaign.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\EventListener\CampaignSubscriber A Mautic\CampaignBundle\EventListener\CampaignSubscriber instance
     */
    protected function getMautic_Campaign_SubscriberService()
    {
        $this->services['mautic.campaign.subscriber'] = $instance = new \Mautic\CampaignBundle\EventListener\CampaignSubscriber($this->get('mautic.helper.ip_lookup'), $this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.campaign.type.action.addremovelead' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\Form\Type\CampaignEventAddRemoveLeadType A Mautic\CampaignBundle\Form\Type\CampaignEventAddRemoveLeadType instance
     */
    protected function getMautic_Campaign_Type_Action_AddremoveleadService()
    {
        return $this->services['mautic.campaign.type.action.addremovelead'] = new \Mautic\CampaignBundle\Form\Type\CampaignEventAddRemoveLeadType();
    }

    /**
     * Gets the 'mautic.campaign.type.campaignlist' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\Form\Type\CampaignListType A Mautic\CampaignBundle\Form\Type\CampaignListType instance
     */
    protected function getMautic_Campaign_Type_CampaignlistService()
    {
        return $this->services['mautic.campaign.type.campaignlist'] = new \Mautic\CampaignBundle\Form\Type\CampaignListType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.campaign.type.canvassettings' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\Form\Type\EventCanvasSettingsType A Mautic\CampaignBundle\Form\Type\EventCanvasSettingsType instance
     */
    protected function getMautic_Campaign_Type_CanvassettingsService()
    {
        return $this->services['mautic.campaign.type.canvassettings'] = new \Mautic\CampaignBundle\Form\Type\EventCanvasSettingsType();
    }

    /**
     * Gets the 'mautic.campaign.type.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\Form\Type\CampaignType A Mautic\CampaignBundle\Form\Type\CampaignType instance
     */
    protected function getMautic_Campaign_Type_FormService()
    {
        return $this->services['mautic.campaign.type.form'] = new \Mautic\CampaignBundle\Form\Type\CampaignType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.campaign.type.leadsource' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\Form\Type\CampaignLeadSourceType A Mautic\CampaignBundle\Form\Type\CampaignLeadSourceType instance
     */
    protected function getMautic_Campaign_Type_LeadsourceService()
    {
        return $this->services['mautic.campaign.type.leadsource'] = new \Mautic\CampaignBundle\Form\Type\CampaignLeadSourceType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.campaign.type.trigger.leadchange' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\Form\Type\CampaignEventLeadChangeType A Mautic\CampaignBundle\Form\Type\CampaignEventLeadChangeType instance
     */
    protected function getMautic_Campaign_Type_Trigger_LeadchangeService()
    {
        return $this->services['mautic.campaign.type.trigger.leadchange'] = new \Mautic\CampaignBundle\Form\Type\CampaignEventLeadChangeType();
    }

    /**
     * Gets the 'mautic.campaignconfigbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\EventListener\ConfigSubscriber A Mautic\CampaignBundle\EventListener\ConfigSubscriber instance
     */
    protected function getMautic_Campaignconfigbundle_SubscriberService()
    {
        $this->services['mautic.campaignconfigbundle.subscriber'] = $instance = new \Mautic\CampaignBundle\EventListener\ConfigSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.campaignrange.type.action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\Form\Type\EventType A Mautic\CampaignBundle\Form\Type\EventType instance
     */
    protected function getMautic_Campaignrange_Type_ActionService()
    {
        return $this->services['mautic.campaignrange.type.action'] = new \Mautic\CampaignBundle\Form\Type\EventType();
    }

    /**
     * Gets the 'mautic.category.model.category' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CategoryBundle\Model\CategoryModel A Mautic\CategoryBundle\Model\CategoryModel instance
     */
    protected function getMautic_Category_Model_CategoryService()
    {
        $this->services['mautic.category.model.category'] = $instance = new \Mautic\CategoryBundle\Model\CategoryModel($this->get('request_stack'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.category.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CategoryBundle\EventListener\CategorySubscriber A Mautic\CategoryBundle\EventListener\CategorySubscriber instance
     */
    protected function getMautic_Category_SubscriberService()
    {
        $this->services['mautic.category.subscriber'] = $instance = new \Mautic\CategoryBundle\EventListener\CategorySubscriber($this->get('mautic.helper.bundle'), $this->get('mautic.helper.ip_lookup'), $this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.channel.campaignbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ChannelBundle\EventListener\CampaignSubscriber A Mautic\ChannelBundle\EventListener\CampaignSubscriber instance
     */
    protected function getMautic_Channel_Campaignbundle_SubscriberService()
    {
        $this->services['mautic.channel.campaignbundle.subscriber'] = $instance = new \Mautic\ChannelBundle\EventListener\CampaignSubscriber($this->get('mautic.channel.model.message'), $this->get('mautic.campaign.model.campaign'), $this->get('mautic.campaign.model.event'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.channel.channelbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ChannelBundle\EventListener\MessageSubscriber A Mautic\ChannelBundle\EventListener\MessageSubscriber instance
     */
    protected function getMautic_Channel_Channelbundle_SubscriberService()
    {
        $this->services['mautic.channel.channelbundle.subscriber'] = $instance = new \Mautic\ChannelBundle\EventListener\MessageSubscriber($this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.channel.helper.channel_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ChannelBundle\Helper\ChannelListHelper A Mautic\ChannelBundle\Helper\ChannelListHelper instance
     */
    protected function getMautic_Channel_Helper_ChannelListService()
    {
        return $this->services['mautic.channel.helper.channel_list'] = new \Mautic\ChannelBundle\Helper\ChannelListHelper($this->get('debug.event_dispatcher'), $this->get('translator'));
    }

    /**
     * Gets the 'mautic.channel.model.message' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ChannelBundle\Model\MessageModel A Mautic\ChannelBundle\Model\MessageModel instance
     */
    protected function getMautic_Channel_Model_MessageService()
    {
        $this->services['mautic.channel.model.message'] = $instance = new \Mautic\ChannelBundle\Model\MessageModel($this->get('mautic.channel.helper.channel_list'), $this->get('mautic.campaign.model.campaign'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.channel.model.queue' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ChannelBundle\Model\MessageQueueModel A Mautic\ChannelBundle\Model\MessageQueueModel instance
     */
    protected function getMautic_Channel_Model_QueueService()
    {
        $this->services['mautic.channel.model.queue'] = $instance = new \Mautic\ChannelBundle\Model\MessageQueueModel($this->get('mautic.lead.model.lead'), $this->get('mautic.lead.model.company'), $this->get('mautic.helper.core_parameters'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.citrix.campaignbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticCitrixBundle\EventListener\CampaignSubscriber A MauticPlugin\MauticCitrixBundle\EventListener\CampaignSubscriber instance
     */
    protected function getMautic_Citrix_Campaignbundle_SubscriberService()
    {
        $this->services['mautic.citrix.campaignbundle.subscriber'] = $instance = new \MauticPlugin\MauticCitrixBundle\EventListener\CampaignSubscriber($this->get('mautic.citrix.model.citrix'));

        $instance->setEmailModel($this->get('mautic.email.model.email'));
        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.citrix.emailbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticCitrixBundle\EventListener\EmailSubscriber A MauticPlugin\MauticCitrixBundle\EventListener\EmailSubscriber instance
     */
    protected function getMautic_Citrix_Emailbundle_SubscriberService()
    {
        $this->services['mautic.citrix.emailbundle.subscriber'] = $instance = new \MauticPlugin\MauticCitrixBundle\EventListener\EmailSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.citrix.formbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticCitrixBundle\EventListener\FormSubscriber A MauticPlugin\MauticCitrixBundle\EventListener\FormSubscriber instance
     */
    protected function getMautic_Citrix_Formbundle_SubscriberService()
    {
        $this->services['mautic.citrix.formbundle.subscriber'] = $instance = new \MauticPlugin\MauticCitrixBundle\EventListener\FormSubscriber($this->get('mautic.citrix.model.citrix'), $this->get('mautic.form.model.form'), $this->get('mautic.form.model.submission'));

        $instance->setEmailModel($this->get('mautic.email.model.email'));
        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.citrix.leadbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticCitrixBundle\EventListener\LeadSubscriber A MauticPlugin\MauticCitrixBundle\EventListener\LeadSubscriber instance
     */
    protected function getMautic_Citrix_Leadbundle_SubscriberService()
    {
        $this->services['mautic.citrix.leadbundle.subscriber'] = $instance = new \MauticPlugin\MauticCitrixBundle\EventListener\LeadSubscriber($this->get('mautic.citrix.model.citrix'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.citrix.model.citrix' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticCitrixBundle\Model\CitrixModel A MauticPlugin\MauticCitrixBundle\Model\CitrixModel instance
     */
    protected function getMautic_Citrix_Model_CitrixService()
    {
        $this->services['mautic.citrix.model.citrix'] = $instance = new \MauticPlugin\MauticCitrixBundle\Model\CitrixModel($this->get('mautic.lead.model.lead'), $this->get('mautic.campaign.model.event'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.cloudstorage.remoteassetbrowse.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticCloudStorageBundle\EventListener\RemoteAssetBrowseSubscriber A MauticPlugin\MauticCloudStorageBundle\EventListener\RemoteAssetBrowseSubscriber instance
     */
    protected function getMautic_Cloudstorage_Remoteassetbrowse_SubscriberService()
    {
        $this->services['mautic.cloudstorage.remoteassetbrowse.subscriber'] = $instance = new \MauticPlugin\MauticCloudStorageBundle\EventListener\RemoteAssetBrowseSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.company.campaign.action.type.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\AddToCompanyActionType A Mautic\LeadBundle\Form\Type\AddToCompanyActionType instance
     */
    protected function getMautic_Company_Campaign_Action_Type_FormService()
    {
        return $this->services['mautic.company.campaign.action.type.form'] = new \Mautic\LeadBundle\Form\Type\AddToCompanyActionType($this->get('router'));
    }

    /**
     * Gets the 'mautic.company.list.type.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\CompanyListType A Mautic\LeadBundle\Form\Type\CompanyListType instance
     */
    protected function getMautic_Company_List_Type_FormService()
    {
        return $this->services['mautic.company.list.type.form'] = new \Mautic\LeadBundle\Form\Type\CompanyListType($this->get('mautic.lead.model.company'), $this->get('mautic.helper.user'), $this->get('translator'), $this->get('router'), $this->get('doctrine.dbal.default_connection'));
    }

    /**
     * Gets the 'mautic.company.merge.type.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\CompanyMergeType A Mautic\LeadBundle\Form\Type\CompanyMergeType instance
     */
    protected function getMautic_Company_Merge_Type_FormService()
    {
        return $this->services['mautic.company.merge.type.form'] = new \Mautic\LeadBundle\Form\Type\CompanyMergeType();
    }

    /**
     * Gets the 'mautic.company.type.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\CompanyType A Mautic\LeadBundle\Form\Type\CompanyType instance
     */
    protected function getMautic_Company_Type_FormService()
    {
        return $this->services['mautic.company.type.form'] = new \Mautic\LeadBundle\Form\Type\CompanyType($this->get('doctrine.orm.default_entity_manager'), $this->get('mautic.security'), $this->get('router'), $this->get('translator'));
    }

    /**
     * Gets the 'mautic.config.model.config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ConfigBundle\Model\ConfigModel A Mautic\ConfigBundle\Model\ConfigModel instance
     */
    protected function getMautic_Config_Model_ConfigService()
    {
        $this->services['mautic.config.model.config'] = $instance = new \Mautic\ConfigBundle\Model\ConfigModel();

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.config.model.sysinfo' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ConfigBundle\Model\SysinfoModel A Mautic\ConfigBundle\Model\SysinfoModel instance
     */
    protected function getMautic_Config_Model_SysinfoService()
    {
        $this->services['mautic.config.model.sysinfo'] = $instance = new \Mautic\ConfigBundle\Model\SysinfoModel($this->get('mautic.helper.paths'), $this->get('mautic.helper.core_parameters'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.config.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ConfigBundle\EventListener\ConfigSubscriber A Mautic\ConfigBundle\EventListener\ConfigSubscriber instance
     */
    protected function getMautic_Config_SubscriberService()
    {
        $this->services['mautic.config.subscriber'] = $instance = new \Mautic\ConfigBundle\EventListener\ConfigSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.configurator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Configurator\Configurator A Mautic\CoreBundle\Configurator\Configurator instance
     */
    protected function getMautic_ConfiguratorService()
    {
        $this->services['mautic.configurator'] = $instance = new \Mautic\CoreBundle\Configurator\Configurator($this->get('mautic.helper.paths'));

        $instance->addStep($this->get('mautic.install.configurator.step.check'), '0');
        $instance->addStep($this->get('mautic.install.configurator.step.doctrine'), '1');
        $instance->addStep($this->get('mautic.install.configurator.step.email'), '3');
        $instance->addStep($this->get('mautic.install.configurator.step.user'), '2');

        return $instance;
    }

    /**
     * Gets the 'mautic.core.assets.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\EventListener\AssetsSubscriber A Mautic\CoreBundle\EventListener\AssetsSubscriber instance
     */
    protected function getMautic_Core_Assets_SubscriberService()
    {
        $this->services['mautic.core.assets.subscriber'] = $instance = new \Mautic\CoreBundle\EventListener\AssetsSubscriber($this->get('templating.helper.assets'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.core.configbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\EventListener\ConfigSubscriber A Mautic\CoreBundle\EventListener\ConfigSubscriber instance
     */
    protected function getMautic_Core_Configbundle_SubscriberService()
    {
        $this->services['mautic.core.configbundle.subscriber'] = $instance = new \Mautic\CoreBundle\EventListener\ConfigSubscriber($this->get('mautic.helper.language'), $this->get('mautic.helper.core_parameters'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.core.dashboard.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\EventListener\DashboardSubscriber A Mautic\CoreBundle\EventListener\DashboardSubscriber instance
     */
    protected function getMautic_Core_Dashboard_SubscriberService()
    {
        $this->services['mautic.core.dashboard.subscriber'] = $instance = new \Mautic\CoreBundle\EventListener\DashboardSubscriber($this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.core.environment.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\EventListener\EnvironmentSubscriber A Mautic\CoreBundle\EventListener\EnvironmentSubscriber instance
     */
    protected function getMautic_Core_Environment_SubscriberService()
    {
        $this->services['mautic.core.environment.subscriber'] = $instance = new \Mautic\CoreBundle\EventListener\EnvironmentSubscriber($this->get('mautic.helper.cookie'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.core.errorhandler.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\EventListener\ErrorHandlingListener A Mautic\CoreBundle\EventListener\ErrorHandlingListener instance
     */
    protected function getMautic_Core_Errorhandler_SubscriberService()
    {
        return $this->services['mautic.core.errorhandler.subscriber'] = new \Mautic\CoreBundle\EventListener\ErrorHandlingListener($this->get('monolog.logger.mautic'), $this->get('logger'), (($this->has("monolog.logger.chrome")) ? ($this->get("monolog.logger.chrome")) : (null)));
    }

    /**
     * Gets the 'mautic.core.js.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\NotificationBundle\EventListener\BuildJsSubscriber A Mautic\NotificationBundle\EventListener\BuildJsSubscriber instance
     */
    protected function getMautic_Core_Js_SubscriberService()
    {
        $this->services['mautic.core.js.subscriber'] = $instance = new \Mautic\NotificationBundle\EventListener\BuildJsSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.core.maintenance.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\EventListener\MaintenanceSubscriber A Mautic\CoreBundle\EventListener\MaintenanceSubscriber instance
     */
    protected function getMautic_Core_Maintenance_SubscriberService()
    {
        $this->services['mautic.core.maintenance.subscriber'] = $instance = new \Mautic\CoreBundle\EventListener\MaintenanceSubscriber($this->get('doctrine.dbal.default_connection'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.core.model.auditlog' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Model\AuditLogModel A Mautic\CoreBundle\Model\AuditLogModel instance
     */
    protected function getMautic_Core_Model_AuditlogService()
    {
        $this->services['mautic.core.model.auditlog'] = $instance = new \Mautic\CoreBundle\Model\AuditLogModel();

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.core.model.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Model\FormModel A Mautic\CoreBundle\Model\FormModel instance
     */
    protected function getMautic_Core_Model_FormService()
    {
        $this->services['mautic.core.model.form'] = $instance = new \Mautic\CoreBundle\Model\FormModel();

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.core.model.messagequeue' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Model\MessageQueueModel A Mautic\CoreBundle\Model\MessageQueueModel instance
     */
    protected function getMautic_Core_Model_MessagequeueService()
    {
        $this->services['mautic.core.model.messagequeue'] = $instance = new \Mautic\CoreBundle\Model\MessageQueueModel($this->get('mautic.lead.model.lead'), $this->get('mautic.lead.model.company'), $this->get('mautic.helper.core_parameters'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.core.model.notification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Model\NotificationModel A Mautic\CoreBundle\Model\NotificationModel instance
     */
    protected function getMautic_Core_Model_NotificationService()
    {
        $this->services['mautic.core.model.notification'] = $instance = new \Mautic\CoreBundle\Model\NotificationModel($this->get('mautic.helper.paths'), $this->get('mautic.helper.update'), $this->get('debril.reader'), $this->get('mautic.helper.core_parameters'));

        $instance->setDisableUpdates(false);
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setSession($this->get('session'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.core.stats.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\EventListener\StatsSubscriber A Mautic\CoreBundle\EventListener\StatsSubscriber instance
     */
    protected function getMautic_Core_Stats_SubscriberService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        $this->services['mautic.core.stats.subscriber'] = $instance = new \Mautic\CoreBundle\EventListener\StatsSubscriber($a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($a);
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.core.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\EventListener\CoreSubscriber A Mautic\CoreBundle\EventListener\CoreSubscriber instance
     */
    protected function getMautic_Core_SubscriberService()
    {
        $this->services['mautic.core.subscriber'] = $instance = new \Mautic\CoreBundle\EventListener\CoreSubscriber($this->get('mautic.helper.bundle'), $this->get('mautic.helper.menu'), $this->get('mautic.helper.user'), $this->get('templating.helper.assets'), $this->get('mautic.helper.core_parameters'), $this->get('security.context'), $this->get('mautic.user.model.user'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.dashboard.form.filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DashboardBundle\Form\Type\FilterType A Mautic\DashboardBundle\Form\Type\FilterType instance
     */
    protected function getMautic_Dashboard_Form_FilterService()
    {
        return $this->services['mautic.dashboard.form.filter'] = new \Mautic\DashboardBundle\Form\Type\FilterType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.dashboard.form.type.widget' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DashboardBundle\Form\Type\WidgetType A Mautic\DashboardBundle\Form\Type\WidgetType instance
     */
    protected function getMautic_Dashboard_Form_Type_WidgetService()
    {
        return $this->services['mautic.dashboard.form.type.widget'] = new \Mautic\DashboardBundle\Form\Type\WidgetType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.dashboard.form.uplload' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DashboardBundle\Form\Type\UploadType A Mautic\DashboardBundle\Form\Type\UploadType instance
     */
    protected function getMautic_Dashboard_Form_UplloadService()
    {
        return $this->services['mautic.dashboard.form.uplload'] = new \Mautic\DashboardBundle\Form\Type\UploadType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.dashboard.model.dashboard' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DashboardBundle\Model\DashboardModel A Mautic\DashboardBundle\Model\DashboardModel instance
     */
    protected function getMautic_Dashboard_Model_DashboardService()
    {
        $this->services['mautic.dashboard.model.dashboard'] = $instance = new \Mautic\DashboardBundle\Model\DashboardModel($this->get('mautic.helper.core_parameters'), $this->get('mautic.helper.paths'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setSession($this->get('session'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.dynamiccontent.campaignbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DynamicContentBundle\EventListener\CampaignSubscriber A Mautic\DynamicContentBundle\EventListener\CampaignSubscriber instance
     */
    protected function getMautic_Dynamiccontent_Campaignbundle_SubscriberService()
    {
        $this->services['mautic.dynamiccontent.campaignbundle.subscriber'] = $instance = new \Mautic\DynamicContentBundle\EventListener\CampaignSubscriber($this->get('mautic.lead.model.lead'), $this->get('mautic.dynamiccontent.model.dynamiccontent'), $this->get('session'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.dynamiccontent.js.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DynamicContentBundle\EventListener\BuildJsSubscriber A Mautic\DynamicContentBundle\EventListener\BuildJsSubscriber instance
     */
    protected function getMautic_Dynamiccontent_Js_SubscriberService()
    {
        $this->services['mautic.dynamiccontent.js.subscriber'] = $instance = new \Mautic\DynamicContentBundle\EventListener\BuildJsSubscriber($this->get('mautic.form.model.form'), $this->get('templating.helper.assets'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.dynamiccontent.model.dynamiccontent' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DynamicContentBundle\Model\DynamicContentModel A Mautic\DynamicContentBundle\Model\DynamicContentModel instance
     */
    protected function getMautic_Dynamiccontent_Model_DynamiccontentService()
    {
        $this->services['mautic.dynamiccontent.model.dynamiccontent'] = $instance = new \Mautic\DynamicContentBundle\Model\DynamicContentModel();

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.dynamiccontent.stats.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DynamicContentBundle\EventListener\StatsSubscriber A Mautic\DynamicContentBundle\EventListener\StatsSubscriber instance
     */
    protected function getMautic_Dynamiccontent_Stats_SubscriberService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        $this->services['mautic.dynamiccontent.stats.subscriber'] = $instance = new \Mautic\DynamicContentBundle\EventListener\StatsSubscriber($a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($a);
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.dynamiccontent.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DynamicContentBundle\EventListener\DynamicContentSubscriber A Mautic\DynamicContentBundle\EventListener\DynamicContentSubscriber instance
     */
    protected function getMautic_Dynamiccontent_SubscriberService()
    {
        $this->services['mautic.dynamiccontent.subscriber'] = $instance = new \Mautic\DynamicContentBundle\EventListener\DynamicContentSubscriber($this->get('mautic.page.model.trackable'), $this->get('mautic.page.helper.token'), $this->get('mautic.asset.helper.token'), $this->get('mautic.form.helper.token'), $this->get('mautic.focus.helper.token'), $this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.dynamiccontent.subscriber.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DynamicContentBundle\EventListener\ChannelSubscriber A Mautic\DynamicContentBundle\EventListener\ChannelSubscriber instance
     */
    protected function getMautic_Dynamiccontent_Subscriber_ChannelService()
    {
        $this->services['mautic.dynamiccontent.subscriber.channel'] = $instance = new \Mautic\DynamicContentBundle\EventListener\ChannelSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.broadcast.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\BroadcastSubscriber A Mautic\EmailBundle\EventListener\BroadcastSubscriber instance
     */
    protected function getMautic_Email_Broadcast_SubscriberService()
    {
        $a = $this->get('mautic.email.model.email');

        return $this->services['mautic.email.broadcast.subscriber'] = new \Mautic\EmailBundle\EventListener\BroadcastSubscriber($a, $this->get('doctrine.orm.default_entity_manager'), $this->get('translator'), $this->get('mautic.lead.model.lead'), $a);
    }

    /**
     * Gets the 'mautic.email.calendarbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\CalendarSubscriber A Mautic\EmailBundle\EventListener\CalendarSubscriber instance
     */
    protected function getMautic_Email_Calendarbundle_SubscriberService()
    {
        $this->services['mautic.email.calendarbundle.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\CalendarSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.campaignbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\CampaignSubscriber A Mautic\EmailBundle\EventListener\CampaignSubscriber instance
     */
    protected function getMautic_Email_Campaignbundle_SubscriberService()
    {
        $this->services['mautic.email.campaignbundle.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\CampaignSubscriber($this->get('mautic.lead.model.lead'), $this->get('mautic.email.model.email'), $this->get('mautic.campaign.model.event'), $this->get('mautic.channel.model.queue'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.channel.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\ChannelSubscriber A Mautic\EmailBundle\EventListener\ChannelSubscriber instance
     */
    protected function getMautic_Email_Channel_SubscriberService()
    {
        $this->services['mautic.email.channel.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\ChannelSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.configbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\ConfigSubscriber A Mautic\EmailBundle\EventListener\ConfigSubscriber instance
     */
    protected function getMautic_Email_Configbundle_SubscriberService()
    {
        $this->services['mautic.email.configbundle.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\ConfigSubscriber($this->get('mautic.helper.core_parameters'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.dashboard.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\DashboardSubscriber A Mautic\EmailBundle\EventListener\DashboardSubscriber instance
     */
    protected function getMautic_Email_Dashboard_SubscriberService()
    {
        $this->services['mautic.email.dashboard.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\DashboardSubscriber($this->get('mautic.email.model.email'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.formbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\FormSubscriber A Mautic\EmailBundle\EventListener\FormSubscriber instance
     */
    protected function getMautic_Email_Formbundle_SubscriberService()
    {
        $this->services['mautic.email.formbundle.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\FormSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.leadbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\LeadSubscriber A Mautic\EmailBundle\EventListener\LeadSubscriber instance
     */
    protected function getMautic_Email_Leadbundle_SubscriberService()
    {
        $this->services['mautic.email.leadbundle.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\LeadSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.messagequeue.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\MessageQueueSubscriber A Mautic\EmailBundle\EventListener\MessageQueueSubscriber instance
     */
    protected function getMautic_Email_Messagequeue_SubscriberService()
    {
        $this->services['mautic.email.messagequeue.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\MessageQueueSubscriber($this->get('mautic.email.model.email'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.model.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Model\EmailModel A Mautic\EmailBundle\Model\EmailModel instance
     */
    protected function getMautic_Email_Model_EmailService()
    {
        $this->services['mautic.email.model.email'] = $instance = new \Mautic\EmailBundle\Model\EmailModel($this->get('mautic.helper.ip_lookup'), $this->get('mautic.helper.theme'), $this->get('mautic.helper.mailbox'), $this->get('mautic.helper.mailer'), $this->get('mautic.lead.model.lead'), $this->get('mautic.lead.model.company'), $this->get('mautic.page.model.trackable'), $this->get('mautic.user.model.user'), $this->get('mautic.channel.model.queue'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.email.pagebundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\PageSubscriber A Mautic\EmailBundle\EventListener\PageSubscriber instance
     */
    protected function getMautic_Email_Pagebundle_SubscriberService()
    {
        $this->services['mautic.email.pagebundle.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\PageSubscriber($this->get('mautic.email.model.email'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.pointbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\PointSubscriber A Mautic\EmailBundle\EventListener\PointSubscriber instance
     */
    protected function getMautic_Email_Pointbundle_SubscriberService()
    {
        $this->services['mautic.email.pointbundle.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\PointSubscriber($this->get('mautic.point.model.point'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.reportbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\ReportSubscriber A Mautic\EmailBundle\EventListener\ReportSubscriber instance
     */
    protected function getMautic_Email_Reportbundle_SubscriberService()
    {
        $this->services['mautic.email.reportbundle.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\ReportSubscriber($this->get('doctrine.dbal.default_connection'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.search.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\SearchSubscriber A Mautic\EmailBundle\EventListener\SearchSubscriber instance
     */
    protected function getMautic_Email_Search_SubscriberService()
    {
        $this->services['mautic.email.search.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\SearchSubscriber($this->get('mautic.helper.user'), $this->get('mautic.email.model.email'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.stats.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\StatsSubscriber A Mautic\EmailBundle\EventListener\StatsSubscriber instance
     */
    protected function getMautic_Email_Stats_SubscriberService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        $this->services['mautic.email.stats.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\StatsSubscriber($a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($a);
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\EmailSubscriber A Mautic\EmailBundle\EventListener\EmailSubscriber instance
     */
    protected function getMautic_Email_SubscriberService()
    {
        $this->services['mautic.email.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\EmailSubscriber($this->get('mautic.helper.ip_lookup'), $this->get('mautic.core.model.auditlog'), $this->get('mautic.email.model.email'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.email.type.batch_send' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Form\Type\BatchSendType A Mautic\EmailBundle\Form\Type\BatchSendType instance
     */
    protected function getMautic_Email_Type_BatchSendService()
    {
        return $this->services['mautic.email.type.batch_send'] = new \Mautic\EmailBundle\Form\Type\BatchSendType();
    }

    /**
     * Gets the 'mautic.email.type.email_abtest_settings' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Form\Type\AbTestPropertiesType A Mautic\EmailBundle\Form\Type\AbTestPropertiesType instance
     */
    protected function getMautic_Email_Type_EmailAbtestSettingsService()
    {
        return $this->services['mautic.email.type.email_abtest_settings'] = new \Mautic\EmailBundle\Form\Type\AbTestPropertiesType();
    }

    /**
     * Gets the 'mautic.email.webhook.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\WebhookSubscriber A Mautic\EmailBundle\EventListener\WebhookSubscriber instance
     */
    protected function getMautic_Email_Webhook_SubscriberService()
    {
        $this->services['mautic.email.webhook.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\WebhookSubscriber();

        $instance->setWebhookModel($this->get('mautic.webhook.model.webhook'));
        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.emailbuilder.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\BuilderSubscriber A Mautic\EmailBundle\EventListener\BuilderSubscriber instance
     */
    protected function getMautic_Emailbuilder_SubscriberService()
    {
        $this->services['mautic.emailbuilder.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\BuilderSubscriber($this->get('mautic.helper.core_parameters'), $this->get('mautic.email.model.email'), $this->get('mautic.page.model.trackable'), $this->get('mautic.page.model.redirect'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.emailtoken.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\EventListener\TokenSubscriber A Mautic\EmailBundle\EventListener\TokenSubscriber instance
     */
    protected function getMautic_Emailtoken_SubscriberService()
    {
        $this->services['mautic.emailtoken.subscriber'] = $instance = new \Mautic\EmailBundle\EventListener\TokenSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.exception.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\EventListener\ExceptionListener A Mautic\CoreBundle\EventListener\ExceptionListener instance
     */
    protected function getMautic_Exception_ListenerService()
    {
        return $this->services['mautic.exception.listener'] = new \Mautic\CoreBundle\EventListener\ExceptionListener($this->get('router'), 'MauticCoreBundle:Exception:show', $this->get('monolog.logger.mautic'));
    }

    /**
     * Gets the 'mautic.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Factory\MauticFactory A Mautic\CoreBundle\Factory\MauticFactory instance
     */
    protected function getMautic_FactoryService()
    {
        return $this->services['mautic.factory'] = new \Mautic\CoreBundle\Factory\MauticFactory($this);
    }

    /**
     * Gets the 'mautic.focus.form.type.color' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFocusBundle\Form\Type\ColorType A MauticPlugin\MauticFocusBundle\Form\Type\ColorType instance
     */
    protected function getMautic_Focus_Form_Type_ColorService()
    {
        return $this->services['mautic.focus.form.type.color'] = new \MauticPlugin\MauticFocusBundle\Form\Type\ColorType();
    }

    /**
     * Gets the 'mautic.focus.form.type.content' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFocusBundle\Form\Type\ContentType A MauticPlugin\MauticFocusBundle\Form\Type\ContentType instance
     */
    protected function getMautic_Focus_Form_Type_ContentService()
    {
        return $this->services['mautic.focus.form.type.content'] = new \MauticPlugin\MauticFocusBundle\Form\Type\ContentType();
    }

    /**
     * Gets the 'mautic.focus.form.type.entity_properties' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFocusBundle\Form\Type\PropertiesType A MauticPlugin\MauticFocusBundle\Form\Type\PropertiesType instance
     */
    protected function getMautic_Focus_Form_Type_EntityPropertiesService()
    {
        return $this->services['mautic.focus.form.type.entity_properties'] = new \MauticPlugin\MauticFocusBundle\Form\Type\PropertiesType();
    }

    /**
     * Gets the 'mautic.focus.form.type.focus' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFocusBundle\Form\Type\FocusType A MauticPlugin\MauticFocusBundle\Form\Type\FocusType instance
     */
    protected function getMautic_Focus_Form_Type_FocusService()
    {
        return $this->services['mautic.focus.form.type.focus'] = new \MauticPlugin\MauticFocusBundle\Form\Type\FocusType($this->get('mautic.security'));
    }

    /**
     * Gets the 'mautic.focus.form.type.properties' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFocusBundle\Form\Type\FocusPropertiesType A MauticPlugin\MauticFocusBundle\Form\Type\FocusPropertiesType instance
     */
    protected function getMautic_Focus_Form_Type_PropertiesService()
    {
        return $this->services['mautic.focus.form.type.properties'] = new \MauticPlugin\MauticFocusBundle\Form\Type\FocusPropertiesType();
    }

    /**
     * Gets the 'mautic.focus.helper.token' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFocusBundle\Helper\TokenHelper A MauticPlugin\MauticFocusBundle\Helper\TokenHelper instance
     */
    protected function getMautic_Focus_Helper_TokenService()
    {
        return $this->services['mautic.focus.helper.token'] = new \MauticPlugin\MauticFocusBundle\Helper\TokenHelper($this->get('mautic.focus.model.focus'), $this->get('router'));
    }

    /**
     * Gets the 'mautic.focus.model.focus' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFocusBundle\Model\FocusModel A MauticPlugin\MauticFocusBundle\Model\FocusModel instance
     */
    protected function getMautic_Focus_Model_FocusService()
    {
        $this->services['mautic.focus.model.focus'] = $instance = new \MauticPlugin\MauticFocusBundle\Model\FocusModel($this->get('mautic.form.model.form'), $this->get('mautic.page.model.trackable'), $this->get('mautic.helper.templating'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.focus.stats.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFocusBundle\EventListener\StatsSubscriber A MauticPlugin\MauticFocusBundle\EventListener\StatsSubscriber instance
     */
    protected function getMautic_Focus_Stats_SubscriberService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        $this->services['mautic.focus.stats.subscriber'] = $instance = new \MauticPlugin\MauticFocusBundle\EventListener\StatsSubscriber($a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($a);
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.focus.subscriber.focus' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFocusBundle\EventListener\FocusSubscriber A MauticPlugin\MauticFocusBundle\EventListener\FocusSubscriber instance
     */
    protected function getMautic_Focus_Subscriber_FocusService()
    {
        $a = $this->get('router');

        $this->services['mautic.focus.subscriber.focus'] = $instance = new \MauticPlugin\MauticFocusBundle\EventListener\FocusSubscriber($a, $this->get('mautic.helper.ip_lookup'), $this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($a);
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.focus.subscriber.form_bundle' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFocusBundle\EventListener\FormSubscriber A MauticPlugin\MauticFocusBundle\EventListener\FormSubscriber instance
     */
    protected function getMautic_Focus_Subscriber_FormBundleService()
    {
        $this->services['mautic.focus.subscriber.form_bundle'] = $instance = new \MauticPlugin\MauticFocusBundle\EventListener\FormSubscriber($this->get('mautic.focus.model.focus'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.focus.subscriber.page_bundle' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFocusBundle\EventListener\PageSubscriber A MauticPlugin\MauticFocusBundle\EventListener\PageSubscriber instance
     */
    protected function getMautic_Focus_Subscriber_PageBundleService()
    {
        $a = $this->get('router');

        $this->services['mautic.focus.subscriber.page_bundle'] = $instance = new \MauticPlugin\MauticFocusBundle\EventListener\PageSubscriber($this->get('mautic.focus.model.focus'), $a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($a);
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.focus.subscriber.stat' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFocusBundle\EventListener\StatSubscriber A MauticPlugin\MauticFocusBundle\EventListener\StatSubscriber instance
     */
    protected function getMautic_Focus_Subscriber_StatService()
    {
        $this->services['mautic.focus.subscriber.stat'] = $instance = new \MauticPlugin\MauticFocusBundle\EventListener\StatSubscriber($this->get('mautic.focus.model.focus'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.form.calendarbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\EventListener\CalendarSubscriber A Mautic\FormBundle\EventListener\CalendarSubscriber instance
     */
    protected function getMautic_Form_Calendarbundle_SubscriberService()
    {
        $this->services['mautic.form.calendarbundle.subscriber'] = $instance = new \Mautic\FormBundle\EventListener\CalendarSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.form.campaignbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\EventListener\CampaignSubscriber A Mautic\FormBundle\EventListener\CampaignSubscriber instance
     */
    protected function getMautic_Form_Campaignbundle_SubscriberService()
    {
        $this->services['mautic.form.campaignbundle.subscriber'] = $instance = new \Mautic\FormBundle\EventListener\CampaignSubscriber($this->get('mautic.form.model.form'), $this->get('mautic.form.model.submission'), $this->get('mautic.campaign.model.event'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.form.dashboard.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\EventListener\DashboardSubscriber A Mautic\FormBundle\EventListener\DashboardSubscriber instance
     */
    protected function getMautic_Form_Dashboard_SubscriberService()
    {
        $this->services['mautic.form.dashboard.subscriber'] = $instance = new \Mautic\FormBundle\EventListener\DashboardSubscriber($this->get('mautic.form.model.submission'), $this->get('mautic.form.model.form'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.form.emailbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\EventListener\EmailSubscriber A Mautic\FormBundle\EventListener\EmailSubscriber instance
     */
    protected function getMautic_Form_Emailbundle_SubscriberService()
    {
        $this->services['mautic.form.emailbundle.subscriber'] = $instance = new \Mautic\FormBundle\EventListener\EmailSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.form.extension.custom' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Extension\CustomFormExtension A Mautic\CoreBundle\Form\Extension\CustomFormExtension instance
     */
    protected function getMautic_Form_Extension_CustomService()
    {
        return $this->services['mautic.form.extension.custom'] = new \Mautic\CoreBundle\Form\Extension\CustomFormExtension($this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'mautic.form.helper.token' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Helper\TokenHelper A Mautic\FormBundle\Helper\TokenHelper instance
     */
    protected function getMautic_Form_Helper_TokenService()
    {
        return $this->services['mautic.form.helper.token'] = new \Mautic\FormBundle\Helper\TokenHelper($this->get('mautic.form.model.form'));
    }

    /**
     * Gets the 'mautic.form.leadbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\EventListener\LeadSubscriber A Mautic\FormBundle\EventListener\LeadSubscriber instance
     */
    protected function getMautic_Form_Leadbundle_SubscriberService()
    {
        $this->services['mautic.form.leadbundle.subscriber'] = $instance = new \Mautic\FormBundle\EventListener\LeadSubscriber($this->get('mautic.form.model.form'), $this->get('mautic.page.model.page'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.form.model.action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Model\ActionModel A Mautic\FormBundle\Model\ActionModel instance
     */
    protected function getMautic_Form_Model_ActionService()
    {
        $this->services['mautic.form.model.action'] = $instance = new \Mautic\FormBundle\Model\ActionModel();

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.form.model.field' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Model\FieldModel A Mautic\FormBundle\Model\FieldModel instance
     */
    protected function getMautic_Form_Model_FieldService()
    {
        $this->services['mautic.form.model.field'] = $instance = new \Mautic\FormBundle\Model\FieldModel($this->get('mautic.lead.model.field'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setSession($this->get('session'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.form.model.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Model\FormModel A Mautic\FormBundle\Model\FormModel instance
     */
    protected function getMautic_Form_Model_FormService()
    {
        $this->services['mautic.form.model.form'] = $instance = new \Mautic\FormBundle\Model\FormModel($this->get('request_stack'), $this->get('mautic.helper.templating'), $this->get('mautic.helper.theme'), $this->get('mautic.schema.helper.factory'), $this->get('mautic.form.model.action'), $this->get('mautic.form.model.field'), $this->get('mautic.lead.model.lead'), $this->get('mautic.helper.form.field_helper'), $this->get('mautic.lead.model.field'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.form.model.submission' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Model\SubmissionModel A Mautic\FormBundle\Model\SubmissionModel instance
     */
    protected function getMautic_Form_Model_SubmissionService()
    {
        $this->services['mautic.form.model.submission'] = $instance = new \Mautic\FormBundle\Model\SubmissionModel($this->get('mautic.helper.ip_lookup'), $this->get('mautic.helper.templating'), $this->get('mautic.form.model.form'), $this->get('mautic.page.model.page'), $this->get('mautic.lead.model.lead'), $this->get('mautic.campaign.model.campaign'), $this->get('mautic.lead.model.field'), $this->get('mautic.lead.model.company'), $this->get('mautic.helper.form.field_helper'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.form.pagebundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\EventListener\PageSubscriber A Mautic\FormBundle\EventListener\PageSubscriber instance
     */
    protected function getMautic_Form_Pagebundle_SubscriberService()
    {
        $this->services['mautic.form.pagebundle.subscriber'] = $instance = new \Mautic\FormBundle\EventListener\PageSubscriber($this->get('mautic.form.model.form'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.form.pointbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\EventListener\PointSubscriber A Mautic\FormBundle\EventListener\PointSubscriber instance
     */
    protected function getMautic_Form_Pointbundle_SubscriberService()
    {
        $this->services['mautic.form.pointbundle.subscriber'] = $instance = new \Mautic\FormBundle\EventListener\PointSubscriber($this->get('mautic.point.model.point'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.form.reportbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\EventListener\ReportSubscriber A Mautic\FormBundle\EventListener\ReportSubscriber instance
     */
    protected function getMautic_Form_Reportbundle_SubscriberService()
    {
        $this->services['mautic.form.reportbundle.subscriber'] = $instance = new \Mautic\FormBundle\EventListener\ReportSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.form.search.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\EventListener\SearchSubscriber A Mautic\FormBundle\EventListener\SearchSubscriber instance
     */
    protected function getMautic_Form_Search_SubscriberService()
    {
        $this->services['mautic.form.search.subscriber'] = $instance = new \Mautic\FormBundle\EventListener\SearchSubscriber($this->get('mautic.helper.user'), $this->get('mautic.form.model.form'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.form.stats.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\EventListener\StatsSubscriber A Mautic\FormBundle\EventListener\StatsSubscriber instance
     */
    protected function getMautic_Form_Stats_SubscriberService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        $this->services['mautic.form.stats.subscriber'] = $instance = new \Mautic\FormBundle\EventListener\StatsSubscriber($a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($a);
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.form.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\EventListener\FormSubscriber A Mautic\FormBundle\EventListener\FormSubscriber instance
     */
    protected function getMautic_Form_SubscriberService()
    {
        $this->services['mautic.form.subscriber'] = $instance = new \Mautic\FormBundle\EventListener\FormSubscriber($this->get('mautic.helper.ip_lookup'), $this->get('mautic.core.model.auditlog'), $this->get('mautic.helper.mailer'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.form.type.action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\ActionType A Mautic\FormBundle\Form\Type\ActionType instance
     */
    protected function getMautic_Form_Type_ActionService()
    {
        return $this->services['mautic.form.type.action'] = new \Mautic\FormBundle\Form\Type\ActionType();
    }

    /**
     * Gets the 'mautic.form.type.apiclients' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ApiBundle\Form\Type\ClientType A Mautic\ApiBundle\Form\Type\ClientType instance
     */
    protected function getMautic_Form_Type_ApiclientsService()
    {
        return $this->services['mautic.form.type.apiclients'] = new \Mautic\ApiBundle\Form\Type\ClientType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.apiconfig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ApiBundle\Form\Type\ConfigType A Mautic\ApiBundle\Form\Type\ConfigType instance
     */
    protected function getMautic_Form_Type_ApiconfigService()
    {
        return $this->services['mautic.form.type.apiconfig'] = new \Mautic\ApiBundle\Form\Type\ConfigType();
    }

    /**
     * Gets the 'mautic.form.type.asset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\Form\Type\AssetType A Mautic\AssetBundle\Form\Type\AssetType instance
     */
    protected function getMautic_Form_Type_AssetService()
    {
        return $this->services['mautic.form.type.asset'] = new \Mautic\AssetBundle\Form\Type\AssetType($this->get('translator'), $this->get('mautic.helper.theme'), $this->get('mautic.asset.model.asset'));
    }

    /**
     * Gets the 'mautic.form.type.asset_dashboard_downloads_in_time_widget' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\Form\Type\DashboardDownloadsInTimeWidgetType A Mautic\AssetBundle\Form\Type\DashboardDownloadsInTimeWidgetType instance
     */
    protected function getMautic_Form_Type_AssetDashboardDownloadsInTimeWidgetService()
    {
        return $this->services['mautic.form.type.asset_dashboard_downloads_in_time_widget'] = new \Mautic\AssetBundle\Form\Type\DashboardDownloadsInTimeWidgetType();
    }

    /**
     * Gets the 'mautic.form.type.assetconfig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\Form\Type\ConfigType A Mautic\AssetBundle\Form\Type\ConfigType instance
     */
    protected function getMautic_Form_Type_AssetconfigService()
    {
        return $this->services['mautic.form.type.assetconfig'] = new \Mautic\AssetBundle\Form\Type\ConfigType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.assetlist' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\Form\Type\AssetListType A Mautic\AssetBundle\Form\Type\AssetListType instance
     */
    protected function getMautic_Form_Type_AssetlistService()
    {
        return $this->services['mautic.form.type.assetlist'] = new \Mautic\AssetBundle\Form\Type\AssetListType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.builder.section' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\BuilderSectionType A Mautic\CoreBundle\Form\Type\BuilderSectionType instance
     */
    protected function getMautic_Form_Type_Builder_SectionService()
    {
        return $this->services['mautic.form.type.builder.section'] = new \Mautic\CoreBundle\Form\Type\BuilderSectionType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.button_group' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\ButtonGroupType A Mautic\CoreBundle\Form\Type\ButtonGroupType instance
     */
    protected function getMautic_Form_Type_ButtonGroupService()
    {
        return $this->services['mautic.form.type.button_group'] = new \Mautic\CoreBundle\Form\Type\ButtonGroupType();
    }

    /**
     * Gets the 'mautic.form.type.campaignconfig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CampaignBundle\Form\Type\ConfigType A Mautic\CampaignBundle\Form\Type\ConfigType instance
     */
    protected function getMautic_Form_Type_CampaignconfigService()
    {
        return $this->services['mautic.form.type.campaignconfig'] = new \Mautic\CampaignBundle\Form\Type\ConfigType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.campaignevent_assetdownload' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\Form\Type\CampaignEventAssetDownloadType A Mautic\AssetBundle\Form\Type\CampaignEventAssetDownloadType instance
     */
    protected function getMautic_Form_Type_CampaigneventAssetdownloadService()
    {
        return $this->services['mautic.form.type.campaignevent_assetdownload'] = new \Mautic\AssetBundle\Form\Type\CampaignEventAssetDownloadType();
    }

    /**
     * Gets the 'mautic.form.type.campaignevent_form_field_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\CampaignEventFormFieldValueType A Mautic\FormBundle\Form\Type\CampaignEventFormFieldValueType instance
     */
    protected function getMautic_Form_Type_CampaigneventFormFieldValueService()
    {
        return $this->services['mautic.form.type.campaignevent_form_field_value'] = new \Mautic\FormBundle\Form\Type\CampaignEventFormFieldValueType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.campaignevent_formsubmit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\CampaignEventFormSubmitType A Mautic\FormBundle\Form\Type\CampaignEventFormSubmitType instance
     */
    protected function getMautic_Form_Type_CampaigneventFormsubmitService()
    {
        return $this->services['mautic.form.type.campaignevent_formsubmit'] = new \Mautic\FormBundle\Form\Type\CampaignEventFormSubmitType();
    }

    /**
     * Gets the 'mautic.form.type.campaignevent_lead_field_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\CampaignEventLeadFieldValueType A Mautic\LeadBundle\Form\Type\CampaignEventLeadFieldValueType instance
     */
    protected function getMautic_Form_Type_CampaigneventLeadFieldValueService()
    {
        return $this->services['mautic.form.type.campaignevent_lead_field_value'] = new \Mautic\LeadBundle\Form\Type\CampaignEventLeadFieldValueType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.category' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CategoryBundle\Form\Type\CategoryListType A Mautic\CategoryBundle\Form\Type\CategoryListType instance
     */
    protected function getMautic_Form_Type_CategoryService()
    {
        return $this->services['mautic.form.type.category'] = new \Mautic\CategoryBundle\Form\Type\CategoryListType($this->get('doctrine.orm.default_entity_manager'), $this->get('translator'), $this->get('mautic.category.model.category'), $this->get('router'));
    }

    /**
     * Gets the 'mautic.form.type.category_bundles_form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CategoryBundle\Form\Type\CategoryBundlesType A Mautic\CategoryBundle\Form\Type\CategoryBundlesType instance
     */
    protected function getMautic_Form_Type_CategoryBundlesFormService()
    {
        return $this->services['mautic.form.type.category_bundles_form'] = new \Mautic\CategoryBundle\Form\Type\CategoryBundlesType($this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'mautic.form.type.category_form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CategoryBundle\Form\Type\CategoryType A Mautic\CategoryBundle\Form\Type\CategoryType instance
     */
    protected function getMautic_Form_Type_CategoryFormService()
    {
        return $this->services['mautic.form.type.category_form'] = new \Mautic\CategoryBundle\Form\Type\CategoryType($this->get('translator'), $this->get('session'));
    }

    /**
     * Gets the 'mautic.form.type.citrix.campaignaction' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticCitrixBundle\Form\Type\CitrixCampaignActionType A MauticPlugin\MauticCitrixBundle\Form\Type\CitrixCampaignActionType instance
     */
    protected function getMautic_Form_Type_Citrix_CampaignactionService()
    {
        return $this->services['mautic.form.type.citrix.campaignaction'] = new \MauticPlugin\MauticCitrixBundle\Form\Type\CitrixCampaignActionType($this->get('translator'));
    }

    /**
     * Gets the 'mautic.form.type.citrix.campaignevent' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticCitrixBundle\Form\Type\CitrixCampaignEventType A MauticPlugin\MauticCitrixBundle\Form\Type\CitrixCampaignEventType instance
     */
    protected function getMautic_Form_Type_Citrix_CampaigneventService()
    {
        return $this->services['mautic.form.type.citrix.campaignevent'] = new \MauticPlugin\MauticCitrixBundle\Form\Type\CitrixCampaignEventType($this->get('mautic.citrix.model.citrix'), $this->get('translator'));
    }

    /**
     * Gets the 'mautic.form.type.citrix.submitaction' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticCitrixBundle\Form\Type\CitrixActionType A MauticPlugin\MauticCitrixBundle\Form\Type\CitrixActionType instance
     */
    protected function getMautic_Form_Type_Citrix_SubmitactionService()
    {
        return $this->services['mautic.form.type.citrix.submitaction'] = new \MauticPlugin\MauticCitrixBundle\Form\Type\CitrixActionType($this->get('mautic.form.model.field'));
    }

    /**
     * Gets the 'mautic.form.type.clearbit_batch_lookup' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticClearbitBundle\Form\Type\BatchLookupType A MauticPlugin\MauticClearbitBundle\Form\Type\BatchLookupType instance
     */
    protected function getMautic_Form_Type_ClearbitBatchLookupService()
    {
        return $this->services['mautic.form.type.clearbit_batch_lookup'] = new \MauticPlugin\MauticClearbitBundle\Form\Type\BatchLookupType();
    }

    /**
     * Gets the 'mautic.form.type.clearbit_lookup' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticClearbitBundle\Form\Type\LookupType A MauticPlugin\MauticClearbitBundle\Form\Type\LookupType instance
     */
    protected function getMautic_Form_Type_ClearbitLookupService()
    {
        return $this->services['mautic.form.type.clearbit_lookup'] = new \MauticPlugin\MauticClearbitBundle\Form\Type\LookupType();
    }

    /**
     * Gets the 'mautic.form.type.cloudstorage.openstack' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticCloudStorageBundle\Form\Type\OpenStackType A MauticPlugin\MauticCloudStorageBundle\Form\Type\OpenStackType instance
     */
    protected function getMautic_Form_Type_Cloudstorage_OpenstackService()
    {
        return $this->services['mautic.form.type.cloudstorage.openstack'] = new \MauticPlugin\MauticCloudStorageBundle\Form\Type\OpenStackType();
    }

    /**
     * Gets the 'mautic.form.type.cloudstorage.rackspace' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticCloudStorageBundle\Form\Type\RackspaceType A MauticPlugin\MauticCloudStorageBundle\Form\Type\RackspaceType instance
     */
    protected function getMautic_Form_Type_Cloudstorage_RackspaceService()
    {
        return $this->services['mautic.form.type.cloudstorage.rackspace'] = new \MauticPlugin\MauticCloudStorageBundle\Form\Type\RackspaceType();
    }

    /**
     * Gets the 'mautic.form.type.company_change_score' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\CompanyChangeScoreActionType A Mautic\LeadBundle\Form\Type\CompanyChangeScoreActionType instance
     */
    protected function getMautic_Form_Type_CompanyChangeScoreService()
    {
        return $this->services['mautic.form.type.company_change_score'] = new \Mautic\LeadBundle\Form\Type\CompanyChangeScoreActionType();
    }

    /**
     * Gets the 'mautic.form.type.config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ConfigBundle\Form\Type\ConfigType A Mautic\ConfigBundle\Form\Type\ConfigType instance
     */
    protected function getMautic_Form_Type_ConfigService()
    {
        return $this->services['mautic.form.type.config'] = new \Mautic\ConfigBundle\Form\Type\ConfigType($this->get('translator'));
    }

    /**
     * Gets the 'mautic.form.type.coreconfig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\ConfigType A Mautic\CoreBundle\Form\Type\ConfigType instance
     */
    protected function getMautic_Form_Type_CoreconfigService()
    {
        return $this->services['mautic.form.type.coreconfig'] = new \Mautic\CoreBundle\Form\Type\ConfigType($this->get('translator'), $this->get('mautic.helper.language'), $this->get('mautic.ip_lookup.factory'), array('en_US' => 'English - United States'), array('freegeoip' => array('display_name' => 'Freegeoip.net', 'class' => 'Mautic\\CoreBundle\\IpLookup\\FreegeoipLookup'), 'geobytes' => array('display_name' => 'Geobytes', 'class' => 'Mautic\\CoreBundle\\IpLookup\\GeobytesLookup'), 'geoips' => array('display_name' => 'GeoIPs', 'class' => 'Mautic\\CoreBundle\\IpLookup\\GeoipsLookup'), 'ipinfodb' => array('display_name' => 'IPInfoDB', 'class' => 'Mautic\\CoreBundle\\IpLookup\\IpinfodbLookup'), 'maxmind_country' => array('display_name' => 'MaxMind - Country Geolocation', 'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindCountryLookup'), 'maxmind_omni' => array('display_name' => 'MaxMind - Insights (formerly Omni]', 'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindOmniLookup'), 'maxmind_precision' => array('display_name' => 'MaxMind - GeoIP2 Precision', 'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindPrecisionLookup'), 'maxmind_download' => array('display_name' => 'MaxMind - GeoLite2 City Download', 'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindDownloadLookup'), 'telize' => array('display_name' => 'Telize', 'class' => 'Mautic\\CoreBundle\\IpLookup\\TelizeLookup'), 'ip2loctionlocal' => array('display_name' => 'IP2Location Local Bin File', 'class' => 'Mautic\\CoreBundle\\IpLookup\\IP2LocationBinLookup'), 'ip2loctionapi' => array('display_name' => 'IP2Location Web Service', 'class' => 'Mautic\\CoreBundle\\IpLookup\\IP2LocationAPILookup')), $this->get('mautic.ip_lookup'));
    }

    /**
     * Gets the 'mautic.form.type.coreconfig.iplookup_download_data_store_button' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\IpLookupDownloadDataStoreButtonType A Mautic\CoreBundle\Form\Type\IpLookupDownloadDataStoreButtonType instance
     */
    protected function getMautic_Form_Type_Coreconfig_IplookupDownloadDataStoreButtonService()
    {
        return $this->services['mautic.form.type.coreconfig.iplookup_download_data_store_button'] = new \Mautic\CoreBundle\Form\Type\IpLookupDownloadDataStoreButtonType($this->get('mautic.helper.template.date'), $this->get('translator'));
    }

    /**
     * Gets the 'mautic.form.type.coreconfig_monitored_email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Form\Type\ConfigMonitoredEmailType A Mautic\EmailBundle\Form\Type\ConfigMonitoredEmailType instance
     */
    protected function getMautic_Form_Type_CoreconfigMonitoredEmailService()
    {
        return $this->services['mautic.form.type.coreconfig_monitored_email'] = new \Mautic\EmailBundle\Form\Type\ConfigMonitoredEmailType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.coreconfig_monitored_mailboxes' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Form\Type\ConfigMonitoredMailboxesType A Mautic\EmailBundle\Form\Type\ConfigMonitoredMailboxesType instance
     */
    protected function getMautic_Form_Type_CoreconfigMonitoredMailboxesService()
    {
        return $this->services['mautic.form.type.coreconfig_monitored_mailboxes'] = new \Mautic\EmailBundle\Form\Type\ConfigMonitoredMailboxesType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.daterange' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\DateRangeType A Mautic\CoreBundle\Form\Type\DateRangeType instance
     */
    protected function getMautic_Form_Type_DaterangeService()
    {
        return $this->services['mautic.form.type.daterange'] = new \Mautic\CoreBundle\Form\Type\DateRangeType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.dwc' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DynamicContentBundle\Form\Type\DynamicContentType A Mautic\DynamicContentBundle\Form\Type\DynamicContentType instance
     */
    protected function getMautic_Form_Type_DwcService()
    {
        return $this->services['mautic.form.type.dwc'] = new \Mautic\DynamicContentBundle\Form\Type\DynamicContentType($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'mautic.form.type.dwc_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DynamicContentBundle\Form\Type\DynamicContentListType A Mautic\DynamicContentBundle\Form\Type\DynamicContentListType instance
     */
    protected function getMautic_Form_Type_DwcListService()
    {
        return $this->services['mautic.form.type.dwc_list'] = new \Mautic\DynamicContentBundle\Form\Type\DynamicContentListType();
    }

    /**
     * Gets the 'mautic.form.type.dwcdecision_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DynamicContentBundle\Form\Type\DynamicContentDecisionType A Mautic\DynamicContentBundle\Form\Type\DynamicContentDecisionType instance
     */
    protected function getMautic_Form_Type_DwcdecisionListService()
    {
        return $this->services['mautic.form.type.dwcdecision_list'] = new \Mautic\DynamicContentBundle\Form\Type\DynamicContentDecisionType($this->get('router'));
    }

    /**
     * Gets the 'mautic.form.type.dwcsend_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DynamicContentBundle\Form\Type\DynamicContentSendType A Mautic\DynamicContentBundle\Form\Type\DynamicContentSendType instance
     */
    protected function getMautic_Form_Type_DwcsendListService()
    {
        return $this->services['mautic.form.type.dwcsend_list'] = new \Mautic\DynamicContentBundle\Form\Type\DynamicContentSendType($this->get('router'));
    }

    /**
     * Gets the 'mautic.form.type.dynamic_content_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\DynamicContentFilterType A Mautic\CoreBundle\Form\Type\DynamicContentFilterType instance
     */
    protected function getMautic_Form_Type_DynamicContentFilterService()
    {
        return $this->services['mautic.form.type.dynamic_content_filter'] = new \Mautic\CoreBundle\Form\Type\DynamicContentFilterType();
    }

    /**
     * Gets the 'mautic.form.type.dynamic_content_filter_entry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\DynamicContentFilterEntryType A Mautic\CoreBundle\Form\Type\DynamicContentFilterEntryType instance
     */
    protected function getMautic_Form_Type_DynamicContentFilterEntryService()
    {
        return $this->services['mautic.form.type.dynamic_content_filter_entry'] = new \Mautic\CoreBundle\Form\Type\DynamicContentFilterEntryType($this->get('mautic.lead.model.list'), $this->get('mautic.stage.model.stage'));
    }

    /**
     * Gets the 'mautic.form.type.dynamic_content_filter_entry_filters' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\DynamicContentFilterEntryFiltersType A Mautic\CoreBundle\Form\Type\DynamicContentFilterEntryFiltersType instance
     */
    protected function getMautic_Form_Type_DynamicContentFilterEntryFiltersService()
    {
        return $this->services['mautic.form.type.dynamic_content_filter_entry_filters'] = new \Mautic\CoreBundle\Form\Type\DynamicContentFilterEntryFiltersType($this->get('translator'));
    }

    /**
     * Gets the 'mautic.form.type.dynamiclist' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\DynamicListType A Mautic\CoreBundle\Form\Type\DynamicListType instance
     */
    protected function getMautic_Form_Type_DynamiclistService()
    {
        return $this->services['mautic.form.type.dynamiclist'] = new \Mautic\CoreBundle\Form\Type\DynamicListType();
    }

    /**
     * Gets the 'mautic.form.type.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Form\Type\EmailType A Mautic\EmailBundle\Form\Type\EmailType instance
     */
    protected function getMautic_Form_Type_EmailService()
    {
        return $this->services['mautic.form.type.email'] = new \Mautic\EmailBundle\Form\Type\EmailType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.email_dashboard_emails_in_time_widget' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Form\Type\DashboardEmailsInTimeWidgetType A Mautic\EmailBundle\Form\Type\DashboardEmailsInTimeWidgetType instance
     */
    protected function getMautic_Form_Type_EmailDashboardEmailsInTimeWidgetService()
    {
        return $this->services['mautic.form.type.email_dashboard_emails_in_time_widget'] = new \Mautic\EmailBundle\Form\Type\DashboardEmailsInTimeWidgetType();
    }

    /**
     * Gets the 'mautic.form.type.email_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Form\Type\EmailListType A Mautic\EmailBundle\Form\Type\EmailListType instance
     */
    protected function getMautic_Form_Type_EmailListService()
    {
        return $this->services['mautic.form.type.email_list'] = new \Mautic\EmailBundle\Form\Type\EmailListType();
    }

    /**
     * Gets the 'mautic.form.type.emailconfig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Form\Type\ConfigType A Mautic\EmailBundle\Form\Type\ConfigType instance
     */
    protected function getMautic_Form_Type_EmailconfigService()
    {
        return $this->services['mautic.form.type.emailconfig'] = new \Mautic\EmailBundle\Form\Type\ConfigType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.emailmarketing.constantcontact' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticEmailMarketingBundle\Form\Type\ConstantContactType A MauticPlugin\MauticEmailMarketingBundle\Form\Type\ConstantContactType instance
     */
    protected function getMautic_Form_Type_Emailmarketing_ConstantcontactService()
    {
        return $this->services['mautic.form.type.emailmarketing.constantcontact'] = new \MauticPlugin\MauticEmailMarketingBundle\Form\Type\ConstantContactType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.emailmarketing.icontact' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticEmailMarketingBundle\Form\Type\IcontactType A MauticPlugin\MauticEmailMarketingBundle\Form\Type\IcontactType instance
     */
    protected function getMautic_Form_Type_Emailmarketing_IcontactService()
    {
        return $this->services['mautic.form.type.emailmarketing.icontact'] = new \MauticPlugin\MauticEmailMarketingBundle\Form\Type\IcontactType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.emailmarketing.mailchimp' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticEmailMarketingBundle\Form\Type\MailchimpType A MauticPlugin\MauticEmailMarketingBundle\Form\Type\MailchimpType instance
     */
    protected function getMautic_Form_Type_Emailmarketing_MailchimpService()
    {
        return $this->services['mautic.form.type.emailmarketing.mailchimp'] = new \MauticPlugin\MauticEmailMarketingBundle\Form\Type\MailchimpType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.emailopen_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Form\Type\EmailOpenType A Mautic\EmailBundle\Form\Type\EmailOpenType instance
     */
    protected function getMautic_Form_Type_EmailopenListService()
    {
        return $this->services['mautic.form.type.emailopen_list'] = new \Mautic\EmailBundle\Form\Type\EmailOpenType();
    }

    /**
     * Gets the 'mautic.form.type.emailsend_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Form\Type\EmailSendType A Mautic\EmailBundle\Form\Type\EmailSendType instance
     */
    protected function getMautic_Form_Type_EmailsendListService()
    {
        return $this->services['mautic.form.type.emailsend_list'] = new \Mautic\EmailBundle\Form\Type\EmailSendType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.emailvariant' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Form\Type\VariantType A Mautic\EmailBundle\Form\Type\VariantType instance
     */
    protected function getMautic_Form_Type_EmailvariantService()
    {
        return $this->services['mautic.form.type.emailvariant'] = new \Mautic\EmailBundle\Form\Type\VariantType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.entity_lookup' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\EntityLookupType A Mautic\CoreBundle\Form\Type\EntityLookupType instance
     */
    protected function getMautic_Form_Type_EntityLookupService()
    {
        return $this->services['mautic.form.type.entity_lookup'] = new \Mautic\CoreBundle\Form\Type\EntityLookupType($this->get('mautic.model.factory'), $this->get('translator'), $this->get('doctrine.dbal.default_connection'), $this->get('router'));
    }

    /**
     * Gets the 'mautic.form.type.field' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\FieldType A Mautic\FormBundle\Form\Type\FieldType instance
     */
    protected function getMautic_Form_Type_FieldService()
    {
        $this->services['mautic.form.type.field'] = $instance = new \Mautic\FormBundle\Form\Type\FieldType();

        $instance->setFieldModel($this->get('mautic.form.model.field'));
        $instance->setFormModel($this->get('mautic.form.model.form'));

        return $instance;
    }

    /**
     * Gets the 'mautic.form.type.field_propertycaptcha' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\FormFieldCaptchaType A Mautic\FormBundle\Form\Type\FormFieldCaptchaType instance
     */
    protected function getMautic_Form_Type_FieldPropertycaptchaService()
    {
        return $this->services['mautic.form.type.field_propertycaptcha'] = new \Mautic\FormBundle\Form\Type\FormFieldCaptchaType();
    }

    /**
     * Gets the 'mautic.form.type.field_propertygroup' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\FormFieldGroupType A Mautic\FormBundle\Form\Type\FormFieldGroupType instance
     */
    protected function getMautic_Form_Type_FieldPropertygroupService()
    {
        return $this->services['mautic.form.type.field_propertygroup'] = new \Mautic\FormBundle\Form\Type\FormFieldGroupType();
    }

    /**
     * Gets the 'mautic.form.type.field_propertyplaceholder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\FormFieldPlaceholderType A Mautic\FormBundle\Form\Type\FormFieldPlaceholderType instance
     */
    protected function getMautic_Form_Type_FieldPropertyplaceholderService()
    {
        return $this->services['mautic.form.type.field_propertyplaceholder'] = new \Mautic\FormBundle\Form\Type\FormFieldPlaceholderType();
    }

    /**
     * Gets the 'mautic.form.type.field_propertyselect' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\FormFieldSelectType A Mautic\FormBundle\Form\Type\FormFieldSelectType instance
     */
    protected function getMautic_Form_Type_FieldPropertyselectService()
    {
        return $this->services['mautic.form.type.field_propertyselect'] = new \Mautic\FormBundle\Form\Type\FormFieldSelectType();
    }

    /**
     * Gets the 'mautic.form.type.field_propertytext' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\FormFieldTextType A Mautic\FormBundle\Form\Type\FormFieldTextType instance
     */
    protected function getMautic_Form_Type_FieldPropertytextService()
    {
        return $this->services['mautic.form.type.field_propertytext'] = new \Mautic\FormBundle\Form\Type\FormFieldTextType();
    }

    /**
     * Gets the 'mautic.form.type.fieldslist.citrixlist' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticCitrixBundle\Form\Type\CitrixListType A MauticPlugin\MauticCitrixBundle\Form\Type\CitrixListType instance
     */
    protected function getMautic_Form_Type_Fieldslist_CitrixlistService()
    {
        return $this->services['mautic.form.type.fieldslist.citrixlist'] = new \MauticPlugin\MauticCitrixBundle\Form\Type\CitrixListType();
    }

    /**
     * Gets the 'mautic.form.type.filter_selector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ReportBundle\Form\Type\FilterSelectorType A Mautic\ReportBundle\Form\Type\FilterSelectorType instance
     */
    protected function getMautic_Form_Type_FilterSelectorService()
    {
        return $this->services['mautic.form.type.filter_selector'] = new \Mautic\ReportBundle\Form\Type\FilterSelectorType();
    }

    /**
     * Gets the 'mautic.form.type.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\FormType A Mautic\FormBundle\Form\Type\FormType instance
     */
    protected function getMautic_Form_Type_FormService()
    {
        return $this->services['mautic.form.type.form'] = new \Mautic\FormBundle\Form\Type\FormType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.form_buttons' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\FormButtonsType A Mautic\CoreBundle\Form\Type\FormButtonsType instance
     */
    protected function getMautic_Form_Type_FormButtonsService()
    {
        return $this->services['mautic.form.type.form_buttons'] = new \Mautic\CoreBundle\Form\Type\FormButtonsType();
    }

    /**
     * Gets the 'mautic.form.type.form_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\FormListType A Mautic\FormBundle\Form\Type\FormListType instance
     */
    protected function getMautic_Form_Type_FormListService()
    {
        return $this->services['mautic.form.type.form_list'] = new \Mautic\FormBundle\Form\Type\FormListType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.form_submitaction_repost' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\SubmitActionRepostType A Mautic\FormBundle\Form\Type\SubmitActionRepostType instance
     */
    protected function getMautic_Form_Type_FormSubmitactionRepostService()
    {
        $this->services['mautic.form.type.form_submitaction_repost'] = $instance = new \Mautic\FormBundle\Form\Type\SubmitActionRepostType();

        $instance->setFieldModel($this->get('mautic.form.model.field'));
        $instance->setFormModel($this->get('mautic.form.model.form'));

        return $instance;
    }

    /**
     * Gets the 'mautic.form.type.form_submitaction_sendemail' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\SubmitActionEmailType A Mautic\FormBundle\Form\Type\SubmitActionEmailType instance
     */
    protected function getMautic_Form_Type_FormSubmitactionSendemailService()
    {
        $this->services['mautic.form.type.form_submitaction_sendemail'] = $instance = new \Mautic\FormBundle\Form\Type\SubmitActionEmailType($this->get('translator'));

        $instance->setFieldModel($this->get('mautic.form.model.field'));
        $instance->setFormModel($this->get('mautic.form.model.form'));

        return $instance;
    }

    /**
     * Gets the 'mautic.form.type.formsubmit_assetdownload' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\Form\Type\FormSubmitActionDownloadFileType A Mautic\AssetBundle\Form\Type\FormSubmitActionDownloadFileType instance
     */
    protected function getMautic_Form_Type_FormsubmitAssetdownloadService()
    {
        return $this->services['mautic.form.type.formsubmit_assetdownload'] = new \Mautic\AssetBundle\Form\Type\FormSubmitActionDownloadFileType();
    }

    /**
     * Gets the 'mautic.form.type.formsubmit_sendemail_admin' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Form\Type\FormSubmitActionUserEmailType A Mautic\EmailBundle\Form\Type\FormSubmitActionUserEmailType instance
     */
    protected function getMautic_Form_Type_FormsubmitSendemailAdminService()
    {
        return $this->services['mautic.form.type.formsubmit_sendemail_admin'] = new \Mautic\EmailBundle\Form\Type\FormSubmitActionUserEmailType();
    }

    /**
     * Gets the 'mautic.form.type.fullcontact_batch_lookup' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFullContactBundle\Form\Type\BatchLookupType A MauticPlugin\MauticFullContactBundle\Form\Type\BatchLookupType instance
     */
    protected function getMautic_Form_Type_FullcontactBatchLookupService()
    {
        return $this->services['mautic.form.type.fullcontact_batch_lookup'] = new \MauticPlugin\MauticFullContactBundle\Form\Type\BatchLookupType();
    }

    /**
     * Gets the 'mautic.form.type.fullcontact_lookup' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFullContactBundle\Form\Type\LookupType A MauticPlugin\MauticFullContactBundle\Form\Type\LookupType instance
     */
    protected function getMautic_Form_Type_FullcontactLookupService()
    {
        return $this->services['mautic.form.type.fullcontact_lookup'] = new \MauticPlugin\MauticFullContactBundle\Form\Type\LookupType();
    }

    /**
     * Gets the 'mautic.form.type.hidden_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\HiddenEntityType A Mautic\CoreBundle\Form\Type\HiddenEntityType instance
     */
    protected function getMautic_Form_Type_HiddenEntityService()
    {
        return $this->services['mautic.form.type.hidden_entity'] = new \Mautic\CoreBundle\Form\Type\HiddenEntityType($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'mautic.form.type.integration.company.fields' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PluginBundle\Form\Type\CompanyFieldsType A Mautic\PluginBundle\Form\Type\CompanyFieldsType instance
     */
    protected function getMautic_Form_Type_Integration_Company_FieldsService()
    {
        return $this->services['mautic.form.type.integration.company.fields'] = new \Mautic\PluginBundle\Form\Type\CompanyFieldsType();
    }

    /**
     * Gets the 'mautic.form.type.integration.config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PluginBundle\Form\Type\IntegrationConfigType A Mautic\PluginBundle\Form\Type\IntegrationConfigType instance
     */
    protected function getMautic_Form_Type_Integration_ConfigService()
    {
        return $this->services['mautic.form.type.integration.config'] = new \Mautic\PluginBundle\Form\Type\IntegrationConfigType();
    }

    /**
     * Gets the 'mautic.form.type.integration.details' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PluginBundle\Form\Type\DetailsType A Mautic\PluginBundle\Form\Type\DetailsType instance
     */
    protected function getMautic_Form_Type_Integration_DetailsService()
    {
        return $this->services['mautic.form.type.integration.details'] = new \Mautic\PluginBundle\Form\Type\DetailsType();
    }

    /**
     * Gets the 'mautic.form.type.integration.fields' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PluginBundle\Form\Type\FieldsType A Mautic\PluginBundle\Form\Type\FieldsType instance
     */
    protected function getMautic_Form_Type_Integration_FieldsService()
    {
        return $this->services['mautic.form.type.integration.fields'] = new \Mautic\PluginBundle\Form\Type\FieldsType();
    }

    /**
     * Gets the 'mautic.form.type.integration.keys' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PluginBundle\Form\Type\KeysType A Mautic\PluginBundle\Form\Type\KeysType instance
     */
    protected function getMautic_Form_Type_Integration_KeysService()
    {
        return $this->services['mautic.form.type.integration.keys'] = new \Mautic\PluginBundle\Form\Type\KeysType();
    }

    /**
     * Gets the 'mautic.form.type.integration.list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PluginBundle\Form\Type\IntegrationsListType A Mautic\PluginBundle\Form\Type\IntegrationsListType instance
     */
    protected function getMautic_Form_Type_Integration_ListService()
    {
        return $this->services['mautic.form.type.integration.list'] = new \Mautic\PluginBundle\Form\Type\IntegrationsListType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.integration.settings' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PluginBundle\Form\Type\FeatureSettingsType A Mautic\PluginBundle\Form\Type\FeatureSettingsType instance
     */
    protected function getMautic_Form_Type_Integration_SettingsService()
    {
        return $this->services['mautic.form.type.integration.settings'] = new \Mautic\PluginBundle\Form\Type\FeatureSettingsType($this->get('mautic.factory'), $this->get('session'), $this->get('mautic.helper.core_parameters'), $this->get('translator'));
    }

    /**
     * Gets the 'mautic.form.type.lead' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\LeadType A Mautic\LeadBundle\Form\Type\LeadType instance
     */
    protected function getMautic_Form_Type_LeadService()
    {
        return $this->services['mautic.form.type.lead'] = new \Mautic\LeadBundle\Form\Type\LeadType($this->get('mautic.factory'), $this->get('mautic.lead.model.company'));
    }

    /**
     * Gets the 'mautic.form.type.lead.submitaction.addutmtags' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\ActionAddUtmTagsType A Mautic\LeadBundle\Form\Type\ActionAddUtmTagsType instance
     */
    protected function getMautic_Form_Type_Lead_Submitaction_AddutmtagsService()
    {
        return $this->services['mautic.form.type.lead.submitaction.addutmtags'] = new \Mautic\LeadBundle\Form\Type\ActionAddUtmTagsType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.lead.submitaction.changelist' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\EventListType A Mautic\LeadBundle\Form\Type\EventListType instance
     */
    protected function getMautic_Form_Type_Lead_Submitaction_ChangelistService()
    {
        return $this->services['mautic.form.type.lead.submitaction.changelist'] = new \Mautic\LeadBundle\Form\Type\EventListType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.lead.submitaction.pointschange' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\FormSubmitActionPointsChangeType A Mautic\LeadBundle\Form\Type\FormSubmitActionPointsChangeType instance
     */
    protected function getMautic_Form_Type_Lead_Submitaction_PointschangeService()
    {
        return $this->services['mautic.form.type.lead.submitaction.pointschange'] = new \Mautic\LeadBundle\Form\Type\FormSubmitActionPointsChangeType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.lead.submitaction.removedonotcontact' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\ActionRemoveDoNotContact A Mautic\LeadBundle\Form\Type\ActionRemoveDoNotContact instance
     */
    protected function getMautic_Form_Type_Lead_Submitaction_RemovedonotcontactService()
    {
        return $this->services['mautic.form.type.lead.submitaction.removedonotcontact'] = new \Mautic\LeadBundle\Form\Type\ActionRemoveDoNotContact($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.lead_batch' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\BatchType A Mautic\LeadBundle\Form\Type\BatchType instance
     */
    protected function getMautic_Form_Type_LeadBatchService()
    {
        return $this->services['mautic.form.type.lead_batch'] = new \Mautic\LeadBundle\Form\Type\BatchType();
    }

    /**
     * Gets the 'mautic.form.type.lead_batch_dnc' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\DncType A Mautic\LeadBundle\Form\Type\DncType instance
     */
    protected function getMautic_Form_Type_LeadBatchDncService()
    {
        return $this->services['mautic.form.type.lead_batch_dnc'] = new \Mautic\LeadBundle\Form\Type\DncType();
    }

    /**
     * Gets the 'mautic.form.type.lead_batch_stage' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\StageType A Mautic\LeadBundle\Form\Type\StageType instance
     */
    protected function getMautic_Form_Type_LeadBatchStageService()
    {
        return $this->services['mautic.form.type.lead_batch_stage'] = new \Mautic\LeadBundle\Form\Type\StageType();
    }

    /**
     * Gets the 'mautic.form.type.lead_categories' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\LeadCategoryType A Mautic\LeadBundle\Form\Type\LeadCategoryType instance
     */
    protected function getMautic_Form_Type_LeadCategoriesService()
    {
        return $this->services['mautic.form.type.lead_categories'] = new \Mautic\LeadBundle\Form\Type\LeadCategoryType($this->get('mautic.category.model.category'));
    }

    /**
     * Gets the 'mautic.form.type.lead_contact_frequency_rules' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\ContactFrequencyType A Mautic\LeadBundle\Form\Type\ContactFrequencyType instance
     */
    protected function getMautic_Form_Type_LeadContactFrequencyRulesService()
    {
        return $this->services['mautic.form.type.lead_contact_frequency_rules'] = new \Mautic\LeadBundle\Form\Type\ContactFrequencyType($this->get('mautic.helper.core_parameters'));
    }

    /**
     * Gets the 'mautic.form.type.lead_dashboard_leads_in_time_widget' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\DashboardLeadsInTimeWidgetType A Mautic\LeadBundle\Form\Type\DashboardLeadsInTimeWidgetType instance
     */
    protected function getMautic_Form_Type_LeadDashboardLeadsInTimeWidgetService()
    {
        return $this->services['mautic.form.type.lead_dashboard_leads_in_time_widget'] = new \Mautic\LeadBundle\Form\Type\DashboardLeadsInTimeWidgetType();
    }

    /**
     * Gets the 'mautic.form.type.lead_dashboard_leads_lifetime_widget' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\DashboardLeadsLifetimeWidgetType A Mautic\LeadBundle\Form\Type\DashboardLeadsLifetimeWidgetType instance
     */
    protected function getMautic_Form_Type_LeadDashboardLeadsLifetimeWidgetService()
    {
        return $this->services['mautic.form.type.lead_dashboard_leads_lifetime_widget'] = new \Mautic\LeadBundle\Form\Type\DashboardLeadsLifetimeWidgetType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.lead_field_import' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\LeadImportFieldType A Mautic\LeadBundle\Form\Type\LeadImportFieldType instance
     */
    protected function getMautic_Form_Type_LeadFieldImportService()
    {
        return $this->services['mautic.form.type.lead_field_import'] = new \Mautic\LeadBundle\Form\Type\LeadImportFieldType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.lead_fields' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\LeadFieldsType A Mautic\LeadBundle\Form\Type\LeadFieldsType instance
     */
    protected function getMautic_Form_Type_LeadFieldsService()
    {
        return $this->services['mautic.form.type.lead_fields'] = new \Mautic\LeadBundle\Form\Type\LeadFieldsType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.lead_import' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\LeadImportType A Mautic\LeadBundle\Form\Type\LeadImportType instance
     */
    protected function getMautic_Form_Type_LeadImportService()
    {
        return $this->services['mautic.form.type.lead_import'] = new \Mautic\LeadBundle\Form\Type\LeadImportType();
    }

    /**
     * Gets the 'mautic.form.type.lead_merge' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\MergeType A Mautic\LeadBundle\Form\Type\MergeType instance
     */
    protected function getMautic_Form_Type_LeadMergeService()
    {
        return $this->services['mautic.form.type.lead_merge'] = new \Mautic\LeadBundle\Form\Type\MergeType();
    }

    /**
     * Gets the 'mautic.form.type.lead_quickemail' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\EmailType A Mautic\LeadBundle\Form\Type\EmailType instance
     */
    protected function getMautic_Form_Type_LeadQuickemailService()
    {
        return $this->services['mautic.form.type.lead_quickemail'] = new \Mautic\LeadBundle\Form\Type\EmailType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.lead_tag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\TagType A Mautic\LeadBundle\Form\Type\TagType instance
     */
    protected function getMautic_Form_Type_LeadTagService()
    {
        return $this->services['mautic.form.type.lead_tag'] = new \Mautic\LeadBundle\Form\Type\TagType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.lead_tags' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\TagListType A Mautic\LeadBundle\Form\Type\TagListType instance
     */
    protected function getMautic_Form_Type_LeadTagsService()
    {
        return $this->services['mautic.form.type.lead_tags'] = new \Mautic\LeadBundle\Form\Type\TagListType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.leaddevice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\DeviceType A Mautic\LeadBundle\Form\Type\DeviceType instance
     */
    protected function getMautic_Form_Type_LeaddeviceService()
    {
        return $this->services['mautic.form.type.leaddevice'] = new \Mautic\LeadBundle\Form\Type\DeviceType();
    }

    /**
     * Gets the 'mautic.form.type.leadfield' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\FieldType A Mautic\LeadBundle\Form\Type\FieldType instance
     */
    protected function getMautic_Form_Type_LeadfieldService()
    {
        return $this->services['mautic.form.type.leadfield'] = new \Mautic\LeadBundle\Form\Type\FieldType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.leadlist' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\ListType A Mautic\LeadBundle\Form\Type\ListType instance
     */
    protected function getMautic_Form_Type_LeadlistService()
    {
        return $this->services['mautic.form.type.leadlist'] = new \Mautic\LeadBundle\Form\Type\ListType($this->get('translator'), $this->get('mautic.lead.model.list'), $this->get('mautic.email.model.email'), $this->get('mautic.security'), $this->get('mautic.lead.model.lead'), $this->get('mautic.stage.model.stage'), $this->get('mautic.category.model.category'), $this->get('mautic.helper.user'));
    }

    /**
     * Gets the 'mautic.form.type.leadlist_action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\ListActionType A Mautic\LeadBundle\Form\Type\ListActionType instance
     */
    protected function getMautic_Form_Type_LeadlistActionService()
    {
        return $this->services['mautic.form.type.leadlist_action'] = new \Mautic\LeadBundle\Form\Type\ListActionType();
    }

    /**
     * Gets the 'mautic.form.type.leadlist_choices' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\LeadListType A Mautic\LeadBundle\Form\Type\LeadListType instance
     */
    protected function getMautic_Form_Type_LeadlistChoicesService()
    {
        return $this->services['mautic.form.type.leadlist_choices'] = new \Mautic\LeadBundle\Form\Type\LeadListType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.leadlist_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\FilterType A Mautic\LeadBundle\Form\Type\FilterType instance
     */
    protected function getMautic_Form_Type_LeadlistFilterService()
    {
        return $this->services['mautic.form.type.leadlist_filter'] = new \Mautic\LeadBundle\Form\Type\FilterType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.leadlist_trigger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\ListTriggerType A Mautic\LeadBundle\Form\Type\ListTriggerType instance
     */
    protected function getMautic_Form_Type_LeadlistTriggerService()
    {
        return $this->services['mautic.form.type.leadlist_trigger'] = new \Mautic\LeadBundle\Form\Type\ListTriggerType();
    }

    /**
     * Gets the 'mautic.form.type.leadnote' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\NoteType A Mautic\LeadBundle\Form\Type\NoteType instance
     */
    protected function getMautic_Form_Type_LeadnoteService()
    {
        return $this->services['mautic.form.type.leadnote'] = new \Mautic\LeadBundle\Form\Type\NoteType();
    }

    /**
     * Gets the 'mautic.form.type.leadpoints_action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\PointActionType A Mautic\LeadBundle\Form\Type\PointActionType instance
     */
    protected function getMautic_Form_Type_LeadpointsActionService()
    {
        return $this->services['mautic.form.type.leadpoints_action'] = new \Mautic\LeadBundle\Form\Type\PointActionType();
    }

    /**
     * Gets the 'mautic.form.type.leadpoints_trigger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\PointTriggerType A Mautic\LeadBundle\Form\Type\PointTriggerType instance
     */
    protected function getMautic_Form_Type_LeadpointsTriggerService()
    {
        return $this->services['mautic.form.type.leadpoints_trigger'] = new \Mautic\LeadBundle\Form\Type\PointTriggerType();
    }

    /**
     * Gets the 'mautic.form.type.message_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ChannelBundle\Form\Type\MessageListType A Mautic\ChannelBundle\Form\Type\MessageListType instance
     */
    protected function getMautic_Form_Type_MessageListService()
    {
        return $this->services['mautic.form.type.message_list'] = new \Mautic\ChannelBundle\Form\Type\MessageListType();
    }

    /**
     * Gets the 'mautic.form.type.message_send' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ChannelBundle\Form\Type\MessageSendType A Mautic\ChannelBundle\Form\Type\MessageSendType instance
     */
    protected function getMautic_Form_Type_MessageSendService()
    {
        return $this->services['mautic.form.type.message_send'] = new \Mautic\ChannelBundle\Form\Type\MessageSendType($this->get('router'), $this->get('mautic.channel.model.message'));
    }

    /**
     * Gets the 'mautic.form.type.modify_lead_tags' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\ModifyLeadTagsType A Mautic\LeadBundle\Form\Type\ModifyLeadTagsType instance
     */
    protected function getMautic_Form_Type_ModifyLeadTagsService()
    {
        return $this->services['mautic.form.type.modify_lead_tags'] = new \Mautic\LeadBundle\Form\Type\ModifyLeadTagsType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.notification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\NotificationBundle\Form\Type\NotificationType A Mautic\NotificationBundle\Form\Type\NotificationType instance
     */
    protected function getMautic_Form_Type_NotificationService()
    {
        return $this->services['mautic.form.type.notification'] = new \Mautic\NotificationBundle\Form\Type\NotificationType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.notification_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\NotificationBundle\Form\Type\NotificationListType A Mautic\NotificationBundle\Form\Type\NotificationListType instance
     */
    protected function getMautic_Form_Type_NotificationListService()
    {
        return $this->services['mautic.form.type.notification_list'] = new \Mautic\NotificationBundle\Form\Type\NotificationListType();
    }

    /**
     * Gets the 'mautic.form.type.notificationconfig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\NotificationBundle\Form\Type\ConfigType A Mautic\NotificationBundle\Form\Type\ConfigType instance
     */
    protected function getMautic_Form_Type_NotificationconfigService()
    {
        return $this->services['mautic.form.type.notificationconfig'] = new \Mautic\NotificationBundle\Form\Type\ConfigType();
    }

    /**
     * Gets the 'mautic.form.type.notificationsend_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\NotificationBundle\Form\Type\NotificationSendType A Mautic\NotificationBundle\Form\Type\NotificationSendType instance
     */
    protected function getMautic_Form_Type_NotificationsendListService()
    {
        return $this->services['mautic.form.type.notificationsend_list'] = new \Mautic\NotificationBundle\Form\Type\NotificationSendType($this->get('router'));
    }

    /**
     * Gets the 'mautic.form.type.page' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Form\Type\PageType A Mautic\PageBundle\Form\Type\PageType instance
     */
    protected function getMautic_Form_Type_PageService()
    {
        return $this->services['mautic.form.type.page'] = new \Mautic\PageBundle\Form\Type\PageType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.page_abtest_settings' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Form\Type\AbTestPropertiesType A Mautic\PageBundle\Form\Type\AbTestPropertiesType instance
     */
    protected function getMautic_Form_Type_PageAbtestSettingsService()
    {
        return $this->services['mautic.form.type.page_abtest_settings'] = new \Mautic\PageBundle\Form\Type\AbTestPropertiesType();
    }

    /**
     * Gets the 'mautic.form.type.page_dashboard_hits_in_time_widget' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Form\Type\DashboardHitsInTimeWidgetType A Mautic\PageBundle\Form\Type\DashboardHitsInTimeWidgetType instance
     */
    protected function getMautic_Form_Type_PageDashboardHitsInTimeWidgetService()
    {
        return $this->services['mautic.form.type.page_dashboard_hits_in_time_widget'] = new \Mautic\PageBundle\Form\Type\DashboardHitsInTimeWidgetType();
    }

    /**
     * Gets the 'mautic.form.type.page_publish_dates' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Form\Type\PagePublishDatesType A Mautic\PageBundle\Form\Type\PagePublishDatesType instance
     */
    protected function getMautic_Form_Type_PagePublishDatesService()
    {
        return $this->services['mautic.form.type.page_publish_dates'] = new \Mautic\PageBundle\Form\Type\PagePublishDatesType();
    }

    /**
     * Gets the 'mautic.form.type.pageconfig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Form\Type\ConfigType A Mautic\PageBundle\Form\Type\ConfigType instance
     */
    protected function getMautic_Form_Type_PageconfigService()
    {
        return $this->services['mautic.form.type.pageconfig'] = new \Mautic\PageBundle\Form\Type\ConfigType();
    }

    /**
     * Gets the 'mautic.form.type.pagehit.campaign_trigger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Form\Type\CampaignEventPageHitType A Mautic\PageBundle\Form\Type\CampaignEventPageHitType instance
     */
    protected function getMautic_Form_Type_Pagehit_CampaignTriggerService()
    {
        return $this->services['mautic.form.type.pagehit.campaign_trigger'] = new \Mautic\PageBundle\Form\Type\CampaignEventPageHitType();
    }

    /**
     * Gets the 'mautic.form.type.pagelist' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Form\Type\PageListType A Mautic\PageBundle\Form\Type\PageListType instance
     */
    protected function getMautic_Form_Type_PagelistService()
    {
        return $this->services['mautic.form.type.pagelist'] = new \Mautic\PageBundle\Form\Type\PageListType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.pagevariant' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Form\Type\VariantType A Mautic\PageBundle\Form\Type\VariantType instance
     */
    protected function getMautic_Form_Type_PagevariantService()
    {
        return $this->services['mautic.form.type.pagevariant'] = new \Mautic\PageBundle\Form\Type\VariantType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.passwordreset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Form\Type\PasswordResetType A Mautic\UserBundle\Form\Type\PasswordResetType instance
     */
    protected function getMautic_Form_Type_PasswordresetService()
    {
        return $this->services['mautic.form.type.passwordreset'] = new \Mautic\UserBundle\Form\Type\PasswordResetType();
    }

    /**
     * Gets the 'mautic.form.type.passwordresetconfirm' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Form\Type\PasswordResetConfirmType A Mautic\UserBundle\Form\Type\PasswordResetConfirmType instance
     */
    protected function getMautic_Form_Type_PasswordresetconfirmService()
    {
        return $this->services['mautic.form.type.passwordresetconfirm'] = new \Mautic\UserBundle\Form\Type\PasswordResetConfirmType();
    }

    /**
     * Gets the 'mautic.form.type.permissionlist' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Form\Type\PermissionListType A Mautic\UserBundle\Form\Type\PermissionListType instance
     */
    protected function getMautic_Form_Type_PermissionlistService()
    {
        return $this->services['mautic.form.type.permissionlist'] = new \Mautic\UserBundle\Form\Type\PermissionListType();
    }

    /**
     * Gets the 'mautic.form.type.permissions' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Form\Type\PermissionsType A Mautic\UserBundle\Form\Type\PermissionsType instance
     */
    protected function getMautic_Form_Type_PermissionsService()
    {
        return $this->services['mautic.form.type.permissions'] = new \Mautic\UserBundle\Form\Type\PermissionsType();
    }

    /**
     * Gets the 'mautic.form.type.pointaction_assetdownload' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\Form\Type\PointActionAssetDownloadType A Mautic\AssetBundle\Form\Type\PointActionAssetDownloadType instance
     */
    protected function getMautic_Form_Type_PointactionAssetdownloadService()
    {
        return $this->services['mautic.form.type.pointaction_assetdownload'] = new \Mautic\AssetBundle\Form\Type\PointActionAssetDownloadType();
    }

    /**
     * Gets the 'mautic.form.type.pointaction_formsubmit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\PointActionFormSubmitType A Mautic\FormBundle\Form\Type\PointActionFormSubmitType instance
     */
    protected function getMautic_Form_Type_PointactionFormsubmitService()
    {
        return $this->services['mautic.form.type.pointaction_formsubmit'] = new \Mautic\FormBundle\Form\Type\PointActionFormSubmitType();
    }

    /**
     * Gets the 'mautic.form.type.pointaction_pointhit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Form\Type\PointActionPageHitType A Mautic\PageBundle\Form\Type\PointActionPageHitType instance
     */
    protected function getMautic_Form_Type_PointactionPointhitService()
    {
        return $this->services['mautic.form.type.pointaction_pointhit'] = new \Mautic\PageBundle\Form\Type\PointActionPageHitType();
    }

    /**
     * Gets the 'mautic.form.type.pointaction_urlhit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Form\Type\PointActionUrlHitType A Mautic\PageBundle\Form\Type\PointActionUrlHitType instance
     */
    protected function getMautic_Form_Type_PointactionUrlhitService()
    {
        return $this->services['mautic.form.type.pointaction_urlhit'] = new \Mautic\PageBundle\Form\Type\PointActionUrlHitType();
    }

    /**
     * Gets the 'mautic.form.type.redirect_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Form\Type\RedirectListType A Mautic\PageBundle\Form\Type\RedirectListType instance
     */
    protected function getMautic_Form_Type_RedirectListService()
    {
        return $this->services['mautic.form.type.redirect_list'] = new \Mautic\PageBundle\Form\Type\RedirectListType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.report' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ReportBundle\Form\Type\ReportType A Mautic\ReportBundle\Form\Type\ReportType instance
     */
    protected function getMautic_Form_Type_ReportService()
    {
        return $this->services['mautic.form.type.report'] = new \Mautic\ReportBundle\Form\Type\ReportType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.report_dynamic_filters' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ReportBundle\Form\Type\DynamicFiltersType A Mautic\ReportBundle\Form\Type\DynamicFiltersType instance
     */
    protected function getMautic_Form_Type_ReportDynamicFiltersService()
    {
        return $this->services['mautic.form.type.report_dynamic_filters'] = new \Mautic\ReportBundle\Form\Type\DynamicFiltersType();
    }

    /**
     * Gets the 'mautic.form.type.report_filters' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ReportBundle\Form\Type\ReportFiltersType A Mautic\ReportBundle\Form\Type\ReportFiltersType instance
     */
    protected function getMautic_Form_Type_ReportFiltersService()
    {
        return $this->services['mautic.form.type.report_filters'] = new \Mautic\ReportBundle\Form\Type\ReportFiltersType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.report_widget' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ReportBundle\Form\Type\ReportWidgetType A Mautic\ReportBundle\Form\Type\ReportWidgetType instance
     */
    protected function getMautic_Form_Type_ReportWidgetService()
    {
        return $this->services['mautic.form.type.report_widget'] = new \Mautic\ReportBundle\Form\Type\ReportWidgetType($this->get('mautic.report.model.report'));
    }

    /**
     * Gets the 'mautic.form.type.role' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Form\Type\RoleType A Mautic\UserBundle\Form\Type\RoleType instance
     */
    protected function getMautic_Form_Type_RoleService()
    {
        return $this->services['mautic.form.type.role'] = new \Mautic\UserBundle\Form\Type\RoleType();
    }

    /**
     * Gets the 'mautic.form.type.role_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Form\Type\RoleListType A Mautic\UserBundle\Form\Type\RoleListType instance
     */
    protected function getMautic_Form_Type_RoleListService()
    {
        return $this->services['mautic.form.type.role_list'] = new \Mautic\UserBundle\Form\Type\RoleListType($this->get('mautic.user.model.role'));
    }

    /**
     * Gets the 'mautic.form.type.slideshow_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Form\Type\SlideshowGlobalConfigType A Mautic\PageBundle\Form\Type\SlideshowGlobalConfigType instance
     */
    protected function getMautic_Form_Type_SlideshowConfigService()
    {
        return $this->services['mautic.form.type.slideshow_config'] = new \Mautic\PageBundle\Form\Type\SlideshowGlobalConfigType();
    }

    /**
     * Gets the 'mautic.form.type.slideshow_slide_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Form\Type\SlideshowSlideConfigType A Mautic\PageBundle\Form\Type\SlideshowSlideConfigType instance
     */
    protected function getMautic_Form_Type_SlideshowSlideConfigService()
    {
        return $this->services['mautic.form.type.slideshow_slide_config'] = new \Mautic\PageBundle\Form\Type\SlideshowSlideConfigType();
    }

    /**
     * Gets the 'mautic.form.type.slot' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\SlotType A Mautic\CoreBundle\Form\Type\SlotType instance
     */
    protected function getMautic_Form_Type_SlotService()
    {
        return $this->services['mautic.form.type.slot'] = new \Mautic\CoreBundle\Form\Type\SlotType();
    }

    /**
     * Gets the 'mautic.form.type.slot.button' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\SlotButtonType A Mautic\CoreBundle\Form\Type\SlotButtonType instance
     */
    protected function getMautic_Form_Type_Slot_ButtonService()
    {
        return $this->services['mautic.form.type.slot.button'] = new \Mautic\CoreBundle\Form\Type\SlotButtonType();
    }

    /**
     * Gets the 'mautic.form.type.slot.codemode' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\SlotCodeModeType A Mautic\CoreBundle\Form\Type\SlotCodeModeType instance
     */
    protected function getMautic_Form_Type_Slot_CodemodeService()
    {
        return $this->services['mautic.form.type.slot.codemode'] = new \Mautic\CoreBundle\Form\Type\SlotCodeModeType();
    }

    /**
     * Gets the 'mautic.form.type.slot.image' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\SlotImageType A Mautic\CoreBundle\Form\Type\SlotImageType instance
     */
    protected function getMautic_Form_Type_Slot_ImageService()
    {
        return $this->services['mautic.form.type.slot.image'] = new \Mautic\CoreBundle\Form\Type\SlotImageType();
    }

    /**
     * Gets the 'mautic.form.type.slot.imagecaption' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\SlotImageCaptionType A Mautic\CoreBundle\Form\Type\SlotImageCaptionType instance
     */
    protected function getMautic_Form_Type_Slot_ImagecaptionService()
    {
        return $this->services['mautic.form.type.slot.imagecaption'] = new \Mautic\CoreBundle\Form\Type\SlotImageCaptionType();
    }

    /**
     * Gets the 'mautic.form.type.slot.imagecard' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\SlotImageCardType A Mautic\CoreBundle\Form\Type\SlotImageCardType instance
     */
    protected function getMautic_Form_Type_Slot_ImagecardService()
    {
        return $this->services['mautic.form.type.slot.imagecard'] = new \Mautic\CoreBundle\Form\Type\SlotImageCardType();
    }

    /**
     * Gets the 'mautic.form.type.slot.separator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\SlotSeparatorType A Mautic\CoreBundle\Form\Type\SlotSeparatorType instance
     */
    protected function getMautic_Form_Type_Slot_SeparatorService()
    {
        return $this->services['mautic.form.type.slot.separator'] = new \Mautic\CoreBundle\Form\Type\SlotSeparatorType();
    }

    /**
     * Gets the 'mautic.form.type.slot.socialfollow' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\SlotSocialFollowType A Mautic\CoreBundle\Form\Type\SlotSocialFollowType instance
     */
    protected function getMautic_Form_Type_Slot_SocialfollowService()
    {
        return $this->services['mautic.form.type.slot.socialfollow'] = new \Mautic\CoreBundle\Form\Type\SlotSocialFollowType();
    }

    /**
     * Gets the 'mautic.form.type.slot.socialshare' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\SlotSocialShareType A Mautic\CoreBundle\Form\Type\SlotSocialShareType instance
     */
    protected function getMautic_Form_Type_Slot_SocialshareService()
    {
        return $this->services['mautic.form.type.slot.socialshare'] = new \Mautic\CoreBundle\Form\Type\SlotSocialShareType();
    }

    /**
     * Gets the 'mautic.form.type.sms' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\SmsBundle\Form\Type\SmsType A Mautic\SmsBundle\Form\Type\SmsType instance
     */
    protected function getMautic_Form_Type_SmsService()
    {
        return $this->services['mautic.form.type.sms'] = new \Mautic\SmsBundle\Form\Type\SmsType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.sms_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\SmsBundle\Form\Type\SmsListType A Mautic\SmsBundle\Form\Type\SmsListType instance
     */
    protected function getMautic_Form_Type_SmsListService()
    {
        return $this->services['mautic.form.type.sms_list'] = new \Mautic\SmsBundle\Form\Type\SmsListType();
    }

    /**
     * Gets the 'mautic.form.type.smsconfig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\SmsBundle\Form\Type\ConfigType A Mautic\SmsBundle\Form\Type\ConfigType instance
     */
    protected function getMautic_Form_Type_SmsconfigService()
    {
        return $this->services['mautic.form.type.smsconfig'] = new \Mautic\SmsBundle\Form\Type\ConfigType();
    }

    /**
     * Gets the 'mautic.form.type.smssend_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\SmsBundle\Form\Type\SmsSendType A Mautic\SmsBundle\Form\Type\SmsSendType instance
     */
    protected function getMautic_Form_Type_SmssendListService()
    {
        return $this->services['mautic.form.type.smssend_list'] = new \Mautic\SmsBundle\Form\Type\SmsSendType($this->get('router'));
    }

    /**
     * Gets the 'mautic.form.type.social.facebook' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Form\Type\FacebookType A MauticPlugin\MauticSocialBundle\Form\Type\FacebookType instance
     */
    protected function getMautic_Form_Type_Social_FacebookService()
    {
        return $this->services['mautic.form.type.social.facebook'] = new \MauticPlugin\MauticSocialBundle\Form\Type\FacebookType();
    }

    /**
     * Gets the 'mautic.form.type.social.googleplus' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Form\Type\GooglePlusType A MauticPlugin\MauticSocialBundle\Form\Type\GooglePlusType instance
     */
    protected function getMautic_Form_Type_Social_GoogleplusService()
    {
        return $this->services['mautic.form.type.social.googleplus'] = new \MauticPlugin\MauticSocialBundle\Form\Type\GooglePlusType();
    }

    /**
     * Gets the 'mautic.form.type.social.linkedin' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Form\Type\LinkedInType A MauticPlugin\MauticSocialBundle\Form\Type\LinkedInType instance
     */
    protected function getMautic_Form_Type_Social_LinkedinService()
    {
        return $this->services['mautic.form.type.social.linkedin'] = new \MauticPlugin\MauticSocialBundle\Form\Type\LinkedInType();
    }

    /**
     * Gets the 'mautic.form.type.social.sociallogin' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Form\Type\SocialLoginType A MauticPlugin\MauticSocialBundle\Form\Type\SocialLoginType instance
     */
    protected function getMautic_Form_Type_Social_SocialloginService()
    {
        return $this->services['mautic.form.type.social.sociallogin'] = new \MauticPlugin\MauticSocialBundle\Form\Type\SocialLoginType($this->get('mautic.helper.integration'), $this->get('mautic.form.model.form'), $this->get('mautic.helper.core_parameters'));
    }

    /**
     * Gets the 'mautic.form.type.social.twitter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Form\Type\TwitterType A MauticPlugin\MauticSocialBundle\Form\Type\TwitterType instance
     */
    protected function getMautic_Form_Type_Social_TwitterService()
    {
        return $this->services['mautic.form.type.social.twitter'] = new \MauticPlugin\MauticSocialBundle\Form\Type\TwitterType();
    }

    /**
     * Gets the 'mautic.form.type.sortablelist' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\SortableListType A Mautic\CoreBundle\Form\Type\SortableListType instance
     */
    protected function getMautic_Form_Type_SortablelistService()
    {
        return $this->services['mautic.form.type.sortablelist'] = new \Mautic\CoreBundle\Form\Type\SortableListType();
    }

    /**
     * Gets the 'mautic.form.type.spacer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\SpacerType A Mautic\CoreBundle\Form\Type\SpacerType instance
     */
    protected function getMautic_Form_Type_SpacerService()
    {
        return $this->services['mautic.form.type.spacer'] = new \Mautic\CoreBundle\Form\Type\SpacerType();
    }

    /**
     * Gets the 'mautic.form.type.standalone_button' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\StandAloneButtonType A Mautic\CoreBundle\Form\Type\StandAloneButtonType instance
     */
    protected function getMautic_Form_Type_StandaloneButtonService()
    {
        return $this->services['mautic.form.type.standalone_button'] = new \Mautic\CoreBundle\Form\Type\StandAloneButtonType();
    }

    /**
     * Gets the 'mautic.form.type.table_order' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ReportBundle\Form\Type\TableOrderType A Mautic\ReportBundle\Form\Type\TableOrderType instance
     */
    protected function getMautic_Form_Type_TableOrderService()
    {
        return $this->services['mautic.form.type.table_order'] = new \Mautic\ReportBundle\Form\Type\TableOrderType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.tel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\TelType A Mautic\CoreBundle\Form\Type\TelType instance
     */
    protected function getMautic_Form_Type_TelService()
    {
        return $this->services['mautic.form.type.tel'] = new \Mautic\CoreBundle\Form\Type\TelType();
    }

    /**
     * Gets the 'mautic.form.type.theme.upload' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\ThemeUploadType A Mautic\CoreBundle\Form\Type\ThemeUploadType instance
     */
    protected function getMautic_Form_Type_Theme_UploadService()
    {
        return $this->services['mautic.form.type.theme.upload'] = new \Mautic\CoreBundle\Form\Type\ThemeUploadType();
    }

    /**
     * Gets the 'mautic.form.type.theme_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\ThemeListType A Mautic\CoreBundle\Form\Type\ThemeListType instance
     */
    protected function getMautic_Form_Type_ThemeListService()
    {
        return $this->services['mautic.form.type.theme_list'] = new \Mautic\CoreBundle\Form\Type\ThemeListType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.updatelead_action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Type\UpdateLeadActionType A Mautic\LeadBundle\Form\Type\UpdateLeadActionType instance
     */
    protected function getMautic_Form_Type_UpdateleadActionService()
    {
        return $this->services['mautic.form.type.updatelead_action'] = new \Mautic\LeadBundle\Form\Type\UpdateLeadActionType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.form.type.user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Form\Type\UserType A Mautic\UserBundle\Form\Type\UserType instance
     */
    protected function getMautic_Form_Type_UserService()
    {
        return $this->services['mautic.form.type.user'] = new \Mautic\UserBundle\Form\Type\UserType($this->get('translator'), $this->get('doctrine.orm.default_entity_manager'), $this->get('mautic.user.model.user'), $this->get('mautic.helper.language'), $this->get('mautic.helper.core_parameters'));
    }

    /**
     * Gets the 'mautic.form.type.user_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Form\Type\UserListType A Mautic\UserBundle\Form\Type\UserListType instance
     */
    protected function getMautic_Form_Type_UserListService()
    {
        return $this->services['mautic.form.type.user_list'] = new \Mautic\UserBundle\Form\Type\UserListType($this->get('mautic.user.model.user'));
    }

    /**
     * Gets the 'mautic.form.type.userconfig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Form\Type\ConfigType A Mautic\UserBundle\Form\Type\ConfigType instance
     */
    protected function getMautic_Form_Type_UserconfigService()
    {
        return $this->services['mautic.form.type.userconfig'] = new \Mautic\UserBundle\Form\Type\ConfigType($this->get('mautic.helper.core_parameters'));
    }

    /**
     * Gets the 'mautic.form.type.webhook' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\WebhookBundle\Form\Type\WebhookType A Mautic\WebhookBundle\Form\Type\WebhookType instance
     */
    protected function getMautic_Form_Type_WebhookService()
    {
        return $this->services['mautic.form.type.webhook'] = new \Mautic\WebhookBundle\Form\Type\WebhookType($this->get('translator'));
    }

    /**
     * Gets the 'mautic.form.type.webhookconfig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\WebhookBundle\Form\Type\ConfigType A Mautic\WebhookBundle\Form\Type\ConfigType instance
     */
    protected function getMautic_Form_Type_WebhookconfigService()
    {
        return $this->services['mautic.form.type.webhookconfig'] = new \Mautic\WebhookBundle\Form\Type\ConfigType();
    }

    /**
     * Gets the 'mautic.form.type.yesno_button_group' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Form\Type\YesNoButtonGroupType A Mautic\CoreBundle\Form\Type\YesNoButtonGroupType instance
     */
    protected function getMautic_Form_Type_YesnoButtonGroupService()
    {
        return $this->services['mautic.form.type.yesno_button_group'] = new \Mautic\CoreBundle\Form\Type\YesNoButtonGroupType();
    }

    /**
     * Gets the 'mautic.form.webhook.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\EventListener\WebhookSubscriber A Mautic\FormBundle\EventListener\WebhookSubscriber instance
     */
    protected function getMautic_Form_Webhook_SubscriberService()
    {
        $this->services['mautic.form.webhook.subscriber'] = $instance = new \Mautic\FormBundle\EventListener\WebhookSubscriber();

        $instance->setWebhookModel($this->get('mautic.webhook.model.webhook'));
        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.helper.assetgeneration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\AssetGenerationHelper A Mautic\CoreBundle\Helper\AssetGenerationHelper instance
     */
    protected function getMautic_Helper_AssetgenerationService()
    {
        return $this->services['mautic.helper.assetgeneration'] = new \Mautic\CoreBundle\Helper\AssetGenerationHelper($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.helper.bundle' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\BundleHelper A Mautic\CoreBundle\Helper\BundleHelper instance
     */
    protected function getMautic_Helper_BundleService()
    {
        return $this->services['mautic.helper.bundle'] = new \Mautic\CoreBundle\Helper\BundleHelper($this->get('mautic.helper.core_parameters'), $this->get('kernel'));
    }

    /**
     * Gets the 'mautic.helper.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\CacheHelper A Mautic\CoreBundle\Helper\CacheHelper instance
     */
    protected function getMautic_Helper_CacheService()
    {
        return $this->services['mautic.helper.cache'] = new \Mautic\CoreBundle\Helper\CacheHelper($this->get('kernel'));
    }

    /**
     * Gets the 'mautic.helper.cache_storage' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\CacheStorageHelper A Mautic\CoreBundle\Helper\CacheStorageHelper instance
     */
    protected function getMautic_Helper_CacheStorageService()
    {
        return $this->services['mautic.helper.cache_storage'] = new \Mautic\CoreBundle\Helper\CacheStorageHelper('db', NULL, $this->get('doctrine.dbal.default_connection'), __DIR__);
    }

    /**
     * Gets the 'mautic.helper.cookie' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\CookieHelper A Mautic\CoreBundle\Helper\CookieHelper instance
     */
    protected function getMautic_Helper_CookieService()
    {
        return $this->services['mautic.helper.cookie'] = new \Mautic\CoreBundle\Helper\CookieHelper('/', '', NULL, false, $this->get('request_stack'));
    }

    /**
     * Gets the 'mautic.helper.core_parameters' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\CoreParametersHelper A Mautic\CoreBundle\Helper\CoreParametersHelper instance
     */
    protected function getMautic_Helper_CoreParametersService()
    {
        return $this->services['mautic.helper.core_parameters'] = new \Mautic\CoreBundle\Helper\CoreParametersHelper($this->get('kernel'));
    }

    /**
     * Gets the 'mautic.helper.dynamiccontent' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\DynamicContentBundle\Helper\DynamicContentHelper A Mautic\DynamicContentBundle\Helper\DynamicContentHelper instance
     */
    protected function getMautic_Helper_DynamiccontentService()
    {
        return $this->services['mautic.helper.dynamiccontent'] = new \Mautic\DynamicContentBundle\Helper\DynamicContentHelper($this->get('mautic.dynamiccontent.model.dynamiccontent'), $this->get('mautic.campaign.model.event'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'mautic.helper.encryption' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\EncryptionHelper A Mautic\CoreBundle\Helper\EncryptionHelper instance
     */
    protected function getMautic_Helper_EncryptionService()
    {
        return $this->services['mautic.helper.encryption'] = new \Mautic\CoreBundle\Helper\EncryptionHelper($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.helper.form.field_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Helper\FormFieldHelper A Mautic\FormBundle\Helper\FormFieldHelper instance
     */
    protected function getMautic_Helper_Form_FieldHelperService()
    {
        return $this->services['mautic.helper.form.field_helper'] = new \Mautic\FormBundle\Helper\FormFieldHelper($this->get('translator'), $this->get('validator'));
    }

    /**
     * Gets the 'mautic.helper.integration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PluginBundle\Helper\IntegrationHelper A Mautic\PluginBundle\Helper\IntegrationHelper instance
     */
    protected function getMautic_Helper_IntegrationService()
    {
        return $this->services['mautic.helper.integration'] = new \Mautic\PluginBundle\Helper\IntegrationHelper($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.helper.ip_lookup' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\IpLookupHelper A Mautic\CoreBundle\Helper\IpLookupHelper instance
     */
    protected function getMautic_Helper_IpLookupService()
    {
        return $this->services['mautic.helper.ip_lookup'] = new \Mautic\CoreBundle\Helper\IpLookupHelper($this->get('request_stack'), $this->get('doctrine.orm.default_entity_manager'), $this->get('mautic.helper.core_parameters'), $this->get('mautic.ip_lookup'));
    }

    /**
     * Gets the 'mautic.helper.language' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\LanguageHelper A Mautic\CoreBundle\Helper\LanguageHelper instance
     */
    protected function getMautic_Helper_LanguageService()
    {
        return $this->services['mautic.helper.language'] = new \Mautic\CoreBundle\Helper\LanguageHelper($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.helper.mailbox' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\MonitoredEmail\Mailbox A Mautic\EmailBundle\MonitoredEmail\Mailbox instance
     */
    protected function getMautic_Helper_MailboxService()
    {
        return $this->services['mautic.helper.mailbox'] = new \Mautic\EmailBundle\MonitoredEmail\Mailbox($this->get('mautic.helper.core_parameters'), $this->get('mautic.helper.paths'));
    }

    /**
     * Gets the 'mautic.helper.mailer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Helper\MailHelper A Mautic\EmailBundle\Helper\MailHelper instance
     */
    protected function getMautic_Helper_MailerService()
    {
        return $this->services['mautic.helper.mailer'] = new \Mautic\EmailBundle\Helper\MailHelper($this->get('mautic.factory'), $this->get('swiftmailer.mailer.default'));
    }

    /**
     * Gets the 'mautic.helper.menu' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Menu\MenuHelper A Mautic\CoreBundle\Menu\MenuHelper instance
     */
    protected function getMautic_Helper_MenuService()
    {
        return $this->services['mautic.helper.menu'] = new \Mautic\CoreBundle\Menu\MenuHelper($this->get('mautic.security'), $this->get('request_stack'), array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
    }

    /**
     * Gets the 'mautic.helper.message' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Helper\MessageHelper A Mautic\EmailBundle\Helper\MessageHelper instance
     */
    protected function getMautic_Helper_MessageService()
    {
        return $this->services['mautic.helper.message'] = new \Mautic\EmailBundle\Helper\MessageHelper($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.helper.notification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\NotificationBundle\Helper\NotificationHelper A Mautic\NotificationBundle\Helper\NotificationHelper instance
     */
    protected function getMautic_Helper_NotificationService()
    {
        return $this->services['mautic.helper.notification'] = new \Mautic\NotificationBundle\Helper\NotificationHelper($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.helper.paths' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\PathsHelper A Mautic\CoreBundle\Helper\PathsHelper instance
     */
    protected function getMautic_Helper_PathsService()
    {
        return $this->services['mautic.helper.paths'] = new \Mautic\CoreBundle\Helper\PathsHelper($this->get('mautic.helper.user'), $this->get('mautic.helper.core_parameters'));
    }

    /**
     * Gets the 'mautic.helper.phone_number' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\PhoneNumberHelper A Mautic\CoreBundle\Helper\PhoneNumberHelper instance
     */
    protected function getMautic_Helper_PhoneNumberService()
    {
        return $this->services['mautic.helper.phone_number'] = new \Mautic\CoreBundle\Helper\PhoneNumberHelper();
    }

    /**
     * Gets the 'mautic.helper.sms' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\SmsBundle\Helper\SmsHelper A Mautic\SmsBundle\Helper\SmsHelper instance
     */
    protected function getMautic_Helper_SmsService()
    {
        return $this->services['mautic.helper.sms'] = new \Mautic\SmsBundle\Helper\SmsHelper($this->get('doctrine.orm.default_entity_manager'), $this->get('mautic.lead.model.lead'), $this->get('mautic.helper.phone_number'), $this->get('mautic.sms.model.sms'), NULL);
    }

    /**
     * Gets the 'mautic.helper.template.analytics' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\AnalyticsHelper A Mautic\CoreBundle\Templating\Helper\AnalyticsHelper instance
     */
    protected function getMautic_Helper_Template_AnalyticsService()
    {
        return $this->services['mautic.helper.template.analytics'] = new \Mautic\CoreBundle\Templating\Helper\AnalyticsHelper($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.helper.template.avatar' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Templating\Helper\AvatarHelper A Mautic\LeadBundle\Templating\Helper\AvatarHelper instance
     */
    protected function getMautic_Helper_Template_AvatarService()
    {
        return $this->services['mautic.helper.template.avatar'] = new \Mautic\LeadBundle\Templating\Helper\AvatarHelper($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.helper.template.button' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\ButtonHelper A Mautic\CoreBundle\Templating\Helper\ButtonHelper instance
     */
    protected function getMautic_Helper_Template_ButtonService()
    {
        return $this->services['mautic.helper.template.button'] = new \Mautic\CoreBundle\Templating\Helper\ButtonHelper($this->get('templating'), $this->get('translator'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'mautic.helper.template.canvas' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\SidebarCanvasHelper A Mautic\CoreBundle\Templating\Helper\SidebarCanvasHelper instance
     */
    protected function getMautic_Helper_Template_CanvasService()
    {
        return $this->services['mautic.helper.template.canvas'] = new \Mautic\CoreBundle\Templating\Helper\SidebarCanvasHelper($this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'mautic.helper.template.content' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\ContentHelper A Mautic\CoreBundle\Templating\Helper\ContentHelper instance
     */
    protected function getMautic_Helper_Template_ContentService()
    {
        return $this->services['mautic.helper.template.content'] = new \Mautic\CoreBundle\Templating\Helper\ContentHelper($this->get('templating'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'mautic.helper.template.date' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\DateHelper A Mautic\CoreBundle\Templating\Helper\DateHelper instance
     */
    protected function getMautic_Helper_Template_DateService()
    {
        return $this->services['mautic.helper.template.date'] = new \Mautic\CoreBundle\Templating\Helper\DateHelper('F j, Y g:i a T', 'D, M d', 'F j, Y', 'g:i a', $this->get('translator'));
    }

    /**
     * Gets the 'mautic.helper.template.exception' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\ExceptionHelper A Mautic\CoreBundle\Templating\Helper\ExceptionHelper instance
     */
    protected function getMautic_Helper_Template_ExceptionService()
    {
        return $this->services['mautic.helper.template.exception'] = new \Mautic\CoreBundle\Templating\Helper\ExceptionHelper($this->targetDirs[2]);
    }

    /**
     * Gets the 'mautic.helper.template.formatter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\FormatterHelper A Mautic\CoreBundle\Templating\Helper\FormatterHelper instance
     */
    protected function getMautic_Helper_Template_FormatterService()
    {
        return $this->services['mautic.helper.template.formatter'] = new \Mautic\CoreBundle\Templating\Helper\FormatterHelper($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.helper.template.gravatar' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\GravatarHelper A Mautic\CoreBundle\Templating\Helper\GravatarHelper instance
     */
    protected function getMautic_Helper_Template_GravatarService()
    {
        return $this->services['mautic.helper.template.gravatar'] = new \Mautic\CoreBundle\Templating\Helper\GravatarHelper($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.helper.template.mautibot' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\MautibotHelper A Mautic\CoreBundle\Templating\Helper\MautibotHelper instance
     */
    protected function getMautic_Helper_Template_MautibotService()
    {
        return $this->services['mautic.helper.template.mautibot'] = new \Mautic\CoreBundle\Templating\Helper\MautibotHelper();
    }

    /**
     * Gets the 'mautic.helper.template.menu' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\MenuHelper A Mautic\CoreBundle\Templating\Helper\MenuHelper instance
     */
    protected function getMautic_Helper_Template_MenuService()
    {
        return $this->services['mautic.helper.template.menu'] = new \Mautic\CoreBundle\Templating\Helper\MenuHelper($this->get('knp_menu.helper'));
    }

    /**
     * Gets the 'mautic.helper.template.security' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\SecurityHelper A Mautic\CoreBundle\Templating\Helper\SecurityHelper instance
     */
    protected function getMautic_Helper_Template_SecurityService()
    {
        return $this->services['mautic.helper.template.security'] = new \Mautic\CoreBundle\Templating\Helper\SecurityHelper($this->get('mautic.security'), $this->get('request_stack'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'mautic.helper.templating' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\TemplatingHelper A Mautic\CoreBundle\Helper\TemplatingHelper instance
     */
    protected function getMautic_Helper_TemplatingService()
    {
        return $this->services['mautic.helper.templating'] = new \Mautic\CoreBundle\Helper\TemplatingHelper($this->get('kernel'));
    }

    /**
     * Gets the 'mautic.helper.theme' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\ThemeHelper A Mautic\CoreBundle\Helper\ThemeHelper instance
     */
    protected function getMautic_Helper_ThemeService()
    {
        $this->services['mautic.helper.theme'] = $instance = new \Mautic\CoreBundle\Helper\ThemeHelper($this->get('mautic.helper.paths'), $this->get('mautic.helper.templating'), $this->get('translator'));

        $instance->setDefaultTheme('Mauve');

        return $instance;
    }

    /**
     * Gets the 'mautic.helper.update' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\UpdateHelper A Mautic\CoreBundle\Helper\UpdateHelper instance
     */
    protected function getMautic_Helper_UpdateService()
    {
        return $this->services['mautic.helper.update'] = new \Mautic\CoreBundle\Helper\UpdateHelper($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.helper.url' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\UrlHelper A Mautic\CoreBundle\Helper\UrlHelper instance
     */
    protected function getMautic_Helper_UrlService()
    {
        return $this->services['mautic.helper.url'] = new \Mautic\CoreBundle\Helper\UrlHelper($this->get('mautic.http.connector'), NULL, $this->get('monolog.logger.mautic'));
    }

    /**
     * Gets the 'mautic.helper.user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Helper\UserHelper A Mautic\CoreBundle\Helper\UserHelper instance
     */
    protected function getMautic_Helper_UserService()
    {
        return $this->services['mautic.helper.user'] = new \Mautic\CoreBundle\Helper\UserHelper($this->get('security.token_storage'));
    }

    /**
     * Gets the 'mautic.http.connector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Joomla\Http\Http A Joomla\Http\Http instance
     */
    protected function getMautic_Http_ConnectorService()
    {
        return $this->services['mautic.http.connector'] = \Joomla\Http\HttpFactory::getHttp();
    }

    /**
     * Gets the 'mautic.install.configurator.step.check' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\InstallBundle\Configurator\Step\CheckStep A Mautic\InstallBundle\Configurator\Step\CheckStep instance
     */
    protected function getMautic_Install_Configurator_Step_CheckService()
    {
        return $this->services['mautic.install.configurator.step.check'] = new \Mautic\InstallBundle\Configurator\Step\CheckStep($this->get('mautic.configurator'), $this->targetDirs[2], $this->get('request_stack'));
    }

    /**
     * Gets the 'mautic.install.configurator.step.doctrine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\InstallBundle\Configurator\Step\DoctrineStep A Mautic\InstallBundle\Configurator\Step\DoctrineStep instance
     */
    protected function getMautic_Install_Configurator_Step_DoctrineService()
    {
        return $this->services['mautic.install.configurator.step.doctrine'] = new \Mautic\InstallBundle\Configurator\Step\DoctrineStep($this->get('mautic.configurator'));
    }

    /**
     * Gets the 'mautic.install.configurator.step.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\InstallBundle\Configurator\Step\EmailStep A Mautic\InstallBundle\Configurator\Step\EmailStep instance
     */
    protected function getMautic_Install_Configurator_Step_EmailService()
    {
        return $this->services['mautic.install.configurator.step.email'] = new \Mautic\InstallBundle\Configurator\Step\EmailStep($this->get('session'));
    }

    /**
     * Gets the 'mautic.install.configurator.step.user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\InstallBundle\Configurator\Step\UserStep A Mautic\InstallBundle\Configurator\Step\UserStep instance
     */
    protected function getMautic_Install_Configurator_Step_UserService()
    {
        return $this->services['mautic.install.configurator.step.user'] = new \Mautic\InstallBundle\Configurator\Step\UserStep($this->get('session'));
    }

    /**
     * Gets the 'mautic.ip_lookup' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\IpLookup\AbstractLookup A Mautic\CoreBundle\IpLookup\AbstractLookup instance
     */
    protected function getMautic_IpLookupService()
    {
        return $this->services['mautic.ip_lookup'] = $this->get('mautic.ip_lookup.factory')->getService('maxmind_download', '', array(), $this->get('mautic.http.connector'));
    }

    /**
     * Gets the 'mautic.ip_lookup.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Factory\IpLookupFactory A Mautic\CoreBundle\Factory\IpLookupFactory instance
     */
    protected function getMautic_IpLookup_FactoryService()
    {
        return $this->services['mautic.ip_lookup.factory'] = new \Mautic\CoreBundle\Factory\IpLookupFactory(array('freegeoip' => array('display_name' => 'Freegeoip.net', 'class' => 'Mautic\\CoreBundle\\IpLookup\\FreegeoipLookup'), 'geobytes' => array('display_name' => 'Geobytes', 'class' => 'Mautic\\CoreBundle\\IpLookup\\GeobytesLookup'), 'geoips' => array('display_name' => 'GeoIPs', 'class' => 'Mautic\\CoreBundle\\IpLookup\\GeoipsLookup'), 'ipinfodb' => array('display_name' => 'IPInfoDB', 'class' => 'Mautic\\CoreBundle\\IpLookup\\IpinfodbLookup'), 'maxmind_country' => array('display_name' => 'MaxMind - Country Geolocation', 'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindCountryLookup'), 'maxmind_omni' => array('display_name' => 'MaxMind - Insights (formerly Omni]', 'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindOmniLookup'), 'maxmind_precision' => array('display_name' => 'MaxMind - GeoIP2 Precision', 'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindPrecisionLookup'), 'maxmind_download' => array('display_name' => 'MaxMind - GeoLite2 City Download', 'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindDownloadLookup'), 'telize' => array('display_name' => 'Telize', 'class' => 'Mautic\\CoreBundle\\IpLookup\\TelizeLookup'), 'ip2loctionlocal' => array('display_name' => 'IP2Location Local Bin File', 'class' => 'Mautic\\CoreBundle\\IpLookup\\IP2LocationBinLookup'), 'ip2loctionapi' => array('display_name' => 'IP2Location Web Service', 'class' => 'Mautic\\CoreBundle\\IpLookup\\IP2LocationAPILookup')), $this->get('monolog.logger.mautic'), $this->get('mautic.http.connector'), __DIR__);
    }

    /**
     * Gets the 'mautic.kernel.listener.command_exception' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\EventListener\ConsoleExceptionListener A Mautic\CoreBundle\EventListener\ConsoleExceptionListener instance
     */
    protected function getMautic_Kernel_Listener_CommandExceptionService()
    {
        return $this->services['mautic.kernel.listener.command_exception'] = new \Mautic\CoreBundle\EventListener\ConsoleExceptionListener($this->get('monolog.logger.mautic'));
    }

    /**
     * Gets the 'mautic.kernel.listener.command_terminate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\EventListener\ConsoleTerminateListener A Mautic\CoreBundle\EventListener\ConsoleTerminateListener instance
     */
    protected function getMautic_Kernel_Listener_CommandTerminateService()
    {
        return $this->services['mautic.kernel.listener.command_terminate'] = new \Mautic\CoreBundle\EventListener\ConsoleTerminateListener($this->get('monolog.logger.mautic'));
    }

    /**
     * Gets the 'mautic.lead.button.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\ButtonSubscriber A Mautic\LeadBundle\EventListener\ButtonSubscriber instance
     */
    protected function getMautic_Lead_Button_SubscriberService()
    {
        $this->services['mautic.lead.button.subscriber'] = $instance = new \Mautic\LeadBundle\EventListener\ButtonSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.calendarbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\CalendarSubscriber A Mautic\LeadBundle\EventListener\CalendarSubscriber instance
     */
    protected function getMautic_Lead_Calendarbundle_SubscriberService()
    {
        $this->services['mautic.lead.calendarbundle.subscriber'] = $instance = new \Mautic\LeadBundle\EventListener\CalendarSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.campaignbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\CampaignSubscriber A Mautic\LeadBundle\EventListener\CampaignSubscriber instance
     */
    protected function getMautic_Lead_Campaignbundle_SubscriberService()
    {
        $this->services['mautic.lead.campaignbundle.subscriber'] = $instance = new \Mautic\LeadBundle\EventListener\CampaignSubscriber($this->get('mautic.helper.ip_lookup'), $this->get('mautic.lead.model.lead'), $this->get('mautic.lead.model.field'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.constraint.alias' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Validator\Constraints\UniqueUserAliasValidator A Mautic\LeadBundle\Form\Validator\Constraints\UniqueUserAliasValidator instance
     */
    protected function getMautic_Lead_Constraint_AliasService()
    {
        return $this->services['mautic.lead.constraint.alias'] = new \Mautic\LeadBundle\Form\Validator\Constraints\UniqueUserAliasValidator($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.lead.dashboard.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\DashboardSubscriber A Mautic\LeadBundle\EventListener\DashboardSubscriber instance
     */
    protected function getMautic_Lead_Dashboard_SubscriberService()
    {
        $this->services['mautic.lead.dashboard.subscriber'] = $instance = new \Mautic\LeadBundle\EventListener\DashboardSubscriber($this->get('mautic.lead.model.lead'), $this->get('mautic.lead.model.list'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.doctrine.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\DoctrineSubscriber A Mautic\LeadBundle\EventListener\DoctrineSubscriber instance
     */
    protected function getMautic_Lead_Doctrine_SubscriberService()
    {
        return $this->services['mautic.lead.doctrine.subscriber'] = new \Mautic\LeadBundle\EventListener\DoctrineSubscriber($this->get('monolog.logger.mautic'));
    }

    /**
     * Gets the 'mautic.lead.emailbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\EmailSubscriber A Mautic\LeadBundle\EventListener\EmailSubscriber instance
     */
    protected function getMautic_Lead_Emailbundle_SubscriberService()
    {
        $this->services['mautic.lead.emailbundle.subscriber'] = $instance = new \Mautic\LeadBundle\EventListener\EmailSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.formbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\FormSubscriber A Mautic\LeadBundle\EventListener\FormSubscriber instance
     */
    protected function getMautic_Lead_Formbundle_SubscriberService()
    {
        $this->services['mautic.lead.formbundle.subscriber'] = $instance = new \Mautic\LeadBundle\EventListener\FormSubscriber($this->get('mautic.email.model.email'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.maintenance.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\MaintenanceSubscriber A Mautic\LeadBundle\EventListener\MaintenanceSubscriber instance
     */
    protected function getMautic_Lead_Maintenance_SubscriberService()
    {
        $this->services['mautic.lead.maintenance.subscriber'] = $instance = new \Mautic\LeadBundle\EventListener\MaintenanceSubscriber($this->get('doctrine.dbal.default_connection'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.model.company' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Model\CompanyModel A Mautic\LeadBundle\Model\CompanyModel instance
     */
    protected function getMautic_Lead_Model_CompanyService()
    {
        $this->services['mautic.lead.model.company'] = $instance = new \Mautic\LeadBundle\Model\CompanyModel($this->get('mautic.lead.model.field'), $this->get('session'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.model.device' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Model\DeviceModel A Mautic\LeadBundle\Model\DeviceModel instance
     */
    protected function getMautic_Lead_Model_DeviceService()
    {
        $this->services['mautic.lead.model.device'] = $instance = new \Mautic\LeadBundle\Model\DeviceModel();

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.model.field' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Model\FieldModel A Mautic\LeadBundle\Model\FieldModel instance
     */
    protected function getMautic_Lead_Model_FieldService()
    {
        $this->services['mautic.lead.model.field'] = $instance = new \Mautic\LeadBundle\Model\FieldModel($this->get('mautic.schema.helper.factory'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.model.lead' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Model\LeadModel A Mautic\LeadBundle\Model\LeadModel instance
     */
    protected function getMautic_Lead_Model_LeadService()
    {
        $this->services['mautic.lead.model.lead'] = $instance = new \Mautic\LeadBundle\Model\LeadModel($this->get('request_stack'), $this->get('mautic.helper.cookie'), $this->get('mautic.helper.ip_lookup'), $this->get('mautic.helper.paths'), $this->get('mautic.helper.integration'), $this->get('mautic.lead.model.field'), $this->get('mautic.lead.model.list'), $this->get('form.factory'), $this->get('mautic.lead.model.company'), $this->get('mautic.category.model.category'), $this->get('mautic.channel.helper.channel_list'), false);

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.model.list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Model\ListModel A Mautic\LeadBundle\Model\ListModel instance
     */
    protected function getMautic_Lead_Model_ListService()
    {
        $this->services['mautic.lead.model.list'] = $instance = new \Mautic\LeadBundle\Model\ListModel($this->get('mautic.helper.core_parameters'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.model.note' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Model\NoteModel A Mautic\LeadBundle\Model\NoteModel instance
     */
    protected function getMautic_Lead_Model_NoteService()
    {
        $this->services['mautic.lead.model.note'] = $instance = new \Mautic\LeadBundle\Model\NoteModel();

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setSession($this->get('session'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.pointbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\PointSubscriber A Mautic\LeadBundle\EventListener\PointSubscriber instance
     */
    protected function getMautic_Lead_Pointbundle_SubscriberService()
    {
        $this->services['mautic.lead.pointbundle.subscriber'] = $instance = new \Mautic\LeadBundle\EventListener\PointSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.reportbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\ReportSubscriber A Mautic\LeadBundle\EventListener\ReportSubscriber instance
     */
    protected function getMautic_Lead_Reportbundle_SubscriberService()
    {
        $this->services['mautic.lead.reportbundle.subscriber'] = $instance = new \Mautic\LeadBundle\EventListener\ReportSubscriber($this->get('mautic.lead.model.list'), $this->get('mautic.lead.model.field'), $this->get('mautic.lead.model.lead'), $this->get('mautic.stage.model.stage'), $this->get('mautic.campaign.model.campaign'), $this->get('mautic.user.model.user'), $this->get('mautic.lead.model.company'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.search.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\SearchSubscriber A Mautic\LeadBundle\EventListener\SearchSubscriber instance
     */
    protected function getMautic_Lead_Search_SubscriberService()
    {
        $this->services['mautic.lead.search.subscriber'] = $instance = new \Mautic\LeadBundle\EventListener\SearchSubscriber($this->get('mautic.lead.model.lead'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.stats.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\StatsSubscriber A Mautic\LeadBundle\EventListener\StatsSubscriber instance
     */
    protected function getMautic_Lead_Stats_SubscriberService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        $this->services['mautic.lead.stats.subscriber'] = $instance = new \Mautic\LeadBundle\EventListener\StatsSubscriber($a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($a);
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\LeadSubscriber A Mautic\LeadBundle\EventListener\LeadSubscriber instance
     */
    protected function getMautic_Lead_SubscriberService()
    {
        $this->services['mautic.lead.subscriber'] = $instance = new \Mautic\LeadBundle\EventListener\LeadSubscriber($this->get('mautic.helper.ip_lookup'), $this->get('mautic.core.model.auditlog'));

        $instance->setModelFactory($this->get('mautic.model.factory'));
        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.lead.subscriber.company' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\CompanySubscriber A Mautic\LeadBundle\EventListener\CompanySubscriber instance
     */
    protected function getMautic_Lead_Subscriber_CompanyService()
    {
        $this->services['mautic.lead.subscriber.company'] = $instance = new \Mautic\LeadBundle\EventListener\CompanySubscriber($this->get('mautic.helper.ip_lookup'), $this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.mautictest.model.something' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticTestBundle\Model\SomethingModel A MauticPlugin\MauticTestBundle\Model\SomethingModel instance
     */
    protected function getMautic_Mautictest_Model_SomethingService()
    {
        $this->services['mautic.mautictest.model.something'] = $instance = new \MauticPlugin\MauticTestBundle\Model\SomethingModel();

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.menu.admin' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\MenuItem A Knp\Menu\MenuItem instance
     */
    protected function getMautic_Menu_AdminService()
    {
        return $this->services['mautic.menu.admin'] = $this->get('mautic.menu.builder')->adminMenu();
    }

    /**
     * Gets the 'mautic.menu.builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Menu\MenuBuilder A Mautic\CoreBundle\Menu\MenuBuilder instance
     */
    protected function getMautic_Menu_BuilderService()
    {
        return $this->services['mautic.menu.builder'] = new \Mautic\CoreBundle\Menu\MenuBuilder($this->get('knp_menu.factory'), $this->get('knp_menu.matcher'), $this->get('debug.event_dispatcher'), $this->get('mautic.helper.menu'));
    }

    /**
     * Gets the 'mautic.menu.extra' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\MenuItem A Knp\Menu\MenuItem instance
     */
    protected function getMautic_Menu_ExtraService()
    {
        return $this->services['mautic.menu.extra'] = $this->get('mautic.menu.builder')->extraMenu();
    }

    /**
     * Gets the 'mautic.menu.main' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\MenuItem A Knp\Menu\MenuItem instance
     */
    protected function getMautic_Menu_MainService()
    {
        return $this->services['mautic.menu.main'] = $this->get('mautic.menu.builder')->mainMenu();
    }

    /**
     * Gets the 'mautic.menu.profile' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\MenuItem A Knp\Menu\MenuItem instance
     */
    protected function getMautic_Menu_ProfileService()
    {
        return $this->services['mautic.menu.profile'] = $this->get('mautic.menu.builder')->profileMenu();
    }

    /**
     * Gets the 'mautic.menu_renderer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Menu\MenuRenderer A Mautic\CoreBundle\Menu\MenuRenderer instance
     */
    protected function getMautic_MenuRendererService()
    {
        return $this->services['mautic.menu_renderer'] = new \Mautic\CoreBundle\Menu\MenuRenderer($this->get('knp_menu.matcher'), $this->get('mautic.factory'), 'UTF-8');
    }

    /**
     * Gets the 'mautic.menu_renderer.admin' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Menu\MenuRenderer A Mautic\CoreBundle\Menu\MenuRenderer instance
     */
    protected function getMautic_MenuRenderer_AdminService()
    {
        return $this->services['mautic.menu_renderer.admin'] = new \Mautic\CoreBundle\Menu\MenuRenderer($this->get('knp_menu.matcher'), $this->get('mautic.factory'), 'UTF-8', array('template' => 'MauticCoreBundle:Menu:admin.html.php'));
    }

    /**
     * Gets the 'mautic.menu_renderer.extra' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Menu\MenuRenderer A Mautic\CoreBundle\Menu\MenuRenderer instance
     */
    protected function getMautic_MenuRenderer_ExtraService()
    {
        return $this->services['mautic.menu_renderer.extra'] = new \Mautic\CoreBundle\Menu\MenuRenderer($this->get('knp_menu.matcher'), $this->get('mautic.factory'), 'UTF-8', array('template' => 'MauticCoreBundle:Menu:extra.html.php'));
    }

    /**
     * Gets the 'mautic.menu_renderer.main' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Menu\MenuRenderer A Mautic\CoreBundle\Menu\MenuRenderer instance
     */
    protected function getMautic_MenuRenderer_MainService()
    {
        return $this->services['mautic.menu_renderer.main'] = new \Mautic\CoreBundle\Menu\MenuRenderer($this->get('knp_menu.matcher'), $this->get('mautic.factory'), 'UTF-8', array());
    }

    /**
     * Gets the 'mautic.menu_renderer.profile' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Menu\MenuRenderer A Mautic\CoreBundle\Menu\MenuRenderer instance
     */
    protected function getMautic_MenuRenderer_ProfileService()
    {
        return $this->services['mautic.menu_renderer.profile'] = new \Mautic\CoreBundle\Menu\MenuRenderer($this->get('knp_menu.matcher'), $this->get('mautic.factory'), 'UTF-8', array('template' => 'MauticCoreBundle:Menu:profile_inline.html.php'));
    }

    /**
     * Gets the 'mautic.model.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Factory\ModelFactory A Mautic\CoreBundle\Factory\ModelFactory instance
     */
    protected function getMautic_Model_FactoryService()
    {
        return $this->services['mautic.model.factory'] = new \Mautic\CoreBundle\Factory\ModelFactory($this);
    }

    /**
     * Gets the 'mautic.monolog.fulltrace.formatter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Monolog\Formatter\LineFormatter A Monolog\Formatter\LineFormatter instance
     */
    protected function getMautic_Monolog_Fulltrace_FormatterService()
    {
        $this->services['mautic.monolog.fulltrace.formatter'] = $instance = new \Monolog\Formatter\LineFormatter();

        $instance->includeStacktraces(true);
        $instance->ignoreEmptyContextAndExtra(true);

        return $instance;
    }

    /**
     * Gets the 'mautic.notification.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\NotificationBundle\Api\OneSignalApi A Mautic\NotificationBundle\Api\OneSignalApi instance
     */
    protected function getMautic_Notification_ApiService()
    {
        return $this->services['mautic.notification.api'] = new \Mautic\NotificationBundle\Api\OneSignalApi($this->get('mautic.factory'), $this->get('mautic.http.connector'));
    }

    /**
     * Gets the 'mautic.notification.campaignbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\NotificationBundle\EventListener\CampaignSubscriber A Mautic\NotificationBundle\EventListener\CampaignSubscriber instance
     */
    protected function getMautic_Notification_Campaignbundle_SubscriberService()
    {
        $this->services['mautic.notification.campaignbundle.subscriber'] = $instance = new \Mautic\NotificationBundle\EventListener\CampaignSubscriber($this->get('mautic.helper.core_parameters'), $this->get('mautic.lead.model.lead'), $this->get('mautic.notification.model.notification'), $this->get('mautic.notification.api'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.notification.configbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\NotificationBundle\EventListener\ConfigSubscriber A Mautic\NotificationBundle\EventListener\ConfigSubscriber instance
     */
    protected function getMautic_Notification_Configbundle_SubscriberService()
    {
        $this->services['mautic.notification.configbundle.subscriber'] = $instance = new \Mautic\NotificationBundle\EventListener\ConfigSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.notification.model.notification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\NotificationBundle\Model\NotificationModel A Mautic\NotificationBundle\Model\NotificationModel instance
     */
    protected function getMautic_Notification_Model_NotificationService()
    {
        $this->services['mautic.notification.model.notification'] = $instance = new \Mautic\NotificationBundle\Model\NotificationModel($this->get('mautic.page.model.trackable'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.notification.notificationbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\NotificationBundle\EventListener\NotificationSubscriber A Mautic\NotificationBundle\EventListener\NotificationSubscriber instance
     */
    protected function getMautic_Notification_Notificationbundle_SubscriberService()
    {
        $this->services['mautic.notification.notificationbundle.subscriber'] = $instance = new \Mautic\NotificationBundle\EventListener\NotificationSubscriber($this->get('mautic.core.model.auditlog'), $this->get('mautic.page.model.trackable'), $this->get('mautic.page.helper.token'), $this->get('mautic.asset.helper.token'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.notification.pagebundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\NotificationBundle\EventListener\PageSubscriber A Mautic\NotificationBundle\EventListener\PageSubscriber instance
     */
    protected function getMautic_Notification_Pagebundle_SubscriberService()
    {
        $this->services['mautic.notification.pagebundle.subscriber'] = $instance = new \Mautic\NotificationBundle\EventListener\PageSubscriber($this->get('templating.helper.assets'), $this->get('mautic.helper.core_parameters'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.notification.stats.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\NotificationBundle\EventListener\StatsSubscriber A Mautic\NotificationBundle\EventListener\StatsSubscriber instance
     */
    protected function getMautic_Notification_Stats_SubscriberService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        $this->services['mautic.notification.stats.subscriber'] = $instance = new \Mautic\NotificationBundle\EventListener\StatsSubscriber($a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($a);
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.notification.subscriber.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\NotificationBundle\EventListener\ChannelSubscriber A Mautic\NotificationBundle\EventListener\ChannelSubscriber instance
     */
    protected function getMautic_Notification_Subscriber_ChannelService()
    {
        $this->services['mautic.notification.subscriber.channel'] = $instance = new \Mautic\NotificationBundle\EventListener\ChannelSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.page.calendarbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\CalendarSubscriber A Mautic\PageBundle\EventListener\CalendarSubscriber instance
     */
    protected function getMautic_Page_Calendarbundle_SubscriberService()
    {
        $this->services['mautic.page.calendarbundle.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\CalendarSubscriber($this->get('mautic.page.model.page'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.page.campaignbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\CampaignSubscriber A Mautic\PageBundle\EventListener\CampaignSubscriber instance
     */
    protected function getMautic_Page_Campaignbundle_SubscriberService()
    {
        $this->services['mautic.page.campaignbundle.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\CampaignSubscriber($this->get('mautic.page.model.page'), $this->get('mautic.campaign.model.event'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.page.configbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\ConfigSubscriber A Mautic\PageBundle\EventListener\ConfigSubscriber instance
     */
    protected function getMautic_Page_Configbundle_SubscriberService()
    {
        $this->services['mautic.page.configbundle.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\ConfigSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.page.dashboard.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\DashboardSubscriber A Mautic\PageBundle\EventListener\DashboardSubscriber instance
     */
    protected function getMautic_Page_Dashboard_SubscriberService()
    {
        $this->services['mautic.page.dashboard.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\DashboardSubscriber($this->get('mautic.page.model.page'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.page.helper.token' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Helper\TokenHelper A Mautic\PageBundle\Helper\TokenHelper instance
     */
    protected function getMautic_Page_Helper_TokenService()
    {
        return $this->services['mautic.page.helper.token'] = new \Mautic\PageBundle\Helper\TokenHelper($this->get('mautic.page.model.page'));
    }

    /**
     * Gets the 'mautic.page.js.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\BuildJsSubscriber A Mautic\PageBundle\EventListener\BuildJsSubscriber instance
     */
    protected function getMautic_Page_Js_SubscriberService()
    {
        $this->services['mautic.page.js.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\BuildJsSubscriber($this->get('templating.helper.assets'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.page.leadbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\LeadSubscriber A Mautic\PageBundle\EventListener\LeadSubscriber instance
     */
    protected function getMautic_Page_Leadbundle_SubscriberService()
    {
        $this->services['mautic.page.leadbundle.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\LeadSubscriber($this->get('mautic.page.model.page'), $this->get('mautic.page.model.video'));

        $instance->setModelFactory($this->get('mautic.model.factory'));
        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.page.maintenance.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\MaintenanceSubscriber A Mautic\PageBundle\EventListener\MaintenanceSubscriber instance
     */
    protected function getMautic_Page_Maintenance_SubscriberService()
    {
        $this->services['mautic.page.maintenance.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\MaintenanceSubscriber($this->get('doctrine.dbal.default_connection'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.page.model.page' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Model\PageModel A Mautic\PageBundle\Model\PageModel instance
     */
    protected function getMautic_Page_Model_PageService()
    {
        $this->services['mautic.page.model.page'] = $instance = new \Mautic\PageBundle\Model\PageModel($this->get('mautic.helper.cookie'), $this->get('mautic.helper.ip_lookup'), $this->get('mautic.lead.model.lead'), $this->get('mautic.lead.model.field'), $this->get('mautic.page.model.redirect'), $this->get('mautic.page.model.trackable'));

        $instance->setCatInUrl(false);
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.page.model.redirect' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Model\RedirectModel A Mautic\PageBundle\Model\RedirectModel instance
     */
    protected function getMautic_Page_Model_RedirectService()
    {
        $this->services['mautic.page.model.redirect'] = $instance = new \Mautic\PageBundle\Model\RedirectModel($this->get('mautic.helper.url'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.page.model.trackable' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Model\TrackableModel A Mautic\PageBundle\Model\TrackableModel instance
     */
    protected function getMautic_Page_Model_TrackableService()
    {
        $this->services['mautic.page.model.trackable'] = $instance = new \Mautic\PageBundle\Model\TrackableModel($this->get('mautic.page.model.redirect'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.page.model.video' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\Model\VideoModel A Mautic\PageBundle\Model\VideoModel instance
     */
    protected function getMautic_Page_Model_VideoService()
    {
        $this->services['mautic.page.model.video'] = $instance = new \Mautic\PageBundle\Model\VideoModel($this->get('mautic.lead.model.lead'), $this->get('mautic.helper.ip_lookup'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.page.pointbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\PointSubscriber A Mautic\PageBundle\EventListener\PointSubscriber instance
     */
    protected function getMautic_Page_Pointbundle_SubscriberService()
    {
        $this->services['mautic.page.pointbundle.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\PointSubscriber($this->get('mautic.point.model.point'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.page.reportbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\ReportSubscriber A Mautic\PageBundle\EventListener\ReportSubscriber instance
     */
    protected function getMautic_Page_Reportbundle_SubscriberService()
    {
        $this->services['mautic.page.reportbundle.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\ReportSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.page.search.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\SearchSubscriber A Mautic\PageBundle\EventListener\SearchSubscriber instance
     */
    protected function getMautic_Page_Search_SubscriberService()
    {
        $this->services['mautic.page.search.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\SearchSubscriber($this->get('mautic.helper.user'), $this->get('mautic.page.model.page'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.page.stats.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\StatsSubscriber A Mautic\PageBundle\EventListener\StatsSubscriber instance
     */
    protected function getMautic_Page_Stats_SubscriberService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        $this->services['mautic.page.stats.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\StatsSubscriber($a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($a);
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.page.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\PageSubscriber A Mautic\PageBundle\EventListener\PageSubscriber instance
     */
    protected function getMautic_Page_SubscriberService()
    {
        $this->services['mautic.page.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\PageSubscriber($this->get('templating.helper.assets'), $this->get('mautic.helper.ip_lookup'), $this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.page.webhook.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\WebhookSubscriber A Mautic\PageBundle\EventListener\WebhookSubscriber instance
     */
    protected function getMautic_Page_Webhook_SubscriberService()
    {
        $this->services['mautic.page.webhook.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\WebhookSubscriber();

        $instance->setWebhookModel($this->get('mautic.webhook.model.webhook'));
        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.pagebuilder.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\BuilderSubscriber A Mautic\PageBundle\EventListener\BuilderSubscriber instance
     */
    protected function getMautic_Pagebuilder_SubscriberService()
    {
        $this->services['mautic.pagebuilder.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\BuilderSubscriber($this->get('mautic.page.helper.token'), $this->get('mautic.helper.integration'), $this->get('mautic.page.model.page'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.pagetoken.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PageBundle\EventListener\TokenSubscriber A Mautic\PageBundle\EventListener\TokenSubscriber instance
     */
    protected function getMautic_Pagetoken_SubscriberService()
    {
        $this->services['mautic.pagetoken.subscriber'] = $instance = new \Mautic\PageBundle\EventListener\TokenSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.permission.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\ORM\EntityManager A Doctrine\ORM\EntityManager instance
     */
    protected function getMautic_Permission_ManagerService()
    {
        return $this->services['mautic.permission.manager'] = $this->get('doctrine')->getManagerForClass('Mautic\\UserBundle\\Entity\\Permission');
    }

    /**
     * Gets the 'mautic.permission.repository' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Entity\PermissionRepository A Mautic\UserBundle\Entity\PermissionRepository instance
     */
    protected function getMautic_Permission_RepositoryService()
    {
        return $this->services['mautic.permission.repository'] = $this->get('mautic.permission.manager')->getRepository('Mautic\\UserBundle\\Entity\\Permission');
    }

    /**
     * Gets the 'mautic.plugin.campaignbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PluginBundle\EventListener\CampaignSubscriber A Mautic\PluginBundle\EventListener\CampaignSubscriber instance
     */
    protected function getMautic_Plugin_Campaignbundle_SubscriberService()
    {
        $this->services['mautic.plugin.campaignbundle.subscriber'] = $instance = new \Mautic\PluginBundle\EventListener\CampaignSubscriber($this->get('mautic.helper.integration'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.plugin.clearbit.button.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticClearbitBundle\EventListener\ButtonSubscriber A MauticPlugin\MauticClearbitBundle\EventListener\ButtonSubscriber instance
     */
    protected function getMautic_Plugin_Clearbit_Button_SubscriberService()
    {
        $this->services['mautic.plugin.clearbit.button.subscriber'] = $instance = new \MauticPlugin\MauticClearbitBundle\EventListener\ButtonSubscriber($this->get('mautic.helper.integration'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.plugin.clearbit.lead.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticClearbitBundle\EventListener\LeadSubscriber A MauticPlugin\MauticClearbitBundle\EventListener\LeadSubscriber instance
     */
    protected function getMautic_Plugin_Clearbit_Lead_SubscriberService()
    {
        $this->services['mautic.plugin.clearbit.lead.subscriber'] = $instance = new \MauticPlugin\MauticClearbitBundle\EventListener\LeadSubscriber($this->get('mautic.plugin.clearbit.lookup_helper'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.plugin.clearbit.lookup_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticClearbitBundle\Helper\LookupHelper A MauticPlugin\MauticClearbitBundle\Helper\LookupHelper instance
     */
    protected function getMautic_Plugin_Clearbit_LookupHelperService()
    {
        return $this->services['mautic.plugin.clearbit.lookup_helper'] = new \MauticPlugin\MauticClearbitBundle\Helper\LookupHelper($this->get('mautic.helper.integration'), $this->get('mautic.helper.user'), $this->get('monolog.logger.mautic'), $this->get('mautic.lead.model.lead'), $this->get('mautic.lead.model.company'));
    }

    /**
     * Gets the 'mautic.plugin.formbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PluginBundle\EventListener\FormSubscriber A Mautic\PluginBundle\EventListener\FormSubscriber instance
     */
    protected function getMautic_Plugin_Formbundle_SubscriberService()
    {
        $this->services['mautic.plugin.formbundle.subscriber'] = $instance = new \Mautic\PluginBundle\EventListener\FormSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.plugin.fullcontact.button.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFullContactBundle\EventListener\ButtonSubscriber A MauticPlugin\MauticFullContactBundle\EventListener\ButtonSubscriber instance
     */
    protected function getMautic_Plugin_Fullcontact_Button_SubscriberService()
    {
        $this->services['mautic.plugin.fullcontact.button.subscriber'] = $instance = new \MauticPlugin\MauticFullContactBundle\EventListener\ButtonSubscriber($this->get('mautic.helper.integration'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.plugin.fullcontact.lead.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFullContactBundle\EventListener\LeadSubscriber A MauticPlugin\MauticFullContactBundle\EventListener\LeadSubscriber instance
     */
    protected function getMautic_Plugin_Fullcontact_Lead_SubscriberService()
    {
        $this->services['mautic.plugin.fullcontact.lead.subscriber'] = $instance = new \MauticPlugin\MauticFullContactBundle\EventListener\LeadSubscriber($this->get('mautic.plugin.fullcontact.lookup_helper'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.plugin.fullcontact.lookup_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticFullContactBundle\Helper\LookupHelper A MauticPlugin\MauticFullContactBundle\Helper\LookupHelper instance
     */
    protected function getMautic_Plugin_Fullcontact_LookupHelperService()
    {
        return $this->services['mautic.plugin.fullcontact.lookup_helper'] = new \MauticPlugin\MauticFullContactBundle\Helper\LookupHelper($this->get('mautic.helper.integration'), $this->get('mautic.helper.user'), $this->get('monolog.logger.mautic'), $this->get('router'), $this->get('mautic.lead.model.lead'), $this->get('mautic.lead.model.company'));
    }

    /**
     * Gets the 'mautic.plugin.leadbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PluginBundle\EventListener\LeadSubscriber A Mautic\PluginBundle\EventListener\LeadSubscriber instance
     */
    protected function getMautic_Plugin_Leadbundle_SubscriberService()
    {
        $this->services['mautic.plugin.leadbundle.subscriber'] = $instance = new \Mautic\PluginBundle\EventListener\LeadSubscriber($this->get('mautic.plugin.model.plugin'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.plugin.model.plugin' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PluginBundle\Model\PluginModel A Mautic\PluginBundle\Model\PluginModel instance
     */
    protected function getMautic_Plugin_Model_PluginService()
    {
        $this->services['mautic.plugin.model.plugin'] = $instance = new \Mautic\PluginBundle\Model\PluginModel($this->get('mautic.lead.model.field'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.plugin.pointbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PluginBundle\EventListener\PointSubscriber A Mautic\PluginBundle\EventListener\PointSubscriber instance
     */
    protected function getMautic_Plugin_Pointbundle_SubscriberService()
    {
        $this->services['mautic.plugin.pointbundle.subscriber'] = $instance = new \Mautic\PluginBundle\EventListener\PointSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.point.dashboard.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PointBundle\EventListener\DashboardSubscriber A Mautic\PointBundle\EventListener\DashboardSubscriber instance
     */
    protected function getMautic_Point_Dashboard_SubscriberService()
    {
        $this->services['mautic.point.dashboard.subscriber'] = $instance = new \Mautic\PointBundle\EventListener\DashboardSubscriber($this->get('mautic.point.model.point'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.point.leadbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PointBundle\EventListener\LeadSubscriber A Mautic\PointBundle\EventListener\LeadSubscriber instance
     */
    protected function getMautic_Point_Leadbundle_SubscriberService()
    {
        $this->services['mautic.point.leadbundle.subscriber'] = $instance = new \Mautic\PointBundle\EventListener\LeadSubscriber($this->get('mautic.point.model.trigger'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.point.model.point' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PointBundle\Model\PointModel A Mautic\PointBundle\Model\PointModel instance
     */
    protected function getMautic_Point_Model_PointService()
    {
        $this->services['mautic.point.model.point'] = $instance = new \Mautic\PointBundle\Model\PointModel($this->get('session'), $this->get('mautic.helper.ip_lookup'), $this->get('mautic.lead.model.lead'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.point.model.trigger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PointBundle\Model\TriggerModel A Mautic\PointBundle\Model\TriggerModel instance
     */
    protected function getMautic_Point_Model_TriggerService()
    {
        $this->services['mautic.point.model.trigger'] = $instance = new \Mautic\PointBundle\Model\TriggerModel($this->get('mautic.helper.ip_lookup'), $this->get('mautic.lead.model.lead'), $this->get('mautic.point.model.triggerevent'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.point.model.triggerevent' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PointBundle\Model\TriggerEventModel A Mautic\PointBundle\Model\TriggerEventModel instance
     */
    protected function getMautic_Point_Model_TriggereventService()
    {
        $this->services['mautic.point.model.triggerevent'] = $instance = new \Mautic\PointBundle\Model\TriggerEventModel();

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.point.search.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PointBundle\EventListener\SearchSubscriber A Mautic\PointBundle\EventListener\SearchSubscriber instance
     */
    protected function getMautic_Point_Search_SubscriberService()
    {
        $this->services['mautic.point.search.subscriber'] = $instance = new \Mautic\PointBundle\EventListener\SearchSubscriber($this->get('mautic.point.model.point'), $this->get('mautic.point.model.trigger'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.point.stats.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PointBundle\EventListener\StatsSubscriber A Mautic\PointBundle\EventListener\StatsSubscriber instance
     */
    protected function getMautic_Point_Stats_SubscriberService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        $this->services['mautic.point.stats.subscriber'] = $instance = new \Mautic\PointBundle\EventListener\StatsSubscriber($a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($a);
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.point.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PointBundle\EventListener\PointSubscriber A Mautic\PointBundle\EventListener\PointSubscriber instance
     */
    protected function getMautic_Point_SubscriberService()
    {
        $this->services['mautic.point.subscriber'] = $instance = new \Mautic\PointBundle\EventListener\PointSubscriber($this->get('mautic.helper.ip_lookup'), $this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.point.type.action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PointBundle\Form\Type\PointActionType A Mautic\PointBundle\Form\Type\PointActionType instance
     */
    protected function getMautic_Point_Type_ActionService()
    {
        return $this->services['mautic.point.type.action'] = new \Mautic\PointBundle\Form\Type\PointActionType();
    }

    /**
     * Gets the 'mautic.point.type.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PointBundle\Form\Type\PointType A Mautic\PointBundle\Form\Type\PointType instance
     */
    protected function getMautic_Point_Type_FormService()
    {
        return $this->services['mautic.point.type.form'] = new \Mautic\PointBundle\Form\Type\PointType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.point.type.genericpoint_settings' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PointBundle\Form\Type\GenericPointSettingsType A Mautic\PointBundle\Form\Type\GenericPointSettingsType instance
     */
    protected function getMautic_Point_Type_GenericpointSettingsService()
    {
        return $this->services['mautic.point.type.genericpoint_settings'] = new \Mautic\PointBundle\Form\Type\GenericPointSettingsType();
    }

    /**
     * Gets the 'mautic.point.type.genericstage_settings' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\StageBundle\Form\Type\GenericStageSettingsType A Mautic\StageBundle\Form\Type\GenericStageSettingsType instance
     */
    protected function getMautic_Point_Type_GenericstageSettingsService()
    {
        return $this->services['mautic.point.type.genericstage_settings'] = new \Mautic\StageBundle\Form\Type\GenericStageSettingsType();
    }

    /**
     * Gets the 'mautic.pointtrigger.type.action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PointBundle\Form\Type\TriggerEventType A Mautic\PointBundle\Form\Type\TriggerEventType instance
     */
    protected function getMautic_Pointtrigger_Type_ActionService()
    {
        return $this->services['mautic.pointtrigger.type.action'] = new \Mautic\PointBundle\Form\Type\TriggerEventType();
    }

    /**
     * Gets the 'mautic.pointtrigger.type.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\PointBundle\Form\Type\TriggerType A Mautic\PointBundle\Form\Type\TriggerType instance
     */
    protected function getMautic_Pointtrigger_Type_FormService()
    {
        return $this->services['mautic.pointtrigger.type.form'] = new \Mautic\PointBundle\Form\Type\TriggerType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.report.dashboard.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ReportBundle\EventListener\DashboardSubscriber A Mautic\ReportBundle\EventListener\DashboardSubscriber instance
     */
    protected function getMautic_Report_Dashboard_SubscriberService()
    {
        $a = $this->get('mautic.security');

        $this->services['mautic.report.dashboard.subscriber'] = $instance = new \Mautic\ReportBundle\EventListener\DashboardSubscriber($this->get('mautic.report.model.report'), $a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($a);
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.report.model.report' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ReportBundle\Model\ReportModel A Mautic\ReportBundle\Model\ReportModel instance
     */
    protected function getMautic_Report_Model_ReportService()
    {
        $this->services['mautic.report.model.report'] = $instance = new \Mautic\ReportBundle\Model\ReportModel($this->get('mautic.helper.core_parameters'), $this->get('mautic.helper.template.formatter'), $this->get('mautic.helper.templating'), $this->get('mautic.channel.helper.channel_list'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setSession($this->get('session'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.report.report.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ReportBundle\EventListener\ReportSubscriber A Mautic\ReportBundle\EventListener\ReportSubscriber instance
     */
    protected function getMautic_Report_Report_SubscriberService()
    {
        $this->services['mautic.report.report.subscriber'] = $instance = new \Mautic\ReportBundle\EventListener\ReportSubscriber($this->get('mautic.helper.ip_lookup'), $this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.report.search.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ReportBundle\EventListener\SearchSubscriber A Mautic\ReportBundle\EventListener\SearchSubscriber instance
     */
    protected function getMautic_Report_Search_SubscriberService()
    {
        $this->services['mautic.report.search.subscriber'] = $instance = new \Mautic\ReportBundle\EventListener\SearchSubscriber($this->get('mautic.helper.user'), $this->get('mautic.report.model.report'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.route_loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Loader\RouteLoader A Mautic\CoreBundle\Loader\RouteLoader instance
     */
    protected function getMautic_RouteLoaderService()
    {
        return $this->services['mautic.route_loader'] = new \Mautic\CoreBundle\Loader\RouteLoader($this->get('debug.event_dispatcher'), $this->get('mautic.helper.core_parameters'));
    }

    /**
     * Gets the 'mautic.schema.helper.column' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Doctrine\Helper\ColumnSchemaHelper A Mautic\CoreBundle\Doctrine\Helper\ColumnSchemaHelper instance
     */
    protected function getMautic_Schema_Helper_ColumnService()
    {
        return $this->services['mautic.schema.helper.column'] = new \Mautic\CoreBundle\Doctrine\Helper\ColumnSchemaHelper($this->get('doctrine.dbal.default_connection'), NULL);
    }

    /**
     * Gets the 'mautic.schema.helper.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Doctrine\Helper\SchemaHelperFactory A Mautic\CoreBundle\Doctrine\Helper\SchemaHelperFactory instance
     */
    protected function getMautic_Schema_Helper_FactoryService()
    {
        return $this->services['mautic.schema.helper.factory'] = new \Mautic\CoreBundle\Doctrine\Helper\SchemaHelperFactory($this->get('mautic.schema.helper.table'), $this->get('mautic.schema.helper.index'), $this->get('mautic.schema.helper.column'));
    }

    /**
     * Gets the 'mautic.schema.helper.index' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Doctrine\Helper\IndexSchemaHelper A Mautic\CoreBundle\Doctrine\Helper\IndexSchemaHelper instance
     */
    protected function getMautic_Schema_Helper_IndexService()
    {
        return $this->services['mautic.schema.helper.index'] = new \Mautic\CoreBundle\Doctrine\Helper\IndexSchemaHelper($this->get('doctrine.dbal.default_connection'), NULL);
    }

    /**
     * Gets the 'mautic.schema.helper.table' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Doctrine\Helper\TableSchemaHelper A Mautic\CoreBundle\Doctrine\Helper\TableSchemaHelper instance
     */
    protected function getMautic_Schema_Helper_TableService()
    {
        return $this->services['mautic.schema.helper.table'] = new \Mautic\CoreBundle\Doctrine\Helper\TableSchemaHelper($this->get('doctrine.dbal.default_connection'), NULL, $this->get('mautic.schema.helper.column'));
    }

    /**
     * Gets the 'mautic.security' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Security\Permissions\CorePermissions A Mautic\CoreBundle\Security\Permissions\CorePermissions instance
     */
    protected function getMautic_SecurityService()
    {
        return $this->services['mautic.security'] = new \Mautic\CoreBundle\Security\Permissions\CorePermissions($this->get('mautic.helper.user'), $this->get('translator'), array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')), array('MauticCoreBundle' => array('isPlugin' => false, 'base' => 'Core', 'bundle' => 'CoreBundle', 'namespace' => 'Mautic\\CoreBundle', 'symfonyBundleName' => 'MauticCoreBundle', 'bundleClass' => 'Mautic\\CoreBundle\\MauticCoreBundle', 'permissionClasses' => array('core' => '\\Mautic\\CoreBundle\\Security\\Permissions\\SystemPermissions'), 'relative' => 'app/bundles/CoreBundle', 'directory' => ($this->targetDirs[2].'/bundles/CoreBundle'), 'config' => array('routes' => array('main' => array('mautic_core_ajax' => array('path' => '/ajax', 'controller' => 'MauticCoreBundle:Ajax:delegateAjax'), 'mautic_core_update' => array('path' => '/update', 'controller' => 'MauticCoreBundle:Update:index'), 'mautic_core_update_schema' => array('path' => '/update/schema', 'controller' => 'MauticCoreBundle:Update:schema'), 'mautic_core_form_action' => array('path' => '/action/{objectAction}/{objectModel}/{objectId}', 'controller' => 'MauticCoreBundle:Form:execute', 'defaults' => array('objectModel' => '')), 'mautic_core_file_action' => array('path' => '/file/{objectAction}/{objectId}', 'controller' => 'MauticCoreBundle:File:execute'), 'mautic_themes_index' => array('path' => '/themes', 'controller' => 'MauticCoreBundle:Theme:index'), 'mautic_themes_action' => array('path' => '/themes/{objectAction}/{objectId}', 'controller' => 'MauticCoreBundle:Theme:execute')), 'public' => array('mautic_js' => array('path' => '/mtc.js', 'controller' => 'MauticCoreBundle:Js:index'), 'mautic_base_index' => array('path' => '/', 'controller' => 'MauticCoreBundle:Default:index'), 'mautic_secure_root' => array('path' => '/s', 'controller' => 'MauticCoreBundle:Default:redirectSecureRoot'), 'mautic_secure_root_slash' => array('path' => '/s/', 'controller' => 'MauticCoreBundle:Default:redirectSecureRoot'), 'mautic_remove_trailing_slash' => array('path' => '/{url}', 'controller' => 'MauticCoreBundle:Common:removeTrailingSlash', 'method' => 'GET', 'requirements' => array('url' => '.*/$'))), 'api' => array('mautic_core_api_file_list' => array('path' => '/files/{dir}', 'controller' => 'MauticCoreBundle:Api\\FileApi:list'), 'mautic_core_api_file_create' => array('path' => '/files/{dir}/new', 'controller' => 'MauticCoreBundle:Api\\FileApi:create', 'method' => 'POST'), 'mautic_core_api_file_delete' => array('path' => '/files/{dir}/{file}/delete', 'controller' => 'MauticCoreBundle:Api\\FileApi:delete', 'method' => 'DELETE'), 'mautic_core_api_theme_list' => array('path' => '/themes', 'controller' => 'MauticCoreBundle:Api\\ThemeApi:list'), 'mautic_core_api_theme_get' => array('path' => '/themes/{theme}', 'controller' => 'MauticCoreBundle:Api\\ThemeApi:get'), 'mautic_core_api_theme_create' => array('path' => '/themes/new', 'controller' => 'MauticCoreBundle:Api\\ThemeApi:new', 'method' => 'POST'), 'mautic_core_api_theme_delete' => array('path' => '/themes/{theme}/delete', 'controller' => 'MauticCoreBundle:Api\\ThemeApi:delete', 'method' => 'DELETE'), 'mautic_core_api_stats' => array('path' => '/stats/{table}', 'controller' => 'MauticCoreBundle:Api\\StatsApi:list', 'defaults' => array('table' => '')))), 'menu' => array('main' => array('mautic.core.components' => array('id' => 'mautic_components_root', 'iconClass' => 'fa-puzzle-piece', 'priority' => 60), 'mautic.core.channels' => array('id' => 'mautic_channels_root', 'iconClass' => 'fa-rss', 'priority' => 40)), 'admin' => array('mautic.theme.menu.index' => array('route' => 'mautic_themes_index', 'iconClass' => 'fa-newspaper-o', 'id' => 'mautic_themes_index', 'access' => 'admin')), 'extra' => array('priority' => -1000, 'items' => array('name' => 'extra', 'children' => array())), 'profile' => array('priority' => -1000, 'items' => array('name' => 'profile', 'children' => array()))), 'services' => array('events' => array('mautic.core.subscriber' => array('class' => 'Mautic\\CoreBundle\\EventListener\\CoreSubscriber', 'arguments' => array(0 => 'mautic.helper.bundle', 1 => 'mautic.helper.menu', 2 => 'mautic.helper.user', 3 => 'templating.helper.assets', 4 => 'mautic.helper.core_parameters', 5 => 'security.context', 6 => 'mautic.user.model.user')), 'mautic.core.environment.subscriber' => array('class' => 'Mautic\\CoreBundle\\EventListener\\EnvironmentSubscriber', 'arguments' => array(0 => 'mautic.helper.cookie')), 'mautic.core.configbundle.subscriber' => array('class' => 'Mautic\\CoreBundle\\EventListener\\ConfigSubscriber', 'arguments' => array(0 => 'mautic.helper.language', 1 => 'mautic.helper.core_parameters')), 'mautic.webpush.js.subscriber' => array('class' => 'Mautic\\CoreBundle\\EventListener\\BuildJsSubscriber'), 'mautic.core.dashboard.subscriber' => array('class' => 'Mautic\\CoreBundle\\EventListener\\DashboardSubscriber', 'arguments' => array(0 => 'mautic.core.model.auditlog')), 'mautic.core.maintenance.subscriber' => array('class' => 'Mautic\\CoreBundle\\EventListener\\MaintenanceSubscriber', 'arguments' => array(0 => 'doctrine.dbal.default_connection')), 'mautic.core.stats.subscriber' => array('class' => 'Mautic\\CoreBundle\\EventListener\\StatsSubscriber', 'arguments' => array(0 => 'doctrine.orm.entity_manager')), 'mautic.core.assets.subscriber' => array('class' => 'Mautic\\CoreBundle\\EventListener\\AssetsSubscriber', 'arguments' => array(0 => 'templating.helper.assets'))), 'forms' => array('mautic.form.type.spacer' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\SpacerType', 'alias' => 'spacer'), 'mautic.form.type.tel' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\TelType', 'alias' => 'tel'), 'mautic.form.type.button_group' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\ButtonGroupType', 'alias' => 'button_group'), 'mautic.form.type.yesno_button_group' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\YesNoButtonGroupType', 'alias' => 'yesno_button_group'), 'mautic.form.type.standalone_button' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\StandAloneButtonType', 'alias' => 'standalone_button'), 'mautic.form.type.form_buttons' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\FormButtonsType', 'alias' => 'form_buttons'), 'mautic.form.type.hidden_entity' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\HiddenEntityType', 'alias' => 'hidden_entity', 'arguments' => 'doctrine.orm.entity_manager'), 'mautic.form.type.sortablelist' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\SortableListType', 'alias' => 'sortablelist'), 'mautic.form.type.dynamiclist' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\DynamicListType', 'alias' => 'dynamiclist'), 'mautic.form.type.coreconfig' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\ConfigType', 'arguments' => array(0 => 'translator', 1 => 'mautic.helper.language', 2 => 'mautic.ip_lookup.factory', 3 => '%mautic.supported_languages%', 4 => '%mautic.ip_lookup_services%', 5 => 'mautic.ip_lookup'), 'alias' => 'coreconfig'), 'mautic.form.type.coreconfig.iplookup_download_data_store_button' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\IpLookupDownloadDataStoreButtonType', 'alias' => 'iplookup_download_data_store_button', 'arguments' => array(0 => 'mautic.helper.template.date', 1 => 'translator')), 'mautic.form.type.theme_list' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\ThemeListType', 'arguments' => 'mautic.factory', 'alias' => 'theme_list'), 'mautic.form.type.daterange' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\DateRangeType', 'arguments' => 'mautic.factory', 'alias' => 'daterange'), 'mautic.form.type.builder.section' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\BuilderSectionType', 'arguments' => 'mautic.factory', 'alias' => 'builder_section'), 'mautic.form.type.slot' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotType', 'alias' => 'slot'), 'mautic.form.type.slot.button' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotButtonType', 'alias' => 'slot_button'), 'mautic.form.type.slot.image' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotImageType', 'alias' => 'slot_image'), 'mautic.form.type.slot.separator' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotSeparatorType', 'alias' => 'slot_separator'), 'mautic.form.type.slot.imagecard' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotImageCardType', 'alias' => 'slot_imagecard'), 'mautic.form.type.slot.imagecaption' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotImageCaptionType', 'alias' => 'slot_imagecaption'), 'mautic.form.type.slot.socialshare' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotSocialShareType', 'alias' => 'slot_socialshare'), 'mautic.form.type.slot.socialfollow' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotSocialFollowType', 'alias' => 'slot_socialfollow'), 'mautic.form.type.slot.codemode' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotCodeModeType', 'alias' => 'slot_codemode'), 'mautic.form.type.theme.upload' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\ThemeUploadType', 'alias' => 'theme_upload'), 'mautic.form.type.dynamic_content_filter' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\DynamicContentFilterType', 'alias' => 'dynamic_content_filter'), 'mautic.form.type.dynamic_content_filter_entry' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\DynamicContentFilterEntryType', 'alias' => 'dynamic_content_filter_entry', 'arguments' => array(0 => 'mautic.lead.model.list', 1 => 'mautic.stage.model.stage')), 'mautic.form.type.dynamic_content_filter_entry_filters' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\DynamicContentFilterEntryFiltersType', 'alias' => 'dynamic_content_filter_entry_filters', 'arguments' => array(0 => 'translator')), 'mautic.form.type.entity_lookup' => array('class' => 'Mautic\\CoreBundle\\Form\\Type\\EntityLookupType', 'arguments' => array(0 => 'mautic.model.factory', 1 => 'translator', 2 => 'database_connection', 3 => 'router'))), 'helpers' => array('mautic.helper.template.menu' => array('class' => 'Mautic\\CoreBundle\\Templating\\Helper\\MenuHelper', 'arguments' => array(0 => 'knp_menu.helper'), 'alias' => 'menu'), 'mautic.helper.template.date' => array('class' => 'Mautic\\CoreBundle\\Templating\\Helper\\DateHelper', 'arguments' => array(0 => '%mautic.date_format_full%', 1 => '%mautic.date_format_short%', 2 => '%mautic.date_format_dateonly%', 3 => '%mautic.date_format_timeonly%', 4 => 'translator'), 'alias' => 'date'), 'mautic.helper.template.exception' => array('class' => 'Mautic\\CoreBundle\\Templating\\Helper\\ExceptionHelper', 'arguments' => '%kernel.root_dir%', 'alias' => 'exception'), 'mautic.helper.template.gravatar' => array('class' => 'Mautic\\CoreBundle\\Templating\\Helper\\GravatarHelper', 'arguments' => 'mautic.factory', 'alias' => 'gravatar'), 'mautic.helper.template.analytics' => array('class' => 'Mautic\\CoreBundle\\Templating\\Helper\\AnalyticsHelper', 'arguments' => 'mautic.factory', 'alias' => 'analytics'), 'mautic.helper.template.mautibot' => array('class' => 'Mautic\\CoreBundle\\Templating\\Helper\\MautibotHelper', 'alias' => 'mautibot'), 'mautic.helper.template.canvas' => array('class' => 'Mautic\\CoreBundle\\Templating\\Helper\\SidebarCanvasHelper', 'arguments' => array(0 => 'event_dispatcher'), 'alias' => 'canvas'), 'mautic.helper.template.button' => array('class' => 'Mautic\\CoreBundle\\Templating\\Helper\\ButtonHelper', 'arguments' => array(0 => 'templating', 1 => 'translator', 2 => 'event_dispatcher'), 'alias' => 'buttons'), 'mautic.helper.template.content' => array('class' => 'Mautic\\CoreBundle\\Templating\\Helper\\ContentHelper', 'arguments' => array(0 => 'templating', 1 => 'event_dispatcher'), 'alias' => 'content'), 'mautic.helper.template.formatter' => array('class' => 'Mautic\\CoreBundle\\Templating\\Helper\\FormatterHelper', 'arguments' => 'mautic.factory', 'alias' => 'formatter'), 'mautic.helper.template.security' => array('class' => 'Mautic\\CoreBundle\\Templating\\Helper\\SecurityHelper', 'arguments' => array(0 => 'mautic.security', 1 => 'request_stack', 2 => 'event_dispatcher'), 'alias' => 'security'), 'mautic.helper.paths' => array('class' => 'Mautic\\CoreBundle\\Helper\\PathsHelper', 'arguments' => array(0 => 'mautic.helper.user', 1 => 'mautic.helper.core_parameters')), 'mautic.helper.ip_lookup' => array('class' => 'Mautic\\CoreBundle\\Helper\\IpLookupHelper', 'arguments' => array(0 => 'request_stack', 1 => 'doctrine.orm.entity_manager', 2 => 'mautic.helper.core_parameters', 3 => 'mautic.ip_lookup')), 'mautic.helper.user' => array('class' => 'Mautic\\CoreBundle\\Helper\\UserHelper', 'arguments' => array(0 => 'security.token_storage')), 'mautic.helper.core_parameters' => array('class' => 'Mautic\\CoreBundle\\Helper\\CoreParametersHelper', 'arguments' => array(0 => 'kernel'), 'serviceAlias' => 'mautic.config'), 'mautic.helper.bundle' => array('class' => 'Mautic\\CoreBundle\\Helper\\BundleHelper', 'arguments' => array(0 => 'mautic.helper.core_parameters', 1 => 'kernel')), 'mautic.helper.phone_number' => array('class' => 'Mautic\\CoreBundle\\Helper\\PhoneNumberHelper')), 'menus' => array('mautic.menu.main' => array('alias' => 'main'), 'mautic.menu.admin' => array('alias' => 'admin', 'options' => array('template' => 'MauticCoreBundle:Menu:admin.html.php')), 'mautic.menu.extra' => array('alias' => 'extra', 'options' => array('template' => 'MauticCoreBundle:Menu:extra.html.php')), 'mautic.menu.profile' => array('alias' => 'profile', 'options' => array('template' => 'MauticCoreBundle:Menu:profile_inline.html.php'))), 'other' => array('mautic.core.errorhandler.subscriber' => array('class' => 'Mautic\\CoreBundle\\EventListener\\ErrorHandlingListener', 'arguments' => array(0 => 'monolog.logger.mautic', 1 => 'monolog.logger', 2 => '@=container.has(\'monolog.logger.chrome\') ? container.get(\'monolog.logger.chrome\') : null'), 'tag' => 'kernel.event_subscriber'), 'mautic.configurator' => array('class' => 'Mautic\\CoreBundle\\Configurator\\Configurator', 'arguments' => array(0 => 'mautic.helper.paths')), 'templating.helper.assets.class' => 'Mautic\\CoreBundle\\Templating\\Helper\\AssetsHelper', 'templating.helper.slots.class' => 'Mautic\\CoreBundle\\Templating\\Helper\\SlotsHelper', 'templating.name_parser.class' => 'Mautic\\CoreBundle\\Templating\\TemplateNameParser', 'templating.helper.form.class' => 'Mautic\\CoreBundle\\Templating\\Helper\\FormHelper', 'templating.engine.php.class' => 'Mautic\\CoreBundle\\Templating\\Engine\\PhpEngine', 'debug.templating.engine.php.class' => 'Mautic\\CoreBundle\\Templating\\Engine\\PhpEngine', 'translator.class' => 'Mautic\\CoreBundle\\Translation\\Translator', 'templating.helper.translator.class' => 'Mautic\\CoreBundle\\Templating\\Helper\\TranslatorHelper', 'mautic.factory' => array('class' => 'Mautic\\CoreBundle\\Factory\\MauticFactory', 'arguments' => 'service_container'), 'mautic.model.factory' => array('class' => 'Mautic\\CoreBundle\\Factory\\ModelFactory', 'arguments' => 'service_container'), 'mautic.templating.name_parser' => array('class' => 'Mautic\\CoreBundle\\Templating\\TemplateNameParser', 'arguments' => 'kernel'), 'mautic.route_loader' => array('class' => 'Mautic\\CoreBundle\\Loader\\RouteLoader', 'arguments' => array(0 => 'event_dispatcher', 1 => 'mautic.helper.core_parameters'), 'tag' => 'routing.loader'), 'mautic.security' => array('class' => 'Mautic\\CoreBundle\\Security\\Permissions\\CorePermissions', 'arguments' => array(0 => 'mautic.helper.user', 1 => 'translator', 2 => '%mautic.parameters%', 3 => '%mautic.bundles%', 4 => '%mautic.plugin.bundles%')), 'mautic.translation.loader' => array('class' => 'Mautic\\CoreBundle\\Loader\\TranslationLoader', 'arguments' => 'mautic.factory', 'tag' => 'translation.loader', 'alias' => 'mautic'), 'mautic.tblprefix_subscriber' => array('class' => 'Mautic\\CoreBundle\\EventListener\\DoctrineEventsSubscriber', 'tag' => 'doctrine.event_subscriber', 'arguments' => '%mautic.db_table_prefix%'), 'mautic.exception.listener' => array('class' => 'Mautic\\CoreBundle\\EventListener\\ExceptionListener', 'arguments' => array(0 => 'router', 1 => '"MauticCoreBundle:Exception:show"', 2 => 'monolog.logger.mautic'), 'tag' => 'kernel.event_listener', 'tagArguments' => array('event' => 'kernel.exception', 'method' => 'onKernelException', 'priority' => '255')), 'transifex' => array('class' => 'BabDev\\Transifex\\Transifex', 'arguments' => array(0 => array('api.username' => '%mautic.transifex_username%', 'api.password' => '%mautic.transifex_password%'))), 'mautic.helper.assetgeneration' => array('class' => 'Mautic\\CoreBundle\\Helper\\AssetGenerationHelper', 'arguments' => 'mautic.factory'), 'mautic.helper.cookie' => array('class' => 'Mautic\\CoreBundle\\Helper\\CookieHelper', 'arguments' => array(0 => '%mautic.cookie_path%', 1 => '%mautic.cookie_domain%', 2 => '%mautic.cookie_secure%', 3 => '%mautic.cookie_httponly%', 4 => 'request_stack')), 'mautic.helper.cache_storage' => array('class' => 'Mautic\\CoreBundle\\Helper\\CacheStorageHelper', 'arguments' => array(0 => '"db"', 1 => '%mautic.db_table_prefix%', 2 => 'doctrine.dbal.default_connection', 3 => '%kernel.cache_dir%')), 'mautic.helper.update' => array('class' => 'Mautic\\CoreBundle\\Helper\\UpdateHelper', 'arguments' => 'mautic.factory'), 'mautic.helper.cache' => array('class' => 'Mautic\\CoreBundle\\Helper\\CacheHelper', 'arguments' => array(0 => 'kernel')), 'mautic.helper.templating' => array('class' => 'Mautic\\CoreBundle\\Helper\\TemplatingHelper', 'arguments' => array(0 => 'kernel')), 'mautic.helper.theme' => array('class' => 'Mautic\\CoreBundle\\Helper\\ThemeHelper', 'arguments' => array(0 => 'mautic.helper.paths', 1 => 'mautic.helper.templating', 2 => 'translator'), 'methodCalls' => array('setDefaultTheme' => array(0 => '%mautic.theme%'))), 'mautic.helper.encryption' => array('class' => 'Mautic\\CoreBundle\\Helper\\EncryptionHelper', 'arguments' => 'mautic.factory'), 'mautic.helper.language' => array('class' => 'Mautic\\CoreBundle\\Helper\\LanguageHelper', 'arguments' => 'mautic.factory'), 'mautic.helper.url' => array('class' => 'Mautic\\CoreBundle\\Helper\\UrlHelper', 'arguments' => array(0 => 'mautic.http.connector', 1 => '%mautic.link_shortener_url%', 2 => 'monolog.logger.mautic')), 'mautic.helper.menu' => array('class' => 'Mautic\\CoreBundle\\Menu\\MenuHelper', 'arguments' => array(0 => 'mautic.security', 1 => 'request_stack', 2 => '%mautic.parameters%')), 'mautic.menu_renderer' => array('class' => 'Mautic\\CoreBundle\\Menu\\MenuRenderer', 'arguments' => array(0 => 'knp_menu.matcher', 1 => 'mautic.factory', 2 => '%kernel.charset%'), 'tag' => 'knp_menu.renderer', 'alias' => 'mautic'), 'mautic.menu.builder' => array('class' => 'Mautic\\CoreBundle\\Menu\\MenuBuilder', 'arguments' => array(0 => 'knp_menu.factory', 1 => 'knp_menu.matcher', 2 => 'event_dispatcher', 3 => 'mautic.helper.menu')), 'mautic.ip_lookup.factory' => array('class' => 'Mautic\\CoreBundle\\Factory\\IpLookupFactory', 'arguments' => array(0 => '%mautic.ip_lookup_services%', 1 => 'monolog.logger.mautic', 2 => 'mautic.http.connector', 3 => '%kernel.cache_dir%')), 'mautic.ip_lookup' => array('class' => 'Mautic\\CoreBundle\\IpLookup\\AbstractLookup', 'factory' => array(0 => '@mautic.ip_lookup.factory', 1 => 'getService'), 'arguments' => array(0 => '%mautic.ip_lookup_service%', 1 => '%mautic.ip_lookup_auth%', 2 => '%mautic.ip_lookup_config%', 3 => 'mautic.http.connector')), 'mautic.http.connector' => array('class' => 'Joomla\\Http\\Http', 'factory' => array(0 => 'Joomla\\Http\\HttpFactory', 1 => 'getHttp')), 'twig.controller.exception.class' => 'Mautic\\CoreBundle\\Controller\\ExceptionController', 'monolog.handler.stream.class' => 'Mautic\\CoreBundle\\Monolog\\Handler\\PhpHandler', 'mautic.form.extension.custom' => array('class' => 'Mautic\\CoreBundle\\Form\\Extension\\CustomFormExtension', 'arguments' => array(0 => 'event_dispatcher'), 'tag' => 'form.type_extension', 'tagArguments' => array('alias' => 'form')), 'templating.twig.extension.slot' => array('class' => 'Mautic\\CoreBundle\\Templating\\Twig\\Extension\\SlotExtension', 'arguments' => array(0 => 'mautic.factory'), 'tag' => 'twig.extension'), 'templating.twig.extension.asset' => array('class' => 'Mautic\\CoreBundle\\Templating\\Twig\\Extension\\AssetExtension', 'arguments' => array(0 => 'templating.helper.assets'), 'tag' => 'twig.extension'), 'mautic.schema.helper.factory' => array('class' => 'Mautic\\CoreBundle\\Doctrine\\Helper\\SchemaHelperFactory', 'arguments' => array(0 => 'mautic.schema.helper.table', 1 => 'mautic.schema.helper.index', 2 => 'mautic.schema.helper.column')), 'mautic.schema.helper.column' => array('class' => 'Mautic\\CoreBundle\\Doctrine\\Helper\\ColumnSchemaHelper', 'arguments' => array(0 => 'database_connection', 1 => '%mautic.db_table_prefix%')), 'mautic.schema.helper.index' => array('class' => 'Mautic\\CoreBundle\\Doctrine\\Helper\\IndexSchemaHelper', 'arguments' => array(0 => 'database_connection', 1 => '%mautic.db_table_prefix%')), 'mautic.schema.helper.table' => array('class' => 'Mautic\\CoreBundle\\Doctrine\\Helper\\TableSchemaHelper', 'arguments' => array(0 => 'database_connection', 1 => '%mautic.db_table_prefix%', 2 => 'mautic.schema.helper.column'))), 'models' => array('mautic.core.model.auditlog' => array('class' => 'Mautic\\CoreBundle\\Model\\AuditLogModel'), 'mautic.core.model.notification' => array('class' => 'Mautic\\CoreBundle\\Model\\NotificationModel', 'arguments' => array(0 => 'mautic.helper.paths', 1 => 'mautic.helper.update', 2 => 'debril.reader', 3 => 'mautic.helper.core_parameters'), 'methodCalls' => array('setDisableUpdates' => array(0 => '%mautic.security.disableUpdates%'))), 'mautic.core.model.form' => array('class' => 'Mautic\\CoreBundle\\Model\\FormModel'), 'mautic.core.model.messagequeue' => array('class' => 'Mautic\\CoreBundle\\Model\\MessageQueueModel', 'arguments' => array(0 => 'mautic.lead.model.lead', 1 => 'mautic.lead.model.company', 2 => 'mautic.helper.core_parameters')))), 'ip_lookup_services' => array('freegeoip' => array('display_name' => 'Freegeoip.net', 'class' => 'Mautic\\CoreBundle\\IpLookup\\FreegeoipLookup'), 'geobytes' => array('display_name' => 'Geobytes', 'class' => 'Mautic\\CoreBundle\\IpLookup\\GeobytesLookup'), 'geoips' => array('display_name' => 'GeoIPs', 'class' => 'Mautic\\CoreBundle\\IpLookup\\GeoipsLookup'), 'ipinfodb' => array('display_name' => 'IPInfoDB', 'class' => 'Mautic\\CoreBundle\\IpLookup\\IpinfodbLookup'), 'maxmind_country' => array('display_name' => 'MaxMind - Country Geolocation', 'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindCountryLookup'), 'maxmind_omni' => array('display_name' => 'MaxMind - Insights (formerly Omni]', 'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindOmniLookup'), 'maxmind_precision' => array('display_name' => 'MaxMind - GeoIP2 Precision', 'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindPrecisionLookup'), 'maxmind_download' => array('display_name' => 'MaxMind - GeoLite2 City Download', 'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindDownloadLookup'), 'telize' => array('display_name' => 'Telize', 'class' => 'Mautic\\CoreBundle\\IpLookup\\TelizeLookup'), 'ip2loctionlocal' => array('display_name' => 'IP2Location Local Bin File', 'class' => 'Mautic\\CoreBundle\\IpLookup\\IP2LocationBinLookup'), 'ip2loctionapi' => array('display_name' => 'IP2Location Web Service', 'class' => 'Mautic\\CoreBundle\\IpLookup\\IP2LocationAPILookup')), 'parameters' => array('site_url' => '', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => '127.0.0.1', 'db_port' => 3306, 'db_name' => '', 'db_user' => '', 'db_password' => '', 'db_table_prefix' => '', 'db_server_version' => '5.5', 'locale' => 'en_US', 'secret_key' => '', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification'))), 'MauticApiBundle' => array('isPlugin' => false, 'base' => 'Api', 'bundle' => 'ApiBundle', 'namespace' => 'Mautic\\ApiBundle', 'symfonyBundleName' => 'MauticApiBundle', 'bundleClass' => 'Mautic\\ApiBundle\\MauticApiBundle', 'permissionClasses' => array('api' => '\\Mautic\\ApiBundle\\Security\\Permissions\\ApiPermissions'), 'relative' => 'app/bundles/ApiBundle', 'directory' => ($this->targetDirs[2].'/bundles/ApiBundle'), 'config' => array('routes' => array('public' => array('bazinga_oauth_server_requesttoken' => array('path' => '/oauth/v1/request_token', 'controller' => 'bazinga.oauth.controller.server:requestTokenAction', 'method' => 'GET|POST'), 'bazinga_oauth_login_allow' => array('path' => '/oauth/v1/authorize', 'controller' => 'MauticApiBundle:oAuth1/Authorize:allow', 'method' => 'GET'), 'bazinga_oauth_server_authorize' => array('path' => '/oauth/v1/authorize', 'controller' => 'bazinga.oauth.controller.server:authorizeAction', 'method' => 'POST'), 'mautic_oauth1_server_auth_login' => array('path' => '/oauth/v1/authorize_login', 'controller' => 'MauticApiBundle:oAuth1/Security:login', 'method' => 'GET|POST'), 'mautic_oauth1_server_auth_login_check' => array('path' => '/oauth/v1/authorize_login_check', 'controller' => 'MauticApiBundle:oAuth1/Security:loginCheck', 'method' => 'GET|POST'), 'bazinga_oauth_server_accesstoken' => array('path' => '/oauth/v1/access_token', 'controller' => 'bazinga.oauth.controller.server:accessTokenAction', 'method' => 'GET|POST'), 'fos_oauth_server_token' => array('path' => '/oauth/v2/token', 'controller' => 'fos_oauth_server.controller.token:tokenAction', 'method' => 'GET|POST'), 'fos_oauth_server_authorize' => array('path' => '/oauth/v2/authorize', 'controller' => 'MauticApiBundle:oAuth2/Authorize:authorize', 'method' => 'GET|POST'), 'mautic_oauth2_server_auth_login' => array('path' => '/oauth/v2/authorize_login', 'controller' => 'MauticApiBundle:oAuth2/Security:login', 'method' => 'GET|POST'), 'mautic_oauth2_server_auth_login_check' => array('path' => '/oauth/v2/authorize_login_check', 'controller' => 'MauticApiBundle:oAuth2/Security:loginCheck', 'method' => 'GET|POST')), 'main' => array('mautic_client_index' => array('path' => '/credentials/{page}', 'controller' => 'MauticApiBundle:Client:index'), 'mautic_client_action' => array('path' => '/credentials/{objectAction}/{objectId}', 'controller' => 'MauticApiBundle:Client:execute'))), 'menu' => array('admin' => array('items' => array('mautic.api.client.menu.index' => array('route' => 'mautic_client_index', 'iconClass' => 'fa-puzzle-piece', 'access' => 'api:clients:view', 'checks' => array('parameters' => array('api_enabled' => true)))))), 'services' => array('events' => array('mautic.api.subscriber' => array('class' => 'Mautic\\ApiBundle\\EventListener\\ApiSubscriber', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.helper.core_parameters', 2 => 'mautic.core.model.auditlog')), 'mautic.api.configbundle.subscriber' => array('class' => 'Mautic\\ApiBundle\\EventListener\\ConfigSubscriber'), 'mautic.api.search.subscriber' => array('class' => 'Mautic\\ApiBundle\\EventListener\\SearchSubscriber', 'arguments' => array(0 => 'mautic.api.model.client'))), 'forms' => array('mautic.form.type.apiclients' => array('class' => 'Mautic\\ApiBundle\\Form\\Type\\ClientType', 'arguments' => 'mautic.factory', 'alias' => 'client'), 'mautic.form.type.apiconfig' => array('class' => 'Mautic\\ApiBundle\\Form\\Type\\ConfigType', 'alias' => 'apiconfig')), 'other' => array('mautic.api.oauth.event_listener' => array('class' => 'Mautic\\ApiBundle\\EventListener\\OAuthEventListener', 'arguments' => array(0 => 'doctrine.orm.entity_manager', 1 => 'mautic.security', 2 => 'translator'), 'tags' => array(0 => 'kernel.event_listener', 1 => 'kernel.event_listener'), 'tagArguments' => array(0 => array('event' => 'fos_oauth_server.pre_authorization_process', 'method' => 'onPreAuthorizationProcess'), 1 => array('event' => 'fos_oauth_server.post_authorization_process', 'method' => 'onPostAuthorizationProcess'))), 'mautic.api.oauth1.nonce_provider' => array('class' => 'Mautic\\ApiBundle\\Provider\\NonceProvider', 'arguments' => 'doctrine.orm.entity_manager'), 'bazinga.oauth.security.authentication.provider.class' => 'Mautic\\ApiBundle\\Security\\OAuth1\\Authentication\\Provider\\OAuthProvider', 'bazinga.oauth.security.authentication.listener.class' => 'Mautic\\ApiBundle\\Security\\OAuth1\\Firewall\\OAuthListener', 'bazinga.oauth.event_listener.request.class' => 'Mautic\\ApiBundle\\EventListener\\OAuth1\\OAuthRequestListener', 'fos_oauth_server.security.authentication.listener.class' => 'Mautic\\ApiBundle\\Security\\OAuth2\\Firewall\\OAuthListener', 'jms_serializer.metadata.annotation_driver.class' => 'Mautic\\ApiBundle\\Serializer\\Driver\\AnnotationDriver', 'jms_serializer.metadata.php_driver.class' => 'Mautic\\ApiBundle\\Serializer\\Driver\\ApiMetadataDriver', 'mautic.validator.oauthcallback' => array('class' => 'Mautic\\ApiBundle\\Form\\Validator\\Constraints\\OAuthCallbackValidator', 'tag' => 'validator.constraint_validator', 'alias' => 'oauth_callback')), 'models' => array('mautic.api.model.client' => array('class' => 'Mautic\\ApiBundle\\Model\\ClientModel', 'arguments' => array(0 => 'request_stack')))), 'parameters' => array('api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200))), 'MauticAssetBundle' => array('isPlugin' => false, 'base' => 'Asset', 'bundle' => 'AssetBundle', 'namespace' => 'Mautic\\AssetBundle', 'symfonyBundleName' => 'MauticAssetBundle', 'bundleClass' => 'Mautic\\AssetBundle\\MauticAssetBundle', 'permissionClasses' => array('asset' => '\\Mautic\\AssetBundle\\Security\\Permissions\\AssetPermissions'), 'relative' => 'app/bundles/AssetBundle', 'directory' => ($this->targetDirs[2].'/bundles/AssetBundle'), 'config' => array('routes' => array('main' => array('mautic_asset_index' => array('path' => '/assets/{page}', 'controller' => 'MauticAssetBundle:Asset:index'), 'mautic_asset_remote' => array('path' => '/assets/remote', 'controller' => 'MauticAssetBundle:Asset:remote'), 'mautic_asset_action' => array('path' => '/assets/{objectAction}/{objectId}', 'controller' => 'MauticAssetBundle:Asset:execute')), 'api' => array('mautic_api_assetsstandard' => array('standard_entity' => true, 'name' => 'assets', 'path' => '/assets', 'controller' => 'MauticAssetBundle:Api\\AssetApi')), 'public' => array('mautic_asset_download' => array('path' => '/asset/{slug}', 'controller' => 'MauticAssetBundle:Public:download', 'defaults' => array('slug' => '')))), 'menu' => array('main' => array('items' => array('mautic.asset.assets' => array('route' => 'mautic_asset_index', 'access' => array(0 => 'asset:assets:viewown', 1 => 'asset:assets:viewother'), 'parent' => 'mautic.core.components', 'priority' => 300)))), 'categories' => array('asset' => NULL), 'services' => array('events' => array('mautic.asset.subscriber' => array('class' => 'Mautic\\AssetBundle\\EventListener\\AssetSubscriber', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.core.model.auditlog')), 'mautic.asset.pointbundle.subscriber' => array('class' => 'Mautic\\AssetBundle\\EventListener\\PointSubscriber', 'arguments' => array(0 => 'mautic.point.model.point')), 'mautic.asset.formbundle.subscriber' => array('class' => 'Mautic\\AssetBundle\\EventListener\\FormSubscriber'), 'mautic.asset.campaignbundle.subscriber' => array('class' => 'Mautic\\AssetBundle\\EventListener\\CampaignSubscriber', 'arguments' => array(0 => 'mautic.campaign.model.event')), 'mautic.asset.reportbundle.subscriber' => array('class' => 'Mautic\\AssetBundle\\EventListener\\ReportSubscriber'), 'mautic.asset.builder.subscriber' => array('class' => 'Mautic\\AssetBundle\\EventListener\\BuilderSubscriber', 'arguments' => array(0 => 'mautic.asset.helper.token', 1 => 'mautic.lead.model.lead')), 'mautic.asset.leadbundle.subscriber' => array('class' => 'Mautic\\AssetBundle\\EventListener\\LeadSubscriber', 'arguments' => array(0 => 'mautic.asset.model.asset')), 'mautic.asset.pagebundle.subscriber' => array('class' => 'Mautic\\AssetBundle\\EventListener\\PageSubscriber'), 'mautic.asset.emailbundle.subscriber' => array('class' => 'Mautic\\AssetBundle\\EventListener\\EmailSubscriber'), 'mautic.asset.configbundle.subscriber' => array('class' => 'Mautic\\AssetBundle\\EventListener\\ConfigSubscriber'), 'mautic.asset.search.subscriber' => array('class' => 'Mautic\\AssetBundle\\EventListener\\SearchSubscriber', 'arguments' => array(0 => 'mautic.asset.model.asset')), 'mautic.asset.stats.subscriber' => array('class' => 'Mautic\\AssetBundle\\EventListener\\StatsSubscriber', 'arguments' => array(0 => 'doctrine.orm.entity_manager')), 'oneup_uploader.pre_upload' => array('class' => 'Mautic\\AssetBundle\\EventListener\\UploadSubscriber', 'arguments' => array(0 => 'translator', 1 => 'mautic.helper.core_parameters', 2 => 'mautic.asset.model.asset')), 'mautic.asset.dashboard.subscriber' => array('class' => 'Mautic\\AssetBundle\\EventListener\\DashboardSubscriber', 'arguments' => array(0 => 'mautic.asset.model.asset'))), 'forms' => array('mautic.form.type.asset' => array('class' => 'Mautic\\AssetBundle\\Form\\Type\\AssetType', 'arguments' => array(0 => 'translator', 1 => 'mautic.helper.theme', 2 => 'mautic.asset.model.asset'), 'alias' => 'asset'), 'mautic.form.type.pointaction_assetdownload' => array('class' => 'Mautic\\AssetBundle\\Form\\Type\\PointActionAssetDownloadType', 'alias' => 'pointaction_assetdownload'), 'mautic.form.type.campaignevent_assetdownload' => array('class' => 'Mautic\\AssetBundle\\Form\\Type\\CampaignEventAssetDownloadType', 'alias' => 'campaignevent_assetdownload'), 'mautic.form.type.formsubmit_assetdownload' => array('class' => 'Mautic\\AssetBundle\\Form\\Type\\FormSubmitActionDownloadFileType', 'alias' => 'asset_submitaction_downloadfile'), 'mautic.form.type.assetlist' => array('class' => 'Mautic\\AssetBundle\\Form\\Type\\AssetListType', 'arguments' => 'mautic.factory', 'alias' => 'asset_list'), 'mautic.form.type.assetconfig' => array('class' => 'Mautic\\AssetBundle\\Form\\Type\\ConfigType', 'arguments' => 'mautic.factory', 'alias' => 'assetconfig'), 'mautic.form.type.asset_dashboard_downloads_in_time_widget' => array('class' => 'Mautic\\AssetBundle\\Form\\Type\\DashboardDownloadsInTimeWidgetType', 'alias' => 'asset_dashboard_downloads_in_time_widget')), 'others' => array('mautic.asset.upload.error.handler' => array('class' => 'Mautic\\AssetBundle\\ErrorHandler\\DropzoneErrorHandler', 'arguments' => 'mautic.factory'), 'oneup_uploader.controller.dropzone.class' => 'Mautic\\AssetBundle\\Controller\\UploadController', 'mautic.asset.helper.token' => array('class' => 'Mautic\\AssetBundle\\Helper\\TokenHelper', 'arguments' => 'mautic.asset.model.asset')), 'models' => array('mautic.asset.model.asset' => array('class' => 'Mautic\\AssetBundle\\Model\\AssetModel', 'arguments' => array(0 => 'mautic.lead.model.lead', 1 => 'mautic.category.model.category', 2 => 'request_stack', 3 => 'mautic.helper.ip_lookup', 4 => 'mautic.helper.core_parameters')))), 'parameters' => array('upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav')))), 'MauticCalendarBundle' => array('isPlugin' => false, 'base' => 'Calendar', 'bundle' => 'CalendarBundle', 'namespace' => 'Mautic\\CalendarBundle', 'symfonyBundleName' => 'MauticCalendarBundle', 'bundleClass' => 'Mautic\\CalendarBundle\\MauticCalendarBundle', 'permissionClasses' => array(), 'relative' => 'app/bundles/CalendarBundle', 'directory' => ($this->targetDirs[2].'/bundles/CalendarBundle'), 'config' => array('routes' => array('main' => array('mautic_calendar_index' => array('path' => '/calendar', 'controller' => 'MauticCalendarBundle:Default:index'), 'mautic_calendar_action' => array('path' => '/calendar/{objectAction}', 'controller' => 'MauticCalendarBundle:Default:execute'))), 'services' => array('models' => array('mautic.calendar.model.calendar' => array('class' => 'Mautic\\CalendarBundle\\Model\\CalendarModel'))), 'menu' => array('main' => array('priority' => 90, 'items' => array('mautic.calendar.menu.index' => array('route' => 'mautic_calendar_index', 'iconClass' => 'fa-calendar')))))), 'MauticCampaignBundle' => array('isPlugin' => false, 'base' => 'Campaign', 'bundle' => 'CampaignBundle', 'namespace' => 'Mautic\\CampaignBundle', 'symfonyBundleName' => 'MauticCampaignBundle', 'bundleClass' => 'Mautic\\CampaignBundle\\MauticCampaignBundle', 'permissionClasses' => array('campaign' => '\\Mautic\\CampaignBundle\\Security\\Permissions\\CampaignPermissions'), 'relative' => 'app/bundles/CampaignBundle', 'directory' => ($this->targetDirs[2].'/bundles/CampaignBundle'), 'config' => array('routes' => array('main' => array('mautic_campaignevent_action' => array('path' => '/campaigns/events/{objectAction}/{objectId}', 'controller' => 'MauticCampaignBundle:Event:execute'), 'mautic_campaignsource_action' => array('path' => '/campaigns/sources/{objectAction}/{objectId}', 'controller' => 'MauticCampaignBundle:Source:execute'), 'mautic_campaign_index' => array('path' => '/campaigns/{page}', 'controller' => 'MauticCampaignBundle:Campaign:index'), 'mautic_campaign_action' => array('path' => '/campaigns/{objectAction}/{objectId}', 'controller' => 'MauticCampaignBundle:Campaign:execute'), 'mautic_campaign_contacts' => array('path' => '/campaigns/view/{objectId}/contact/{page}', 'controller' => 'MauticCampaignBundle:Campaign:contacts'), 'mautic_campaign_preview' => array('path' => '/campaign/preview/{objectId}', 'controller' => 'MauticEmailBundle:Public:preview')), 'api' => array('mautic_api_campaignsstandard' => array('standard_entity' => true, 'name' => 'campaigns', 'path' => '/campaigns', 'controller' => 'MauticCampaignBundle:Api\\CampaignApi'), 'mautic_api_campaigneventsstandard' => array('standard_entity' => true, 'supported_endpoints' => array(0 => 'getone', 1 => 'getall'), 'name' => 'events', 'path' => '/campaigns/events', 'controller' => 'MauticCampaignBundle:Api\\EventApi'), 'mautic_api_campaigns_events_contact' => array('path' => '/campaigns/events/contact/{contactId}', 'controller' => 'MauticCampaignBundle:Api\\EventLogApi:getContactEvents', 'method' => 'GET'), 'mautic_api_campaigns_edit_contact_event' => array('path' => '/campaigns/events/{eventId}/contact/{contactId}/edit', 'controller' => 'MauticCampaignBundle:Api\\EventLogApi:editContactEvent', 'method' => 'PUT'), 'mautic_api_campaigns_batchedit_events' => array('path' => '/campaigns/events/batch/edit', 'controller' => 'MauticCampaignBundle:Api\\EventLogApi:editEvents', 'method' => 'PUT'), 'mautic_api_campaign_contact_events' => array('path' => '/campaigns/{campaignId}/events/contact/{contactId}', 'controller' => 'MauticCampaignBundle:Api\\EventLogApi:getContactEvents', 'method' => 'GET'), 'mautic_api_campaigngetcontacts' => array('path' => '/campaigns/{id}/contacts', 'controller' => 'MauticCampaignBundle:Api\\CampaignApi:getContacts'), 'mautic_api_campaignaddcontact' => array('path' => '/campaigns/{id}/contact/{leadId}/add', 'controller' => 'MauticCampaignBundle:Api\\CampaignApi:addLead', 'method' => 'POST'), 'mautic_api_campaignremovecontact' => array('path' => '/campaigns/{id}/contact/{leadId}/remove', 'controller' => 'MauticCampaignBundle:Api\\CampaignApi:removeLead', 'method' => 'POST'), 'bc_mautic_api_campaignaddcontact' => array('path' => '/campaigns/{id}/contact/add/{leadId}', 'controller' => 'MauticCampaignBundle:Api\\CampaignApi:addLead', 'method' => 'POST'), 'bc_mautic_api_campaignremovecontact' => array('path' => '/campaigns/{id}/contact/remove/{leadId}', 'controller' => 'MauticCampaignBundle:Api\\CampaignApi:removeLead', 'method' => 'POST'))), 'menu' => array('main' => array('mautic.campaign.menu.index' => array('iconClass' => 'fa-clock-o', 'route' => 'mautic_campaign_index', 'access' => 'campaign:campaigns:view', 'priority' => 50))), 'categories' => array('campaign' => NULL), 'services' => array('events' => array('mautic.campaign.subscriber' => array('class' => 'Mautic\\CampaignBundle\\EventListener\\CampaignSubscriber', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.core.model.auditlog')), 'mautic.campaign.leadbundle.subscriber' => array('class' => 'Mautic\\CampaignBundle\\EventListener\\LeadSubscriber', 'arguments' => array(0 => 'mautic.campaign.model.campaign', 1 => 'mautic.lead.model.lead')), 'mautic.campaign.calendarbundle.subscriber' => array('class' => 'Mautic\\CampaignBundle\\EventListener\\CalendarSubscriber'), 'mautic.campaign.pointbundle.subscriber' => array('class' => 'Mautic\\CampaignBundle\\EventListener\\PointSubscriber'), 'mautic.campaign.search.subscriber' => array('class' => 'Mautic\\CampaignBundle\\EventListener\\SearchSubscriber', 'arguments' => array(0 => 'mautic.campaign.model.campaign')), 'mautic.campaign.dashboard.subscriber' => array('class' => 'Mautic\\CampaignBundle\\EventListener\\DashboardSubscriber', 'arguments' => array(0 => 'mautic.campaign.model.campaign', 1 => 'mautic.campaign.model.event')), 'mautic.campaignconfigbundle.subscriber' => array('class' => 'Mautic\\CampaignBundle\\EventListener\\ConfigSubscriber'), 'mautic.campaign.stats.subscriber' => array('class' => 'Mautic\\CampaignBundle\\EventListener\\StatsSubscriber', 'arguments' => array(0 => 'doctrine.orm.entity_manager')), 'mautic.campaign.report.subscriber' => array('class' => 'Mautic\\CampaignBundle\\EventListener\\ReportSubscriber')), 'forms' => array('mautic.campaign.type.form' => array('class' => 'Mautic\\CampaignBundle\\Form\\Type\\CampaignType', 'arguments' => 'mautic.factory', 'alias' => 'campaign'), 'mautic.campaignrange.type.action' => array('class' => 'Mautic\\CampaignBundle\\Form\\Type\\EventType', 'alias' => 'campaignevent'), 'mautic.campaign.type.campaignlist' => array('class' => 'Mautic\\CampaignBundle\\Form\\Type\\CampaignListType', 'arguments' => 'mautic.factory', 'alias' => 'campaign_list'), 'mautic.campaign.type.trigger.leadchange' => array('class' => 'Mautic\\CampaignBundle\\Form\\Type\\CampaignEventLeadChangeType', 'alias' => 'campaignevent_leadchange'), 'mautic.campaign.type.action.addremovelead' => array('class' => 'Mautic\\CampaignBundle\\Form\\Type\\CampaignEventAddRemoveLeadType', 'alias' => 'campaignevent_addremovelead'), 'mautic.campaign.type.canvassettings' => array('class' => 'Mautic\\CampaignBundle\\Form\\Type\\EventCanvasSettingsType', 'alias' => 'campaignevent_canvassettings'), 'mautic.campaign.type.leadsource' => array('class' => 'Mautic\\CampaignBundle\\Form\\Type\\CampaignLeadSourceType', 'arguments' => 'mautic.factory', 'alias' => 'campaign_leadsource'), 'mautic.form.type.campaignconfig' => array('class' => 'Mautic\\CampaignBundle\\Form\\Type\\ConfigType', 'arguments' => 'mautic.factory', 'alias' => 'campaignconfig')), 'models' => array('mautic.campaign.model.campaign' => array('class' => 'Mautic\\CampaignBundle\\Model\\CampaignModel', 'arguments' => array(0 => 'mautic.helper.core_parameters', 1 => 'mautic.lead.model.lead', 2 => 'mautic.lead.model.list', 3 => 'mautic.form.model.form')), 'mautic.campaign.model.event' => array('class' => 'Mautic\\CampaignBundle\\Model\\EventModel', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.helper.core_parameters', 2 => 'mautic.lead.model.lead', 3 => 'mautic.campaign.model.campaign', 4 => 'mautic.user.model.user', 5 => 'mautic.core.model.notification', 6 => 'mautic.factory')), 'mautic.campaign.model.event_log' => array('class' => 'Mautic\\CampaignBundle\\Model\\EventLogModel', 'arguments' => array(0 => 'mautic.campaign.model.event', 1 => 'mautic.campaign.model.campaign')))), 'parameters' => array('campaign_time_wait_on_event_false' => 'PT1H'))), 'MauticCategoryBundle' => array('isPlugin' => false, 'base' => 'Category', 'bundle' => 'CategoryBundle', 'namespace' => 'Mautic\\CategoryBundle', 'symfonyBundleName' => 'MauticCategoryBundle', 'bundleClass' => 'Mautic\\CategoryBundle\\MauticCategoryBundle', 'permissionClasses' => array('category' => '\\Mautic\\CategoryBundle\\Security\\Permissions\\CategoryPermissions'), 'relative' => 'app/bundles/CategoryBundle', 'directory' => ($this->targetDirs[2].'/bundles/CategoryBundle'), 'config' => array('routes' => array('main' => array('mautic_category_index' => array('path' => '/categories/{bundle}/{page}', 'controller' => 'MauticCategoryBundle:Category:index', 'defaults' => array('bundle' => 'category')), 'mautic_category_action' => array('path' => '/categories/{bundle}/{objectAction}/{objectId}', 'controller' => 'MauticCategoryBundle:Category:executeCategory', 'defaults' => array('bundle' => 'category'))), 'api' => array('mautic_api_categoriesstandard' => array('standard_entity' => true, 'name' => 'categories', 'path' => '/categories', 'controller' => 'MauticCategoryBundle:Api\\CategoryApi'))), 'menu' => array('admin' => array('mautic.category.menu.index' => array('route' => 'mautic_category_index', 'access' => 'category:categories:view', 'iconClass' => 'fa-folder', 'id' => 'mautic_category_index'))), 'services' => array('events' => array('mautic.category.subscriber' => array('class' => 'Mautic\\CategoryBundle\\EventListener\\CategorySubscriber', 'arguments' => array(0 => 'mautic.helper.bundle', 1 => 'mautic.helper.ip_lookup', 2 => 'mautic.core.model.auditlog'))), 'forms' => array('mautic.form.type.category' => array('class' => 'Mautic\\CategoryBundle\\Form\\Type\\CategoryListType', 'arguments' => array(0 => 'doctrine.orm.entity_manager', 1 => 'translator', 2 => 'mautic.category.model.category', 3 => 'router'), 'alias' => 'category'), 'mautic.form.type.category_form' => array('class' => 'Mautic\\CategoryBundle\\Form\\Type\\CategoryType', 'alias' => 'category_form', 'arguments' => array(0 => 'translator', 1 => 'session')), 'mautic.form.type.category_bundles_form' => array('class' => 'Mautic\\CategoryBundle\\Form\\Type\\CategoryBundlesType', 'arguments' => array(0 => 'event_dispatcher'), 'alias' => 'category_bundles_form')), 'models' => array('mautic.category.model.category' => array('class' => 'Mautic\\CategoryBundle\\Model\\CategoryModel', 'arguments' => array(0 => 'request_stack')))))), 'MauticChannelBundle' => array('isPlugin' => false, 'base' => 'Channel', 'bundle' => 'ChannelBundle', 'namespace' => 'Mautic\\ChannelBundle', 'symfonyBundleName' => 'MauticChannelBundle', 'bundleClass' => 'Mautic\\ChannelBundle\\MauticChannelBundle', 'permissionClasses' => array('channel' => '\\Mautic\\ChannelBundle\\Security\\Permissions\\ChannelPermissions'), 'relative' => 'app/bundles/ChannelBundle', 'directory' => ($this->targetDirs[2].'/bundles/ChannelBundle'), 'config' => array('routes' => array('main' => array('mautic_message_index' => array('path' => '/messages/{page}', 'controller' => 'MauticChannelBundle:Message:index'), 'mautic_message_contacts' => array('path' => '/messages/contacts/{objectId}/{channel}/{page}', 'controller' => 'MauticChannelBundle:Message:contacts'), 'mautic_message_action' => array('path' => '/messages/{objectAction}/{objectId}', 'controller' => 'MauticChannelBundle:Message:execute')), 'api' => array('mautic_api_messagetandard' => array('standard_entity' => true, 'name' => 'messages', 'path' => '/messages', 'controller' => 'MauticChannelBundle:Api\\MessageApi')), 'public' => array()), 'menu' => array('main' => array('mautic.channel.messages' => array('route' => 'mautic_message_index', 'access' => array(0 => 'channel:messages:viewown', 1 => 'channel:messages:viewother'), 'parent' => 'mautic.core.channels', 'priority' => 110)), 'admin' => array(), 'profile' => array(), 'extra' => array()), 'categories' => array(0 => 'messages'), 'services' => array('events' => array('mautic.channel.campaignbundle.subscriber' => array('class' => 'Mautic\\ChannelBundle\\EventListener\\CampaignSubscriber', 'arguments' => array(0 => 'mautic.channel.model.message', 1 => 'mautic.campaign.model.campaign', 2 => 'mautic.campaign.model.event')), 'mautic.channel.channelbundle.subscriber' => array('class' => 'Mautic\\ChannelBundle\\EventListener\\MessageSubscriber', 'arguments' => array(0 => 'mautic.core.model.auditlog'))), 'forms' => array('Mautic\\ChannelBundle\\Form\\Type\\MessageType' => array('class' => 'Mautic\\ChannelBundle\\Form\\Type\\MessageType', 'methodCalls' => array('setSecurity' => array(0 => 'mautic.security')), 'arguments' => array(0 => 'mautic.channel.model.message')), 'mautic.form.type.message_list' => array('class' => 'Mautic\\ChannelBundle\\Form\\Type\\MessageListType', 'alias' => 'message_list'), 'mautic.form.type.message_send' => array('class' => 'Mautic\\ChannelBundle\\Form\\Type\\MessageSendType', 'arguments' => array(0 => 'router', 1 => 'mautic.channel.model.message'), 'alias' => 'message_send')), 'helpers' => array('mautic.channel.helper.channel_list' => array('class' => 'Mautic\\ChannelBundle\\Helper\\ChannelListHelper', 'arguments' => array(0 => 'event_dispatcher', 1 => 'translator'), 'alias' => 'channel')), 'models' => array('mautic.channel.model.message' => array('class' => 'Mautic\\ChannelBundle\\Model\\MessageModel', 'arguments' => array(0 => 'mautic.channel.helper.channel_list', 1 => 'mautic.campaign.model.campaign')), 'mautic.channel.model.queue' => array('class' => 'Mautic\\ChannelBundle\\Model\\MessageQueueModel', 'arguments' => array(0 => 'mautic.lead.model.lead', 1 => 'mautic.lead.model.company', 2 => 'mautic.helper.core_parameters')))), 'parameters' => array())), 'MauticConfigBundle' => array('isPlugin' => false, 'base' => 'Config', 'bundle' => 'ConfigBundle', 'namespace' => 'Mautic\\ConfigBundle', 'symfonyBundleName' => 'MauticConfigBundle', 'bundleClass' => 'Mautic\\ConfigBundle\\MauticConfigBundle', 'permissionClasses' => array(), 'relative' => 'app/bundles/ConfigBundle', 'directory' => ($this->targetDirs[2].'/bundles/ConfigBundle'), 'config' => array('routes' => array('main' => array('mautic_config_action' => array('path' => '/config/{objectAction}/{objectId}', 'controller' => 'MauticConfigBundle:Config:execute'), 'mautic_sysinfo_index' => array('path' => '/sysinfo', 'controller' => 'MauticConfigBundle:Sysinfo:index'))), 'menu' => array('admin' => array('mautic.config.menu.index' => array('route' => 'mautic_config_action', 'routeParameters' => array('objectAction' => 'edit'), 'iconClass' => 'fa-cogs', 'id' => 'mautic_config_index', 'access' => 'admin'), 'mautic.sysinfo.menu.index' => array('route' => 'mautic_sysinfo_index', 'iconClass' => 'fa-life-ring', 'id' => 'mautic_sysinfo_index', 'access' => 'admin', 'checks' => array('parameters' => array('sysinfo_disabled' => false))))), 'services' => array('events' => array('mautic.config.subscriber' => array('class' => 'Mautic\\ConfigBundle\\EventListener\\ConfigSubscriber')), 'forms' => array('mautic.form.type.config' => array('class' => 'Mautic\\ConfigBundle\\Form\\Type\\ConfigType', 'arguments' => 'translator', 'alias' => 'config')), 'models' => array('mautic.config.model.config' => array('class' => 'Mautic\\ConfigBundle\\Model\\ConfigModel'), 'mautic.config.model.sysinfo' => array('class' => 'Mautic\\ConfigBundle\\Model\\SysinfoModel', 'arguments' => array(0 => 'mautic.helper.paths', 1 => 'mautic.helper.core_parameters')))))), 'MauticDashboardBundle' => array('isPlugin' => false, 'base' => 'Dashboard', 'bundle' => 'DashboardBundle', 'namespace' => 'Mautic\\DashboardBundle', 'symfonyBundleName' => 'MauticDashboardBundle', 'bundleClass' => 'Mautic\\DashboardBundle\\MauticDashboardBundle', 'permissionClasses' => array(), 'relative' => 'app/bundles/DashboardBundle', 'directory' => ($this->targetDirs[2].'/bundles/DashboardBundle'), 'config' => array('routes' => array('main' => array('mautic_dashboard_index' => array('path' => '/dashboard', 'controller' => 'MauticDashboardBundle:Dashboard:index'), 'mautic_dashboard_action' => array('path' => '/dashboard/{objectAction}/{objectId}', 'controller' => 'MauticDashboardBundle:Dashboard:execute')), 'api' => array('mautic_widget_types' => array('path' => '/data', 'controller' => 'MauticDashboardBundle:Api\\WidgetApi:getTypes'), 'mautic_widget_data' => array('path' => '/data/{type}', 'controller' => 'MauticDashboardBundle:Api\\WidgetApi:getData'))), 'menu' => array('main' => array('priority' => 100, 'items' => array('mautic.dashboard.menu.index' => array('route' => 'mautic_dashboard_index', 'iconClass' => 'fa-th-large')))), 'services' => array('events' => array(), 'forms' => array('mautic.dashboard.form.type.widget' => array('class' => 'Mautic\\DashboardBundle\\Form\\Type\\WidgetType', 'arguments' => 'mautic.factory', 'alias' => 'widget'), 'mautic.dashboard.form.uplload' => array('class' => 'Mautic\\DashboardBundle\\Form\\Type\\UploadType', 'arguments' => 'mautic.factory', 'alias' => 'dashboard_upload'), 'mautic.dashboard.form.filter' => array('class' => 'Mautic\\DashboardBundle\\Form\\Type\\FilterType', 'arguments' => 'mautic.factory', 'alias' => 'dashboard_filter')), 'models' => array('mautic.dashboard.model.dashboard' => array('class' => 'Mautic\\DashboardBundle\\Model\\DashboardModel', 'arguments' => array(0 => 'mautic.helper.core_parameters', 1 => 'mautic.helper.paths')))), 'parameters' => array('dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL))), 'MauticDynamicContentBundle' => array('isPlugin' => false, 'base' => 'DynamicContent', 'bundle' => 'DynamicContentBundle', 'namespace' => 'Mautic\\DynamicContentBundle', 'symfonyBundleName' => 'MauticDynamicContentBundle', 'bundleClass' => 'Mautic\\DynamicContentBundle\\MauticDynamicContentBundle', 'permissionClasses' => array('dynamiccontent' => '\\Mautic\\DynamicContentBundle\\Security\\Permissions\\DynamicContentPermissions'), 'relative' => 'app/bundles/DynamicContentBundle', 'directory' => ($this->targetDirs[2].'/bundles/DynamicContentBundle'), 'config' => array('menu' => array('main' => array('items' => array('mautic.dynamicContent.dynamicContent' => array('route' => 'mautic_dynamicContent_index', 'access' => array(0 => 'dynamiccontent:dynamiccontents:viewown', 1 => 'dynamiccontent:dynamiccontents:viewother'), 'parent' => 'mautic.core.components', 'priority' => 90)))), 'routes' => array('main' => array('mautic_dynamicContent_index' => array('path' => '/dwc/{page}', 'controller' => 'MauticDynamicContentBundle:DynamicContent:index'), 'mautic_dynamicContent_action' => array('path' => '/dwc/{objectAction}/{objectId}', 'controller' => 'MauticDynamicContentBundle:DynamicContent:execute')), 'public' => array('mautic_api_dynamicContent_index' => array('path' => '/dwc', 'controller' => 'MauticDynamicContentBundle:DynamicContentApi:getEntities'), 'mautic_api_dynamicContent_action' => array('path' => '/dwc/{objectAlias}', 'controller' => 'MauticDynamicContentBundle:DynamicContentApi:process')), 'api' => array('mautic_api_dynamicContent_standard' => array('standard_entity' => true, 'name' => 'dynamicContents', 'path' => '/dynamiccontents', 'controller' => 'MauticDynamicContentBundle:Api\\DynamicContentApi'))), 'services' => array('events' => array('mautic.dynamicContent.campaignbundle.subscriber' => array('class' => 'Mautic\\DynamicContentBundle\\EventListener\\CampaignSubscriber', 'arguments' => array(0 => 'mautic.lead.model.lead', 1 => 'mautic.dynamicContent.model.dynamicContent', 2 => 'session')), 'mautic.dynamicContent.js.subscriber' => array('class' => 'Mautic\\DynamicContentBundle\\EventListener\\BuildJsSubscriber', 'arguments' => array(0 => 'mautic.form.model.form', 1 => 'templating.helper.assets')), 'mautic.dynamicContent.subscriber' => array('class' => 'Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber', 'arguments' => array(0 => 'mautic.page.model.trackable', 1 => 'mautic.page.helper.token', 2 => 'mautic.asset.helper.token', 3 => 'mautic.form.helper.token', 4 => 'mautic.focus.helper.token', 5 => 'mautic.core.model.auditlog')), 'mautic.dynamicContent.subscriber.channel' => array('class' => 'Mautic\\DynamicContentBundle\\EventListener\\ChannelSubscriber'), 'mautic.dynamicContent.stats.subscriber' => array('class' => 'Mautic\\DynamicContentBundle\\EventListener\\StatsSubscriber', 'arguments' => array(0 => 'doctrine.orm.entity_manager'))), 'forms' => array('mautic.form.type.dwc' => array('class' => 'Mautic\\DynamicContentBundle\\Form\\Type\\DynamicContentType', 'arguments' => array(0 => 'doctrine.orm.entity_manager'), 'alias' => 'dwc'), 'mautic.form.type.dwcsend_list' => array('class' => 'Mautic\\DynamicContentBundle\\Form\\Type\\DynamicContentSendType', 'arguments' => array(0 => 'router'), 'alias' => 'dwcsend_list'), 'mautic.form.type.dwcdecision_list' => array('class' => 'Mautic\\DynamicContentBundle\\Form\\Type\\DynamicContentDecisionType', 'arguments' => array(0 => 'router'), 'alias' => 'dwcdecision_list'), 'mautic.form.type.dwc_list' => array('class' => 'Mautic\\DynamicContentBundle\\Form\\Type\\DynamicContentListType', 'alias' => 'dwc_list')), 'models' => array('mautic.dynamicContent.model.dynamicContent' => array('class' => 'Mautic\\DynamicContentBundle\\Model\\DynamicContentModel', 'arguments' => array())), 'other' => array('mautic.helper.dynamicContent' => array('class' => 'Mautic\\DynamicContentBundle\\Helper\\DynamicContentHelper', 'arguments' => array(0 => 'mautic.dynamicContent.model.dynamicContent', 1 => 'mautic.campaign.model.event', 2 => 'event_dispatcher')))))), 'MauticEmailBundle' => array('isPlugin' => false, 'base' => 'Email', 'bundle' => 'EmailBundle', 'namespace' => 'Mautic\\EmailBundle', 'symfonyBundleName' => 'MauticEmailBundle', 'bundleClass' => 'Mautic\\EmailBundle\\MauticEmailBundle', 'permissionClasses' => array('email' => '\\Mautic\\EmailBundle\\Security\\Permissions\\EmailPermissions'), 'relative' => 'app/bundles/EmailBundle', 'directory' => ($this->targetDirs[2].'/bundles/EmailBundle'), 'config' => array('routes' => array('main' => array('mautic_email_index' => array('path' => '/emails/{page}', 'controller' => 'MauticEmailBundle:Email:index'), 'mautic_email_action' => array('path' => '/emails/{objectAction}/{objectId}', 'controller' => 'MauticEmailBundle:Email:execute')), 'api' => array('mautic_api_emailstandard' => array('standard_entity' => true, 'name' => 'emails', 'path' => '/emails', 'controller' => 'MauticEmailBundle:Api\\EmailApi'), 'mautic_api_sendemail' => array('path' => '/emails/{id}/send', 'controller' => 'MauticEmailBundle:Api\\EmailApi:send', 'method' => 'POST'), 'mautic_api_sendcontactemail' => array('path' => '/emails/{id}/contact/{leadId}/send', 'controller' => 'MauticEmailBundle:Api\\EmailApi:sendLead', 'method' => 'POST'), 'bc_mautic_api_sendcontactemail' => array('path' => '/emails/{id}/send/contact/{leadId}', 'controller' => 'MauticEmailBundle:Api\\EmailApi:sendLead', 'method' => 'POST')), 'public' => array('mautic_plugin_tracker' => array('path' => '/plugin/{integration}/tracking.gif', 'controller' => 'MauticEmailBundle:Public:pluginTrackingGif', 'requirements' => array('integration' => '.+')), 'mautic_email_tracker' => array('path' => '/email/{idHash}.gif', 'controller' => 'MauticEmailBundle:Public:trackingImage'), 'mautic_email_webview' => array('path' => '/email/view/{idHash}', 'controller' => 'MauticEmailBundle:Public:index'), 'mautic_email_unsubscribe' => array('path' => '/email/unsubscribe/{idHash}', 'controller' => 'MauticEmailBundle:Public:unsubscribe'), 'mautic_email_resubscribe' => array('path' => '/email/resubscribe/{idHash}', 'controller' => 'MauticEmailBundle:Public:resubscribe'), 'mautic_mailer_transport_callback' => array('path' => '/mailer/{transport}/callback', 'controller' => 'MauticEmailBundle:Public:mailerCallback'), 'mautic_email_preview' => array('path' => '/email/preview/{objectId}', 'controller' => 'MauticEmailBundle:Public:preview'))), 'menu' => array('main' => array('items' => array('mautic.email.emails' => array('route' => 'mautic_email_index', 'access' => array(0 => 'email:emails:viewown', 1 => 'email:emails:viewother'), 'parent' => 'mautic.core.channels', 'priority' => 100)))), 'categories' => array('email' => NULL), 'services' => array('events' => array('mautic.email.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\EmailSubscriber', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.core.model.auditlog', 2 => 'mautic.email.model.email')), 'mautic.emailbuilder.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\BuilderSubscriber', 'arguments' => array(0 => 'mautic.helper.core_parameters', 1 => 'mautic.email.model.email', 2 => 'mautic.page.model.trackable', 3 => 'mautic.page.model.redirect')), 'mautic.emailtoken.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\TokenSubscriber'), 'mautic.email.campaignbundle.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\CampaignSubscriber', 'arguments' => array(0 => 'mautic.lead.model.lead', 1 => 'mautic.email.model.email', 2 => 'mautic.campaign.model.event', 3 => 'mautic.channel.model.queue')), 'mautic.email.formbundle.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\FormSubscriber'), 'mautic.email.reportbundle.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\ReportSubscriber', 'arguments' => array(0 => 'doctrine.dbal.default_connection')), 'mautic.email.leadbundle.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\LeadSubscriber'), 'mautic.email.pointbundle.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\PointSubscriber', 'arguments' => array(0 => 'mautic.point.model.point')), 'mautic.email.calendarbundle.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\CalendarSubscriber'), 'mautic.email.search.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\SearchSubscriber', 'arguments' => array(0 => 'mautic.helper.user', 1 => 'mautic.email.model.email')), 'mautic.email.webhook.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\WebhookSubscriber', 'methodCalls' => array('setWebhookModel' => array(0 => 'mautic.webhook.model.webhook'))), 'mautic.email.configbundle.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\ConfigSubscriber', 'arguments' => array(0 => 'mautic.helper.core_parameters')), 'mautic.email.pagebundle.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\PageSubscriber', 'arguments' => array(0 => 'mautic.email.model.email')), 'mautic.email.dashboard.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\DashboardSubscriber', 'arguments' => array(0 => 'mautic.email.model.email')), 'mautic.email.broadcast.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\BroadcastSubscriber', 'arguments' => array(0 => 'mautic.email.model.email', 1 => 'doctrine.orm.entity_manager', 2 => 'translator', 3 => 'mautic.lead.model.lead', 4 => 'mautic.email.model.email')), 'mautic.email.messagequeue.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\MessageQueueSubscriber', 'arguments' => array(0 => 'mautic.email.model.email')), 'mautic.email.channel.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\ChannelSubscriber'), 'mautic.email.stats.subscriber' => array('class' => 'Mautic\\EmailBundle\\EventListener\\StatsSubscriber', 'arguments' => array(0 => 'doctrine.orm.entity_manager'))), 'forms' => array('mautic.form.type.email' => array('class' => 'Mautic\\EmailBundle\\Form\\Type\\EmailType', 'arguments' => 'mautic.factory', 'alias' => 'emailform'), 'mautic.form.type.emailvariant' => array('class' => 'Mautic\\EmailBundle\\Form\\Type\\VariantType', 'arguments' => 'mautic.factory', 'alias' => 'emailvariant'), 'mautic.form.type.email_list' => array('class' => 'Mautic\\EmailBundle\\Form\\Type\\EmailListType', 'alias' => 'email_list'), 'mautic.form.type.emailopen_list' => array('class' => 'Mautic\\EmailBundle\\Form\\Type\\EmailOpenType', 'alias' => 'emailopen_list'), 'mautic.form.type.emailsend_list' => array('class' => 'Mautic\\EmailBundle\\Form\\Type\\EmailSendType', 'arguments' => 'mautic.factory', 'alias' => 'emailsend_list'), 'mautic.form.type.formsubmit_sendemail_admin' => array('class' => 'Mautic\\EmailBundle\\Form\\Type\\FormSubmitActionUserEmailType', 'alias' => 'email_submitaction_useremail'), 'mautic.email.type.email_abtest_settings' => array('class' => 'Mautic\\EmailBundle\\Form\\Type\\AbTestPropertiesType', 'alias' => 'email_abtest_settings'), 'mautic.email.type.batch_send' => array('class' => 'Mautic\\EmailBundle\\Form\\Type\\BatchSendType', 'alias' => 'batch_send'), 'mautic.form.type.emailconfig' => array('class' => 'Mautic\\EmailBundle\\Form\\Type\\ConfigType', 'arguments' => 'mautic.factory', 'alias' => 'emailconfig'), 'mautic.form.type.coreconfig_monitored_mailboxes' => array('class' => 'Mautic\\EmailBundle\\Form\\Type\\ConfigMonitoredMailboxesType', 'arguments' => 'mautic.factory', 'alias' => 'monitored_mailboxes'), 'mautic.form.type.coreconfig_monitored_email' => array('class' => 'Mautic\\EmailBundle\\Form\\Type\\ConfigMonitoredEmailType', 'arguments' => 'mautic.factory', 'alias' => 'monitored_email'), 'mautic.form.type.email_dashboard_emails_in_time_widget' => array('class' => 'Mautic\\EmailBundle\\Form\\Type\\DashboardEmailsInTimeWidgetType', 'alias' => 'email_dashboard_emails_in_time_widget')), 'other' => array('mautic.validator.leadlistaccess' => array('class' => 'Mautic\\LeadBundle\\Form\\Validator\\Constraints\\LeadListAccessValidator', 'arguments' => 'mautic.factory', 'tag' => 'validator.constraint_validator', 'alias' => 'leadlist_access'), 'mautic.helper.mailbox' => array('class' => 'Mautic\\EmailBundle\\MonitoredEmail\\Mailbox', 'arguments' => array(0 => 'mautic.helper.core_parameters', 1 => 'mautic.helper.paths')), 'mautic.helper.message' => array('class' => 'Mautic\\EmailBundle\\Helper\\MessageHelper', 'arguments' => 'mautic.factory'), 'mautic.helper.mailer' => array('class' => 'Mautic\\EmailBundle\\Helper\\MailHelper', 'arguments' => array(0 => 'mautic.factory', 1 => 'mailer')), 'mautic.transport.amazon' => array('class' => 'Mautic\\EmailBundle\\Swiftmailer\\Transport\\AmazonTransport', 'serviceAlias' => 'swiftmailer.mailer.transport.%s', 'arguments' => array(0 => '%mautic.mailer_amazon_region%', 1 => 'mautic.http.connector'), 'methodCalls' => array('setUsername' => array(0 => '%mautic.mailer_user%'), 'setPassword' => array(0 => '%mautic.mailer_password%'))), 'mautic.transport.mandrill' => array('class' => 'Mautic\\EmailBundle\\Swiftmailer\\Transport\\MandrillTransport', 'serviceAlias' => 'swiftmailer.mailer.transport.%s', 'methodCalls' => array('setUsername' => array(0 => '%mautic.mailer_user%'), 'setPassword' => array(0 => '%mautic.mailer_password%'), 'setMauticFactory' => array(0 => 'mautic.factory'))), 'mautic.transport.mailjet' => array('class' => 'Mautic\\EmailBundle\\Swiftmailer\\Transport\\MailjetTransport', 'serviceAlias' => 'swiftmailer.mailer.transport.%s', 'arguments' => array(0 => '', 1 => '', 2 => '', 3 => '%mautic.mailer_mailjet_sandbox%', 4 => '%mautic.mailer_mailjet_sandbox_default_mail%'), 'methodCalls' => array('setUsername' => array(0 => '%mautic.mailer_user%'), 'setPassword' => array(0 => '%mautic.mailer_password%'))), 'mautic.transport.sendgrid' => array('class' => 'Mautic\\EmailBundle\\Swiftmailer\\Transport\\SendgridTransport', 'serviceAlias' => 'swiftmailer.mailer.transport.%s', 'methodCalls' => array('setUsername' => array(0 => '%mautic.mailer_user%'), 'setPassword' => array(0 => '%mautic.mailer_password%'))), 'mautic.transport.elasticemail' => array('class' => 'Mautic\\EmailBundle\\Swiftmailer\\Transport\\ElasticemailTransport', 'serviceAlias' => 'swiftmailer.mailer.transport.%s', 'methodCalls' => array('setUsername' => array(0 => '%mautic.mailer_user%'), 'setPassword' => array(0 => '%mautic.mailer_password%'))), 'mautic.transport.postmark' => array('class' => 'Mautic\\EmailBundle\\Swiftmailer\\Transport\\PostmarkTransport', 'serviceAlias' => 'swiftmailer.mailer.transport.%s', 'methodCalls' => array('setUsername' => array(0 => '%mautic.mailer_user%'), 'setPassword' => array(0 => '%mautic.mailer_password%'))), 'mautic.transport.sparkpost' => array('class' => 'Mautic\\EmailBundle\\Swiftmailer\\Transport\\SparkpostTransport', 'serviceAlias' => 'swiftmailer.mailer.transport.%s', 'arguments' => array(0 => '%mautic.mailer_api_key%', 1 => 'translator'), 'methodCalls' => array('setMauticFactory' => array(0 => 'mautic.factory')))), 'models' => array('mautic.email.model.email' => array('class' => 'Mautic\\EmailBundle\\Model\\EmailModel', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.helper.theme', 2 => 'mautic.helper.mailbox', 3 => 'mautic.helper.mailer', 4 => 'mautic.lead.model.lead', 5 => 'mautic.lead.model.company', 6 => 'mautic.page.model.trackable', 7 => 'mautic.user.model.user', 8 => 'mautic.channel.model.queue')))), 'parameters' => array('mailer_api_key' => NULL, 'mailer_from_name' => 'Mautic', 'mailer_from_email' => 'email@yoursite.com', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => '', 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL))), 'MauticFormBundle' => array('isPlugin' => false, 'base' => 'Form', 'bundle' => 'FormBundle', 'namespace' => 'Mautic\\FormBundle', 'symfonyBundleName' => 'MauticFormBundle', 'bundleClass' => 'Mautic\\FormBundle\\MauticFormBundle', 'permissionClasses' => array('form' => '\\Mautic\\FormBundle\\Security\\Permissions\\FormPermissions'), 'relative' => 'app/bundles/FormBundle', 'directory' => ($this->targetDirs[2].'/bundles/FormBundle'), 'config' => array('routes' => array('main' => array('mautic_formaction_action' => array('path' => '/forms/action/{objectAction}/{objectId}', 'controller' => 'MauticFormBundle:Action:execute'), 'mautic_formfield_action' => array('path' => '/forms/field/{objectAction}/{objectId}', 'controller' => 'MauticFormBundle:Field:execute'), 'mautic_form_index' => array('path' => '/forms/{page}', 'controller' => 'MauticFormBundle:Form:index'), 'mautic_form_results' => array('path' => '/forms/results/{objectId}/{page}', 'controller' => 'MauticFormBundle:Result:index'), 'mautic_form_export' => array('path' => '/forms/results/{objectId}/export/{format}', 'controller' => 'MauticFormBundle:Result:export', 'defaults' => array('format' => 'csv')), 'mautic_form_results_action' => array('path' => '/forms/results/{formId}/{objectAction}/{objectId}', 'controller' => 'MauticFormBundle:Result:execute', 'defaults' => array('objectId' => 0)), 'mautic_form_action' => array('path' => '/forms/{objectAction}/{objectId}', 'controller' => 'MauticFormBundle:Form:execute')), 'api' => array('mautic_api_formstandard' => array('standard_entity' => true, 'name' => 'forms', 'path' => '/forms', 'controller' => 'MauticFormBundle:Api\\FormApi'), 'mautic_api_formdeletefields' => array('path' => '/forms/{formId}/fields/delete', 'controller' => 'MauticFormBundle:Api\\FormApi:deleteFields', 'method' => 'DELETE'), 'mautic_api_formdeleteactions' => array('path' => '/forms/{formId}/actions/delete', 'controller' => 'MauticFormBundle:Api\\FormApi:deleteActions', 'method' => 'DELETE')), 'public' => array('mautic_form_postresults' => array('path' => '/form/submit', 'controller' => 'MauticFormBundle:Public:submit'), 'mautic_form_generateform' => array('path' => '/form/generate.js', 'controller' => 'MauticFormBundle:Public:generate'), 'mautic_form_postmessage' => array('path' => '/form/message', 'controller' => 'MauticFormBundle:Public:message'), 'mautic_form_preview' => array('path' => '/form/{id}', 'controller' => 'MauticFormBundle:Public:preview', 'defaults' => array('id' => '0')), 'mautic_form_embed' => array('path' => '/form/embed/{id}', 'controller' => 'MauticFormBundle:Public:embed'), 'mautic_form_postresults_ajax' => array('path' => '/form/submit/ajax', 'controller' => 'MauticFormBundle:Ajax:submit'))), 'menu' => array('main' => array('items' => array('mautic.form.forms' => array('route' => 'mautic_form_index', 'access' => array(0 => 'form:forms:viewown', 1 => 'form:forms:viewother'), 'parent' => 'mautic.core.components', 'priority' => 200)))), 'categories' => array('form' => NULL), 'services' => array('events' => array('mautic.form.subscriber' => array('class' => 'Mautic\\FormBundle\\EventListener\\FormSubscriber', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.core.model.auditlog', 2 => 'mautic.helper.mailer')), 'mautic.form.pagebundle.subscriber' => array('class' => 'Mautic\\FormBundle\\EventListener\\PageSubscriber', 'arguments' => array(0 => 'mautic.form.model.form')), 'mautic.form.pointbundle.subscriber' => array('class' => 'Mautic\\FormBundle\\EventListener\\PointSubscriber', 'arguments' => array(0 => 'mautic.point.model.point')), 'mautic.form.reportbundle.subscriber' => array('class' => 'Mautic\\FormBundle\\EventListener\\ReportSubscriber'), 'mautic.form.campaignbundle.subscriber' => array('class' => 'Mautic\\FormBundle\\EventListener\\CampaignSubscriber', 'arguments' => array(0 => 'mautic.form.model.form', 1 => 'mautic.form.model.submission', 2 => 'mautic.campaign.model.event')), 'mautic.form.calendarbundle.subscriber' => array('class' => 'Mautic\\FormBundle\\EventListener\\CalendarSubscriber'), 'mautic.form.leadbundle.subscriber' => array('class' => 'Mautic\\FormBundle\\EventListener\\LeadSubscriber', 'arguments' => array(0 => 'mautic.form.model.form', 1 => 'mautic.page.model.page')), 'mautic.form.emailbundle.subscriber' => array('class' => 'Mautic\\FormBundle\\EventListener\\EmailSubscriber'), 'mautic.form.search.subscriber' => array('class' => 'Mautic\\FormBundle\\EventListener\\SearchSubscriber', 'arguments' => array(0 => 'mautic.helper.user', 1 => 'mautic.form.model.form')), 'mautic.form.webhook.subscriber' => array('class' => 'Mautic\\FormBundle\\EventListener\\WebhookSubscriber', 'methodCalls' => array('setWebhookModel' => array(0 => 'mautic.webhook.model.webhook'))), 'mautic.form.dashboard.subscriber' => array('class' => 'Mautic\\FormBundle\\EventListener\\DashboardSubscriber', 'arguments' => array(0 => 'mautic.form.model.submission', 1 => 'mautic.form.model.form')), 'mautic.form.stats.subscriber' => array('class' => 'Mautic\\FormBundle\\EventListener\\StatsSubscriber', 'arguments' => array(0 => 'doctrine.orm.entity_manager'))), 'forms' => array('mautic.form.type.form' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\FormType', 'arguments' => 'mautic.factory', 'alias' => 'mauticform'), 'mautic.form.type.field' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\FieldType', 'alias' => 'formfield', 'methodCalls' => array('setFieldModel' => array(0 => 'mautic.form.model.field'), 'setFormModel' => array(0 => 'mautic.form.model.form'))), 'mautic.form.type.action' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\ActionType', 'alias' => 'formaction'), 'mautic.form.type.field_propertytext' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\FormFieldTextType', 'alias' => 'formfield_text'), 'mautic.form.type.field_propertyplaceholder' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\FormFieldPlaceholderType', 'alias' => 'formfield_placeholder'), 'mautic.form.type.field_propertyselect' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\FormFieldSelectType', 'alias' => 'formfield_select'), 'mautic.form.type.field_propertycaptcha' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\FormFieldCaptchaType', 'alias' => 'formfield_captcha'), 'muatic.form.type.field_propertypagebreak' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\FormFieldPageBreakType', 'arguments' => array(0 => 'translator')), 'mautic.form.type.field_propertygroup' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\FormFieldGroupType', 'alias' => 'formfield_group'), 'mautic.form.type.pointaction_formsubmit' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\PointActionFormSubmitType', 'alias' => 'pointaction_formsubmit'), 'mautic.form.type.form_list' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\FormListType', 'arguments' => 'mautic.factory', 'alias' => 'form_list'), 'mautic.form.type.campaignevent_formsubmit' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\CampaignEventFormSubmitType', 'alias' => 'campaignevent_formsubmit'), 'mautic.form.type.campaignevent_form_field_value' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\CampaignEventFormFieldValueType', 'arguments' => 'mautic.factory', 'alias' => 'campaignevent_form_field_value'), 'mautic.form.type.form_submitaction_sendemail' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\SubmitActionEmailType', 'arguments' => 'translator', 'alias' => 'form_submitaction_sendemail', 'methodCalls' => array('setFieldModel' => array(0 => 'mautic.form.model.field'), 'setFormModel' => array(0 => 'mautic.form.model.form'))), 'mautic.form.type.form_submitaction_repost' => array('class' => 'Mautic\\FormBundle\\Form\\Type\\SubmitActionRepostType', 'methodCalls' => array('setFieldModel' => array(0 => 'mautic.form.model.field'), 'setFormModel' => array(0 => 'mautic.form.model.form')))), 'models' => array('mautic.form.model.action' => array('class' => 'Mautic\\FormBundle\\Model\\ActionModel'), 'mautic.form.model.field' => array('class' => 'Mautic\\FormBundle\\Model\\FieldModel', 'arguments' => array(0 => 'mautic.lead.model.field')), 'mautic.form.model.form' => array('class' => 'Mautic\\FormBundle\\Model\\FormModel', 'arguments' => array(0 => 'request_stack', 1 => 'mautic.helper.templating', 2 => 'mautic.helper.theme', 3 => 'mautic.schema.helper.factory', 4 => 'mautic.form.model.action', 5 => 'mautic.form.model.field', 6 => 'mautic.lead.model.lead', 7 => 'mautic.helper.form.field_helper', 8 => 'mautic.lead.model.field')), 'mautic.form.model.submission' => array('class' => 'Mautic\\FormBundle\\Model\\SubmissionModel', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.helper.templating', 2 => 'mautic.form.model.form', 3 => 'mautic.page.model.page', 4 => 'mautic.lead.model.lead', 5 => 'mautic.campaign.model.campaign', 6 => 'mautic.lead.model.field', 7 => 'mautic.lead.model.company', 8 => 'mautic.helper.form.field_helper'))), 'other' => array('mautic.helper.form.field_helper' => array('class' => 'Mautic\\FormBundle\\Helper\\FormFieldHelper', 'arguments' => array(0 => 'translator', 1 => 'validator')), 'mautic.form.helper.token' => array('class' => 'Mautic\\FormBundle\\Helper\\TokenHelper', 'arguments' => array(0 => 'mautic.form.model.form')))))), 'MauticInstallBundle' => array('isPlugin' => false, 'base' => 'Install', 'bundle' => 'InstallBundle', 'namespace' => 'Mautic\\InstallBundle', 'symfonyBundleName' => 'MauticInstallBundle', 'bundleClass' => 'Mautic\\InstallBundle\\MauticInstallBundle', 'permissionClasses' => array(), 'relative' => 'app/bundles/InstallBundle', 'directory' => ($this->targetDirs[2].'/bundles/InstallBundle'), 'config' => array('routes' => array('public' => array('mautic_installer_home' => array('path' => '/installer', 'controller' => 'MauticInstallBundle:Install:step'), 'mautic_installer_remove_slash' => array('path' => '/installer/', 'controller' => 'MauticCoreBundle:Common:removeTrailingSlash'), 'mautic_installer_step' => array('path' => '/installer/step/{index}', 'controller' => 'MauticInstallBundle:Install:step'), 'mautic_installer_final' => array('path' => '/installer/final', 'controller' => 'MauticInstallBundle:Install:final'), 'mautic_installer_catchcall' => array('path' => '/installer/{noerror}', 'controller' => 'MauticInstallBundle:Install:step', 'requirements' => array('noerror' => '^(?).+')))), 'services' => array('other' => array('mautic.install.configurator.step.check' => array('class' => 'Mautic\\InstallBundle\\Configurator\\Step\\CheckStep', 'arguments' => array(0 => 'mautic.configurator', 1 => '%kernel.root_dir%', 2 => 'request_stack'), 'tag' => 'mautic.configurator.step', 'tagArguments' => array('priority' => '0')), 'mautic.install.configurator.step.doctrine' => array('class' => 'Mautic\\InstallBundle\\Configurator\\Step\\DoctrineStep', 'arguments' => array(0 => 'mautic.configurator'), 'tag' => 'mautic.configurator.step', 'tagArguments' => array('priority' => '1')), 'mautic.install.configurator.step.email' => array('class' => 'Mautic\\InstallBundle\\Configurator\\Step\\EmailStep', 'arguments' => array(0 => 'session'), 'tag' => 'mautic.configurator.step', 'tagArguments' => array('priority' => '3')), 'mautic.install.configurator.step.user' => array('class' => 'Mautic\\InstallBundle\\Configurator\\Step\\UserStep', 'arguments' => array(0 => 'session'), 'tag' => 'mautic.configurator.step', 'tagArguments' => array('priority' => '2')))))), 'MauticLeadBundle' => array('isPlugin' => false, 'base' => 'Lead', 'bundle' => 'LeadBundle', 'namespace' => 'Mautic\\LeadBundle', 'symfonyBundleName' => 'MauticLeadBundle', 'bundleClass' => 'Mautic\\LeadBundle\\MauticLeadBundle', 'permissionClasses' => array('lead' => '\\Mautic\\LeadBundle\\Security\\Permissions\\LeadPermissions'), 'relative' => 'app/bundles/LeadBundle', 'directory' => ($this->targetDirs[2].'/bundles/LeadBundle'), 'config' => array('routes' => array('main' => array('mautic_plugin_timeline_index' => array('path' => '/plugin/{integration}/timeline/{page}', 'controller' => 'MauticLeadBundle:Timeline:pluginIndex', 'requirements' => array('integration' => '.+')), 'mautic_plugin_timeline_view' => array('path' => '/plugin/{integration}/timeline/view/{leadId}/{page}', 'controller' => 'MauticLeadBundle:Timeline:pluginView', 'requirements' => array('integration' => '.+', 'leadId' => '\\d+')), 'mautic_segment_index' => array('path' => '/segments/{page}', 'controller' => 'MauticLeadBundle:List:index'), 'mautic_segment_action' => array('path' => '/segments/{objectAction}/{objectId}', 'controller' => 'MauticLeadBundle:List:execute'), 'mautic_contactfield_index' => array('path' => '/contacts/fields/{page}', 'controller' => 'MauticLeadBundle:Field:index'), 'mautic_contactfield_action' => array('path' => '/contacts/fields/{objectAction}/{objectId}', 'controller' => 'MauticLeadBundle:Field:execute'), 'mautic_contact_index' => array('path' => '/contacts/{page}', 'controller' => 'MauticLeadBundle:Lead:index'), 'mautic_contactnote_index' => array('path' => '/contacts/notes/{leadId}/{page}', 'controller' => 'MauticLeadBundle:Note:index', 'defaults' => array('leadId' => 0), 'requirements' => array('leadId' => '\\d+')), 'mautic_contactnote_action' => array('path' => '/contacts/notes/{leadId}/{objectAction}/{objectId}', 'controller' => 'MauticLeadBundle:Note:executeNote', 'requirements' => array('leadId' => '\\d+')), 'mautic_contacttimeline_action' => array('path' => '/contacts/timeline/{leadId}/{page}', 'controller' => 'MauticLeadBundle:Timeline:index', 'requirements' => array('leadId' => '\\d+')), 'mautic_contact_timeline_export_action' => array('path' => '/contacts/timeline/batchExport/{leadId}', 'controller' => 'MauticLeadBundle:Timeline:batchExport', 'requirements' => array('leadId' => '\\d+')), 'mautic_contact_action' => array('path' => '/contacts/{objectAction}/{objectId}', 'controller' => 'MauticLeadBundle:Lead:execute'), 'mautic_company_index' => array('path' => '/companies/{page}', 'controller' => 'MauticLeadBundle:Company:index'), 'mautic_company_action' => array('path' => '/companies/{objectAction}/{objectId}', 'controller' => 'MauticLeadBundle:Company:execute')), 'api' => array('mautic_api_contactsstandard' => array('standard_entity' => true, 'name' => 'contacts', 'path' => '/contacts', 'controller' => 'MauticLeadBundle:Api\\LeadApi'), 'mautic_api_dncaddcontact' => array('path' => '/contacts/{id}/dnc/{channel}/add', 'controller' => 'MauticLeadBundle:Api\\LeadApi:addDnc', 'method' => 'POST', 'defaults' => array('channel' => 'email')), 'mautic_api_dncremovecontact' => array('path' => '/contacts/{id}/dnc/{channel}/remove', 'controller' => 'MauticLeadBundle:Api\\LeadApi:removeDnc', 'method' => 'POST'), 'mautic_api_getcontactevents' => array('path' => '/contacts/{id}/events', 'controller' => 'MauticLeadBundle:Api\\LeadApi:getEvents'), 'mautic_api_getcontactnotes' => array('path' => '/contacts/{id}/notes', 'controller' => 'MauticLeadBundle:Api\\LeadApi:getNotes'), 'mautic_api_getcontactdevices' => array('path' => '/contacts/{id}/devices', 'controller' => 'MauticLeadBundle:Api\\LeadApi:getDevices'), 'mautic_api_getcontactcampaigns' => array('path' => '/contacts/{id}/campaigns', 'controller' => 'MauticLeadBundle:Api\\LeadApi:getCampaigns'), 'mautic_api_getcontactssegments' => array('path' => '/contacts/{id}/segments', 'controller' => 'MauticLeadBundle:Api\\LeadApi:getLists'), 'mautic_api_getcontactscompanies' => array('path' => '/contacts/{id}/companies', 'controller' => 'MauticLeadBundle:Api\\LeadApi:getCompanies'), 'mautic_api_getcontactowners' => array('path' => '/contacts/list/owners', 'controller' => 'MauticLeadBundle:Api\\LeadApi:getOwners'), 'mautic_api_getcontactfields' => array('path' => '/contacts/list/fields', 'controller' => 'MauticLeadBundle:Api\\LeadApi:getFields'), 'mautic_api_getcontactsegments' => array('path' => '/contacts/list/segments', 'controller' => 'MauticLeadBundle:Api\\ListApi:getLists'), 'mautic_api_segmentsstandard' => array('standard_entity' => true, 'name' => 'lists', 'path' => '/segments', 'controller' => 'MauticLeadBundle:Api\\ListApi'), 'mautic_api_segmentaddcontact' => array('path' => '/segments/{id}/contact/{leadId}/add', 'controller' => 'MauticLeadBundle:Api\\ListApi:addLead', 'method' => 'POST'), 'mautic_api_segmentremovecontact' => array('path' => '/segments/{id}/contact/{leadId}/remove', 'controller' => 'MauticLeadBundle:Api\\ListApi:removeLead', 'method' => 'POST'), 'mautic_api_companiesstandard' => array('standard_entity' => true, 'name' => 'companies', 'path' => '/companies', 'controller' => 'MauticLeadBundle:Api\\CompanyApi'), 'mautic_api_companyaddcontact' => array('path' => '/companies/{companyId}/contact/{contactId}/add', 'controller' => 'MauticLeadBundle:Api\\CompanyApi:addContact', 'method' => 'POST'), 'mautic_api_companyremovecontact' => array('path' => '/companies/{companyId}/contact/{contactId}/remove', 'controller' => 'MauticLeadBundle:Api\\CompanyApi:removeContact', 'method' => 'POST'), 'mautic_api_fieldsstandard' => array('standard_entity' => true, 'name' => 'fields', 'path' => '/fields/{object}', 'controller' => 'MauticLeadBundle:Api\\FieldApi', 'defaults' => array('object' => 'contact')), 'mautic_api_notesstandard' => array('standard_entity' => true, 'name' => 'notes', 'path' => '/notes', 'controller' => 'MauticLeadBundle:Api\\NoteApi'), 'mautic_api_devicesstandard' => array('standard_entity' => true, 'name' => 'devices', 'path' => '/devices', 'controller' => 'MauticLeadBundle:Api\\DeviceApi'), 'bc_mautic_api_segmentaddcontact' => array('path' => '/segments/{id}/contact/add/{leadId}', 'controller' => 'MauticLeadBundle:Api\\ListApi:addLead', 'method' => 'POST'), 'bc_mautic_api_segmentremovecontact' => array('path' => '/segments/{id}/contact/remove/{leadId}', 'controller' => 'MauticLeadBundle:Api\\ListApi:removeLead', 'method' => 'POST'), 'bc_mautic_api_companyaddcontact' => array('path' => '/companies/{companyId}/contact/add/{contactId}', 'controller' => 'MauticLeadBundle:Api\\CompanyApi:addContact', 'method' => 'POST'), 'bc_mautic_api_companyremovecontact' => array('path' => '/companies/{companyId}/contact/remove/{contactId}', 'controller' => 'MauticLeadBundle:Api\\CompanyApi:removeContact', 'method' => 'POST'), 'bc_mautic_api_dncaddcontact' => array('path' => '/contacts/{id}/dnc/add/{channel}', 'controller' => 'MauticLeadBundle:Api\\LeadApi:addDnc', 'method' => 'POST', 'defaults' => array('channel' => 'email')), 'bc_mautic_api_dncremovecontact' => array('path' => '/contacts/{id}/dnc/remove/{channel}', 'controller' => 'MauticLeadBundle:Api\\LeadApi:removeDnc', 'method' => 'POST'))), 'menu' => array('main' => array('items' => array('mautic.lead.leads' => array('iconClass' => 'fa-user', 'access' => array(0 => 'lead:leads:viewown', 1 => 'lead:leads:viewother'), 'route' => 'mautic_contact_index', 'priority' => 80), 'mautic.companies.menu.index' => array('route' => 'mautic_company_index', 'iconClass' => 'fa-building-o', 'access' => array(0 => 'lead:leads:viewother'), 'priority' => 75), 'mautic.lead.list.menu.index' => array('iconClass' => 'fa-pie-chart', 'access' => array(0 => 'lead:leads:viewown', 1 => 'lead:leads:viewother'), 'route' => 'mautic_segment_index', 'priority' => 70))), 'admin' => array('priority' => 50, 'items' => array('mautic.lead.field.menu.index' => array('id' => 'mautic_lead_field', 'iconClass' => 'fa-list', 'route' => 'mautic_contactfield_index', 'access' => 'lead:fields:full')))), 'services' => array('events' => array('mautic.lead.subscriber' => array('class' => 'Mautic\\LeadBundle\\EventListener\\LeadSubscriber', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.core.model.auditlog'), 'methodCalls' => array('setModelFactory' => array(0 => 'mautic.model.factory'))), 'mautic.lead.subscriber.company' => array('class' => 'Mautic\\LeadBundle\\EventListener\\CompanySubscriber', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.core.model.auditlog')), 'mautic.lead.emailbundle.subscriber' => array('class' => 'Mautic\\LeadBundle\\EventListener\\EmailSubscriber'), 'mautic.lead.formbundle.subscriber' => array('class' => 'Mautic\\LeadBundle\\EventListener\\FormSubscriber', 'arguments' => array(0 => 'mautic.email.model.email')), 'mautic.lead.campaignbundle.subscriber' => array('class' => 'Mautic\\LeadBundle\\EventListener\\CampaignSubscriber', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.lead.model.lead', 2 => 'mautic.lead.model.field')), 'mautic.lead.reportbundle.subscriber' => array('class' => 'Mautic\\LeadBundle\\EventListener\\ReportSubscriber', 'arguments' => array(0 => 'mautic.lead.model.list', 1 => 'mautic.lead.model.field', 2 => 'mautic.lead.model.lead', 3 => 'mautic.stage.model.stage', 4 => 'mautic.campaign.model.campaign', 5 => 'mautic.user.model.user', 6 => 'mautic.lead.model.company')), 'mautic.lead.calendarbundle.subscriber' => array('class' => 'Mautic\\LeadBundle\\EventListener\\CalendarSubscriber'), 'mautic.lead.pointbundle.subscriber' => array('class' => 'Mautic\\LeadBundle\\EventListener\\PointSubscriber'), 'mautic.lead.search.subscriber' => array('class' => 'Mautic\\LeadBundle\\EventListener\\SearchSubscriber', 'arguments' => array(0 => 'mautic.lead.model.lead')), 'mautic.webhook.subscriber' => array('class' => 'Mautic\\LeadBundle\\EventListener\\WebhookSubscriber', 'methodCalls' => array('setWebhookModel' => array(0 => 'mautic.webhook.model.webhook'))), 'mautic.lead.dashboard.subscriber' => array('class' => 'Mautic\\LeadBundle\\EventListener\\DashboardSubscriber', 'arguments' => array(0 => 'mautic.lead.model.lead', 1 => 'mautic.lead.model.list')), 'mautic.lead.maintenance.subscriber' => array('class' => 'Mautic\\LeadBundle\\EventListener\\MaintenanceSubscriber', 'arguments' => array(0 => 'doctrine.dbal.default_connection')), 'mautic.lead.stats.subscriber' => array('class' => 'Mautic\\LeadBundle\\EventListener\\StatsSubscriber', 'arguments' => array(0 => 'doctrine.orm.entity_manager')), 'mautic.lead.button.subscriber' => array('class' => 'Mautic\\LeadBundle\\EventListener\\ButtonSubscriber')), 'forms' => array('mautic.form.type.lead' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\LeadType', 'arguments' => array(0 => 'mautic.factory', 1 => 'mautic.lead.model.company'), 'alias' => 'lead'), 'mautic.form.type.leadlist' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\ListType', 'arguments' => array(0 => 'translator', 1 => 'mautic.lead.model.list', 2 => 'mautic.email.model.email', 3 => 'mautic.security', 4 => 'mautic.lead.model.lead', 5 => 'mautic.stage.model.stage', 6 => 'mautic.category.model.category', 7 => 'mautic.helper.user'), 'alias' => 'leadlist'), 'mautic.form.type.leadlist_choices' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\LeadListType', 'arguments' => array(0 => 'mautic.factory'), 'alias' => 'leadlist_choices'), 'mautic.form.type.leadlist_filter' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\FilterType', 'alias' => 'leadlist_filter', 'arguments' => array(0 => 'mautic.factory')), 'mautic.form.type.leadfield' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\FieldType', 'arguments' => array(0 => 'mautic.factory'), 'alias' => 'leadfield'), 'mautic.form.type.lead.submitaction.pointschange' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\FormSubmitActionPointsChangeType', 'arguments' => array(0 => 'mautic.factory'), 'alias' => 'lead_submitaction_pointschange'), 'mautic.form.type.lead.submitaction.addutmtags' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\ActionAddUtmTagsType', 'arguments' => 'mautic.factory', 'alias' => 'lead_action_addutmtags'), 'mautic.form.type.lead.submitaction.removedonotcontact' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\ActionRemoveDoNotContact', 'arguments' => 'mautic.factory', 'alias' => 'lead_action_removedonotcontact'), 'mautic.form.type.lead.submitaction.changelist' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\EventListType', 'arguments' => array(0 => 'mautic.factory'), 'alias' => 'leadlist_action_type'), 'mautic.form.type.leadpoints_trigger' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\PointTriggerType', 'alias' => 'leadpoints_trigger'), 'mautic.form.type.leadpoints_action' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\PointActionType', 'alias' => 'leadpoints_action'), 'mautic.form.type.leadlist_trigger' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\ListTriggerType', 'alias' => 'leadlist_trigger'), 'mautic.form.type.leadlist_action' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\ListActionType', 'alias' => 'leadlist_action'), 'mautic.form.type.updatelead_action' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\UpdateLeadActionType', 'arguments' => array(0 => 'mautic.factory'), 'alias' => 'updatelead_action'), 'mautic.form.type.leadnote' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\NoteType', 'alias' => 'leadnote'), 'mautic.form.type.leaddevice' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\DeviceType', 'alias' => 'leaddevice'), 'mautic.form.type.lead_import' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\LeadImportType', 'alias' => 'lead_import'), 'mautic.form.type.lead_field_import' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\LeadImportFieldType', 'arguments' => array(0 => 'mautic.factory'), 'alias' => 'lead_field_import'), 'mautic.form.type.lead_quickemail' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\EmailType', 'arguments' => array(0 => 'mautic.factory'), 'alias' => 'lead_quickemail'), 'mautic.form.type.lead_tags' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\TagListType', 'alias' => 'lead_tags', 'arguments' => array(0 => 'mautic.factory')), 'mautic.form.type.lead_tag' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\TagType', 'alias' => 'lead_tag', 'arguments' => array(0 => 'mautic.factory')), 'mautic.form.type.modify_lead_tags' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\ModifyLeadTagsType', 'alias' => 'modify_lead_tags', 'arguments' => array(0 => 'mautic.factory')), 'mautic.form.type.lead_batch' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\BatchType', 'alias' => 'lead_batch'), 'mautic.form.type.lead_batch_dnc' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\DncType', 'alias' => 'lead_batch_dnc'), 'mautic.form.type.lead_batch_stage' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\StageType', 'alias' => 'lead_batch_stage'), 'mautic.form.type.lead_merge' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\MergeType', 'alias' => 'lead_merge'), 'mautic.form.type.lead_contact_frequency_rules' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\ContactFrequencyType', 'arguments' => array(0 => 'mautic.helper.core_parameters'), 'alias' => 'lead_contact_frequency_rules'), 'mautic.form.type.campaignevent_lead_field_value' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\CampaignEventLeadFieldValueType', 'arguments' => array(0 => 'mautic.factory'), 'alias' => 'campaignevent_lead_field_value'), 'mautic.form.type.lead_fields' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\LeadFieldsType', 'arguments' => array(0 => 'mautic.factory'), 'alias' => 'leadfields_choices'), 'mautic.form.type.lead_dashboard_leads_in_time_widget' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\DashboardLeadsInTimeWidgetType', 'alias' => 'lead_dashboard_leads_in_time_widget'), 'mautic.form.type.lead_dashboard_leads_lifetime_widget' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\DashboardLeadsLifetimeWidgetType', 'arguments' => array(0 => 'mautic.factory'), 'alias' => 'lead_dashboard_leads_lifetime_widget'), 'mautic.company.type.form' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\CompanyType', 'arguments' => array(0 => 'doctrine.orm.entity_manager', 1 => 'mautic.security', 2 => 'router', 3 => 'translator'), 'alias' => 'company'), 'mautic.company.campaign.action.type.form' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\AddToCompanyActionType', 'arguments' => array(0 => 'router'), 'alias' => 'addtocompany_action'), 'mautic.company.list.type.form' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\CompanyListType', 'arguments' => array(0 => 'mautic.lead.model.company', 1 => 'mautic.helper.user', 2 => 'translator', 3 => 'router', 4 => 'database_connection'), 'alias' => 'company_list'), 'mautic.form.type.lead_categories' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\LeadCategoryType', 'arguments' => array(0 => 'mautic.category.model.category'), 'alias' => 'leadcategory_choices'), 'mautic.company.merge.type.form' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\CompanyMergeType', 'alias' => 'company_merge'), 'mautic.form.type.company_change_score' => array('class' => 'Mautic\\LeadBundle\\Form\\Type\\CompanyChangeScoreActionType', 'alias' => 'scorecontactscompanies_action')), 'other' => array('mautic.lead.doctrine.subscriber' => array('class' => 'Mautic\\LeadBundle\\EventListener\\DoctrineSubscriber', 'tag' => 'doctrine.event_subscriber', 'arguments' => array(0 => 'monolog.logger.mautic')), 'mautic.validator.leadlistaccess' => array('class' => 'Mautic\\LeadBundle\\Form\\Validator\\Constraints\\LeadListAccessValidator', 'arguments' => array(0 => 'mautic.factory'), 'tag' => 'validator.constraint_validator', 'alias' => 'leadlist_access'), 'mautic.lead.constraint.alias' => array('class' => 'Mautic\\LeadBundle\\Form\\Validator\\Constraints\\UniqueUserAliasValidator', 'arguments' => array(0 => 'mautic.factory'), 'tag' => 'validator.constraint_validator', 'alias' => 'uniqueleadlist')), 'helpers' => array('mautic.helper.template.avatar' => array('class' => 'Mautic\\LeadBundle\\Templating\\Helper\\AvatarHelper', 'arguments' => array(0 => 'mautic.factory'), 'alias' => 'lead_avatar')), 'models' => array('mautic.lead.model.lead' => array('class' => 'Mautic\\LeadBundle\\Model\\LeadModel', 'arguments' => array(0 => 'request_stack', 1 => 'mautic.helper.cookie', 2 => 'mautic.helper.ip_lookup', 3 => 'mautic.helper.paths', 4 => 'mautic.helper.integration', 5 => 'mautic.lead.model.field', 6 => 'mautic.lead.model.list', 7 => 'form.factory', 8 => 'mautic.lead.model.company', 9 => 'mautic.category.model.category', 10 => 'mautic.channel.helper.channel_list', 11 => '%mautic.track_contact_by_ip%')), 'mautic.lead.model.field' => array('class' => 'Mautic\\LeadBundle\\Model\\FieldModel', 'arguments' => array(0 => 'mautic.schema.helper.factory')), 'mautic.lead.model.list' => array('class' => 'Mautic\\LeadBundle\\Model\\ListModel', 'arguments' => array(0 => 'mautic.helper.core_parameters')), 'mautic.lead.model.note' => array('class' => 'Mautic\\LeadBundle\\Model\\NoteModel'), 'mautic.lead.model.device' => array('class' => 'Mautic\\LeadBundle\\Model\\DeviceModel'), 'mautic.lead.model.company' => array('class' => 'Mautic\\LeadBundle\\Model\\CompanyModel', 'arguments' => array(0 => 'mautic.lead.model.field', 1 => 'session')))))), 'MauticNotificationBundle' => array('isPlugin' => false, 'base' => 'Notification', 'bundle' => 'NotificationBundle', 'namespace' => 'Mautic\\NotificationBundle', 'symfonyBundleName' => 'MauticNotificationBundle', 'bundleClass' => 'Mautic\\NotificationBundle\\MauticNotificationBundle', 'permissionClasses' => array('notification' => '\\Mautic\\NotificationBundle\\Security\\Permissions\\NotificationPermissions'), 'relative' => 'app/bundles/NotificationBundle', 'directory' => ($this->targetDirs[2].'/bundles/NotificationBundle'), 'config' => array('services' => array('events' => array('mautic.notification.campaignbundle.subscriber' => array('class' => 'Mautic\\NotificationBundle\\EventListener\\CampaignSubscriber', 'arguments' => array(0 => 'mautic.helper.core_parameters', 1 => 'mautic.lead.model.lead', 2 => 'mautic.notification.model.notification', 3 => 'mautic.notification.api')), 'mautic.notification.configbundle.subscriber' => array('class' => 'Mautic\\NotificationBundle\\EventListener\\ConfigSubscriber'), 'mautic.notification.pagebundle.subscriber' => array('class' => 'Mautic\\NotificationBundle\\EventListener\\PageSubscriber', 'arguments' => array(0 => 'templating.helper.assets', 1 => 'mautic.helper.core_parameters')), 'mautic.core.js.subscriber' => array('class' => 'Mautic\\NotificationBundle\\EventListener\\BuildJsSubscriber'), 'mautic.notification.notificationbundle.subscriber' => array('class' => 'Mautic\\NotificationBundle\\EventListener\\NotificationSubscriber', 'arguments' => array(0 => 'mautic.core.model.auditlog', 1 => 'mautic.page.model.trackable', 2 => 'mautic.page.helper.token', 3 => 'mautic.asset.helper.token')), 'mautic.notification.subscriber.channel' => array('class' => 'Mautic\\NotificationBundle\\EventListener\\ChannelSubscriber'), 'mautic.notification.stats.subscriber' => array('class' => 'Mautic\\NotificationBundle\\EventListener\\StatsSubscriber', 'arguments' => array(0 => 'doctrine.orm.entity_manager'))), 'forms' => array('mautic.form.type.notification' => array('class' => 'Mautic\\NotificationBundle\\Form\\Type\\NotificationType', 'arguments' => 'mautic.factory', 'alias' => 'notification'), 'mautic.form.type.notificationconfig' => array('class' => 'Mautic\\NotificationBundle\\Form\\Type\\ConfigType', 'alias' => 'notificationconfig'), 'mautic.form.type.notificationsend_list' => array('class' => 'Mautic\\NotificationBundle\\Form\\Type\\NotificationSendType', 'arguments' => 'router', 'alias' => 'notificationsend_list'), 'mautic.form.type.notification_list' => array('class' => 'Mautic\\NotificationBundle\\Form\\Type\\NotificationListType', 'alias' => 'notification_list')), 'helpers' => array('mautic.helper.notification' => array('class' => 'Mautic\\NotificationBundle\\Helper\\NotificationHelper', 'arguments' => 'mautic.factory', 'alias' => 'notification_helper')), 'other' => array('mautic.notification.api' => array('class' => 'Mautic\\NotificationBundle\\Api\\OneSignalApi', 'arguments' => array(0 => 'mautic.factory', 1 => 'mautic.http.connector'), 'alias' => 'notification_api')), 'models' => array('mautic.notification.model.notification' => array('class' => 'Mautic\\NotificationBundle\\Model\\NotificationModel', 'arguments' => array(0 => 'mautic.page.model.trackable')))), 'routes' => array('main' => array('mautic_notification_index' => array('path' => '/notifications/{page}', 'controller' => 'MauticNotificationBundle:Notification:index'), 'mautic_notification_action' => array('path' => '/notifications/{objectAction}/{objectId}', 'controller' => 'MauticNotificationBundle:Notification:execute'), 'mautic_notification_contacts' => array('path' => '/notifications/view/{objectId}/contact/{page}', 'controller' => 'MauticNotificationBundle:Notification:contacts')), 'public' => array('mautic_receive_notification' => array('path' => '/notification/receive', 'controller' => 'MauticNotificationBundle:Api\\NotificationApi:receive'), 'mautic_subscribe_notification' => array('path' => '/notification/subscribe', 'controller' => 'MauticNotificationBundle:Api\\NotificationApi:subscribe'), 'mautic_notification_popup' => array('path' => '/notification', 'controller' => 'MauticNotificationBundle:Popup:index'), 'mautic_onesignal_worker' => array('path' => '/OneSignalSDKWorker.js', 'controller' => 'MauticNotificationBundle:Js:worker'), 'mautic_onesignal_updater' => array('path' => '/OneSignalSDKUpdaterWorker.js', 'controller' => 'MauticNotificationBundle:Js:updater'), 'mautic_onesignal_manifest' => array('path' => '/manifest.json', 'controller' => 'MauticNotificationBundle:Js:manifest')), 'api' => array('mautic_api_notificationsstandard' => array('standard_entity' => true, 'name' => 'notifications', 'path' => '/notifications', 'controller' => 'MauticNotificationBundle:Api\\NotificationApi'))), 'menu' => array('main' => array('items' => array('mautic.notification.notifications' => array('route' => 'mautic_notification_index', 'access' => array(0 => 'notification:notifications:viewown', 1 => 'notification:notifications:viewother'), 'checks' => array('parameters' => array('notification_enabled' => true)), 'parent' => 'mautic.core.channels', 'priority' => 80)))), 'parameters' => array('notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true))), 'MauticPageBundle' => array('isPlugin' => false, 'base' => 'Page', 'bundle' => 'PageBundle', 'namespace' => 'Mautic\\PageBundle', 'symfonyBundleName' => 'MauticPageBundle', 'bundleClass' => 'Mautic\\PageBundle\\MauticPageBundle', 'permissionClasses' => array('page' => '\\Mautic\\PageBundle\\Security\\Permissions\\PagePermissions'), 'relative' => 'app/bundles/PageBundle', 'directory' => ($this->targetDirs[2].'/bundles/PageBundle'), 'config' => array('routes' => array('main' => array('mautic_page_index' => array('path' => '/pages/{page}', 'controller' => 'MauticPageBundle:Page:index'), 'mautic_page_action' => array('path' => '/pages/{objectAction}/{objectId}', 'controller' => 'MauticPageBundle:Page:execute')), 'public' => array('mautic_page_tracker' => array('path' => '/mtracking.gif', 'controller' => 'MauticPageBundle:Public:trackingImage'), 'mautic_page_tracker_cors' => array('path' => '/mtc/event', 'controller' => 'MauticPageBundle:Public:tracking'), 'mautic_page_tracker_getcontact' => array('path' => '/mtc', 'controller' => 'MauticPageBundle:Public:getContactId'), 'mautic_url_redirect' => array('path' => '/r/{redirectId}', 'controller' => 'MauticPageBundle:Public:redirect'), 'mautic_page_redirect' => array('path' => '/redirect/{redirectId}', 'controller' => 'MauticPageBundle:Public:redirect'), 'mautic_page_preview' => array('path' => '/page/preview/{id}', 'controller' => 'MauticPageBundle:Public:preview'), 'mautic_gated_video_hit' => array('path' => '/video/hit', 'controller' => 'MauticPageBundle:Public:hitVideo')), 'api' => array('mautic_api_pagesstandard' => array('standard_entity' => true, 'name' => 'pages', 'path' => '/pages', 'controller' => 'MauticPageBundle:Api\\PageApi')), 'catchall' => array('mautic_page_public' => array('path' => '/{slug}', 'controller' => 'MauticPageBundle:Public:index', 'requirements' => array('slug' => '^(?!(_(profiler|wdt)|css|images|js|favicon.ico|apps/bundles/|plugins/)).+')))), 'menu' => array('main' => array('items' => array('mautic.page.pages' => array('route' => 'mautic_page_index', 'access' => array(0 => 'page:pages:viewown', 1 => 'page:pages:viewother'), 'parent' => 'mautic.core.components', 'priority' => 100)))), 'categories' => array('page' => NULL), 'services' => array('events' => array('mautic.page.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\PageSubscriber', 'arguments' => array(0 => 'templating.helper.assets', 1 => 'mautic.helper.ip_lookup', 2 => 'mautic.core.model.auditlog')), 'mautic.pagebuilder.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\BuilderSubscriber', 'arguments' => array(0 => 'mautic.page.helper.token', 1 => 'mautic.helper.integration', 2 => 'mautic.page.model.page')), 'mautic.pagetoken.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\TokenSubscriber'), 'mautic.page.pointbundle.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\PointSubscriber', 'arguments' => array(0 => 'mautic.point.model.point')), 'mautic.page.reportbundle.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\ReportSubscriber'), 'mautic.page.campaignbundle.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\CampaignSubscriber', 'arguments' => array(0 => 'mautic.page.model.page', 1 => 'mautic.campaign.model.event')), 'mautic.page.leadbundle.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\LeadSubscriber', 'arguments' => array(0 => 'mautic.page.model.page', 1 => 'mautic.page.model.video'), 'methodCalls' => array('setModelFactory' => array(0 => 'mautic.model.factory'))), 'mautic.page.calendarbundle.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\CalendarSubscriber', 'arguments' => array(0 => 'mautic.page.model.page')), 'mautic.page.configbundle.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\ConfigSubscriber'), 'mautic.page.search.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\SearchSubscriber', 'arguments' => array(0 => 'mautic.helper.user', 1 => 'mautic.page.model.page')), 'mautic.page.webhook.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\WebhookSubscriber', 'methodCalls' => array('setWebhookModel' => array(0 => 'mautic.webhook.model.webhook'))), 'mautic.page.dashboard.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\DashboardSubscriber', 'arguments' => array(0 => 'mautic.page.model.page')), 'mautic.page.js.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\BuildJsSubscriber', 'arguments' => array(0 => 'templating.helper.assets')), 'mautic.page.maintenance.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\MaintenanceSubscriber', 'arguments' => array(0 => 'doctrine.dbal.default_connection')), 'mautic.page.stats.subscriber' => array('class' => 'Mautic\\PageBundle\\EventListener\\StatsSubscriber', 'arguments' => array(0 => 'doctrine.orm.entity_manager'))), 'forms' => array('mautic.form.type.page' => array('class' => 'Mautic\\PageBundle\\Form\\Type\\PageType', 'arguments' => 'mautic.factory', 'alias' => 'page'), 'mautic.form.type.pagevariant' => array('class' => 'Mautic\\PageBundle\\Form\\Type\\VariantType', 'arguments' => 'mautic.factory', 'alias' => 'pagevariant'), 'mautic.form.type.pointaction_pointhit' => array('class' => 'Mautic\\PageBundle\\Form\\Type\\PointActionPageHitType', 'alias' => 'pointaction_pagehit'), 'mautic.form.type.pointaction_urlhit' => array('class' => 'Mautic\\PageBundle\\Form\\Type\\PointActionUrlHitType', 'alias' => 'pointaction_urlhit'), 'mautic.form.type.pagehit.campaign_trigger' => array('class' => 'Mautic\\PageBundle\\Form\\Type\\CampaignEventPageHitType', 'alias' => 'campaignevent_pagehit'), 'mautic.form.type.pagelist' => array('class' => 'Mautic\\PageBundle\\Form\\Type\\PageListType', 'arguments' => 'mautic.factory', 'alias' => 'page_list'), 'mautic.form.type.page_abtest_settings' => array('class' => 'Mautic\\PageBundle\\Form\\Type\\AbTestPropertiesType', 'alias' => 'page_abtest_settings'), 'mautic.form.type.page_publish_dates' => array('class' => 'Mautic\\PageBundle\\Form\\Type\\PagePublishDatesType', 'alias' => 'page_publish_dates'), 'mautic.form.type.pageconfig' => array('class' => 'Mautic\\PageBundle\\Form\\Type\\ConfigType', 'alias' => 'pageconfig'), 'mautic.form.type.slideshow_config' => array('class' => 'Mautic\\PageBundle\\Form\\Type\\SlideshowGlobalConfigType', 'alias' => 'slideshow_config'), 'mautic.form.type.slideshow_slide_config' => array('class' => 'Mautic\\PageBundle\\Form\\Type\\SlideshowSlideConfigType', 'alias' => 'slideshow_slide_config'), 'mautic.form.type.redirect_list' => array('class' => 'Mautic\\PageBundle\\Form\\Type\\RedirectListType', 'arguments' => 'mautic.factory', 'alias' => 'redirect_list'), 'mautic.form.type.page_dashboard_hits_in_time_widget' => array('class' => 'Mautic\\PageBundle\\Form\\Type\\DashboardHitsInTimeWidgetType', 'alias' => 'page_dashboard_hits_in_time_widget')), 'models' => array('mautic.page.model.page' => array('class' => 'Mautic\\PageBundle\\Model\\PageModel', 'arguments' => array(0 => 'mautic.helper.cookie', 1 => 'mautic.helper.ip_lookup', 2 => 'mautic.lead.model.lead', 3 => 'mautic.lead.model.field', 4 => 'mautic.page.model.redirect', 5 => 'mautic.page.model.trackable'), 'methodCalls' => array('setCatInUrl' => array(0 => '%mautic.cat_in_page_url%'))), 'mautic.page.model.redirect' => array('class' => 'Mautic\\PageBundle\\Model\\RedirectModel', 'arguments' => array(0 => 'mautic.helper.url')), 'mautic.page.model.trackable' => array('class' => 'Mautic\\PageBundle\\Model\\TrackableModel', 'arguments' => array(0 => 'mautic.page.model.redirect')), 'mautic.page.model.video' => array('class' => 'Mautic\\PageBundle\\Model\\VideoModel', 'arguments' => array(0 => 'mautic.lead.model.lead', 1 => 'mautic.helper.ip_lookup'))), 'other' => array('mautic.page.helper.token' => array('class' => 'Mautic\\PageBundle\\Helper\\TokenHelper', 'arguments' => 'mautic.page.model.page'))), 'parameters' => array('cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary')))), 'MauticPluginBundle' => array('isPlugin' => false, 'base' => 'Plugin', 'bundle' => 'PluginBundle', 'namespace' => 'Mautic\\PluginBundle', 'symfonyBundleName' => 'MauticPluginBundle', 'bundleClass' => 'Mautic\\PluginBundle\\MauticPluginBundle', 'permissionClasses' => array('plugin' => '\\Mautic\\PluginBundle\\Security\\Permissions\\PluginPermissions'), 'relative' => 'app/bundles/PluginBundle', 'directory' => ($this->targetDirs[2].'/bundles/PluginBundle'), 'config' => array('routes' => array('main' => array('mautic_integration_auth_callback_secure' => array('path' => '/plugins/integrations/authcallback/{integration}', 'controller' => 'MauticPluginBundle:Auth:authCallback'), 'mautic_integration_auth_postauth_secure' => array('path' => '/plugins/integrations/authstatus/{integration}', 'controller' => 'MauticPluginBundle:Auth:authStatus'), 'mautic_plugin_index' => array('path' => '/plugins', 'controller' => 'MauticPluginBundle:Plugin:index'), 'mautic_plugin_config' => array('path' => '/plugins/config/{name}/{page}', 'controller' => 'MauticPluginBundle:Plugin:config'), 'mautic_plugin_info' => array('path' => '/plugins/info/{name}', 'controller' => 'MauticPluginBundle:Plugin:info'), 'mautic_plugin_reload' => array('path' => '/plugins/reload', 'controller' => 'MauticPluginBundle:Plugin:reload')), 'public' => array('mautic_integration_auth_user' => array('path' => '/plugins/integrations/authuser/{integration}', 'controller' => 'MauticPluginBundle:Auth:authUser'), 'mautic_integration_auth_callback' => array('path' => '/plugins/integrations/authcallback/{integration}', 'controller' => 'MauticPluginBundle:Auth:authCallback'), 'mautic_integration_auth_postauth' => array('path' => '/plugins/integrations/authstatus/{integration}', 'controller' => 'MauticPluginBundle:Auth:authStatus'))), 'menu' => array('admin' => array('priority' => 50, 'items' => array('mautic.plugin.plugins' => array('id' => 'mautic_plugin_root', 'iconClass' => 'fa-plus-circle', 'access' => 'plugin:plugins:manage', 'route' => 'mautic_plugin_index')))), 'services' => array('events' => array('mautic.plugin.pointbundle.subscriber' => array('class' => 'Mautic\\PluginBundle\\EventListener\\PointSubscriber'), 'mautic.plugin.formbundle.subscriber' => array('class' => 'Mautic\\PluginBundle\\EventListener\\FormSubscriber'), 'mautic.plugin.campaignbundle.subscriber' => array('class' => 'Mautic\\PluginBundle\\EventListener\\CampaignSubscriber', 'arguments' => array(0 => 'mautic.helper.integration')), 'mautic.plugin.leadbundle.subscriber' => array('class' => 'Mautic\\PluginBundle\\EventListener\\LeadSubscriber', 'arguments' => array(0 => 'mautic.plugin.model.plugin'))), 'forms' => array('mautic.form.type.integration.details' => array('class' => 'Mautic\\PluginBundle\\Form\\Type\\DetailsType', 'alias' => 'integration_details'), 'mautic.form.type.integration.settings' => array('class' => 'Mautic\\PluginBundle\\Form\\Type\\FeatureSettingsType', 'arguments' => array(0 => 'mautic.factory', 1 => 'session', 2 => 'mautic.helper.core_parameters', 3 => 'translator'), 'alias' => 'integration_featuresettings'), 'mautic.form.type.integration.fields' => array('class' => 'Mautic\\PluginBundle\\Form\\Type\\FieldsType', 'alias' => 'integration_fields'), 'mautic.form.type.integration.company.fields' => array('class' => 'Mautic\\PluginBundle\\Form\\Type\\CompanyFieldsType', 'alias' => 'integration_company_fields'), 'mautic.form.type.integration.keys' => array('class' => 'Mautic\\PluginBundle\\Form\\Type\\KeysType', 'alias' => 'integration_keys'), 'mautic.form.type.integration.list' => array('class' => 'Mautic\\PluginBundle\\Form\\Type\\IntegrationsListType', 'arguments' => 'mautic.factory', 'alias' => 'integration_list'), 'mautic.form.type.integration.config' => array('class' => 'Mautic\\PluginBundle\\Form\\Type\\IntegrationConfigType', 'alias' => 'integration_config')), 'other' => array('mautic.helper.integration' => array('class' => 'Mautic\\PluginBundle\\Helper\\IntegrationHelper', 'arguments' => 'mautic.factory')), 'models' => array('mautic.plugin.model.plugin' => array('class' => 'Mautic\\PluginBundle\\Model\\PluginModel', 'arguments' => array(0 => 'mautic.lead.model.field')))))), 'MauticPointBundle' => array('isPlugin' => false, 'base' => 'Point', 'bundle' => 'PointBundle', 'namespace' => 'Mautic\\PointBundle', 'symfonyBundleName' => 'MauticPointBundle', 'bundleClass' => 'Mautic\\PointBundle\\MauticPointBundle', 'permissionClasses' => array('point' => '\\Mautic\\PointBundle\\Security\\Permissions\\PointPermissions'), 'relative' => 'app/bundles/PointBundle', 'directory' => ($this->targetDirs[2].'/bundles/PointBundle'), 'config' => array('routes' => array('main' => array('mautic_pointtriggerevent_action' => array('path' => '/points/triggers/events/{objectAction}/{objectId}', 'controller' => 'MauticPointBundle:TriggerEvent:execute'), 'mautic_pointtrigger_index' => array('path' => '/points/triggers/{page}', 'controller' => 'MauticPointBundle:Trigger:index'), 'mautic_pointtrigger_action' => array('path' => '/points/triggers/{objectAction}/{objectId}', 'controller' => 'MauticPointBundle:Trigger:execute'), 'mautic_point_index' => array('path' => '/points/{page}', 'controller' => 'MauticPointBundle:Point:index'), 'mautic_point_action' => array('path' => '/points/{objectAction}/{objectId}', 'controller' => 'MauticPointBundle:Point:execute')), 'api' => array('mautic_api_pointactionsstandard' => array('standard_entity' => true, 'name' => 'points', 'path' => '/points', 'controller' => 'MauticPointBundle:Api\\PointApi'), 'mautic_api_getpointactiontypes' => array('path' => '/points/actions/types', 'controller' => 'MauticPointBundle:Api\\PointApi:getPointActionTypes'), 'mautic_api_pointtriggersstandard' => array('standard_entity' => true, 'name' => 'triggers', 'path' => '/points/triggers', 'controller' => 'MauticPointBundle:Api\\TriggerApi'), 'mautic_api_getpointtriggereventtypes' => array('path' => '/points/triggers/events/types', 'controller' => 'MauticPointBundle:Api\\TriggerApi:getPointTriggerEventTypes'), 'mautic_api_pointtriggerdeleteevents' => array('path' => '/points/triggers/{triggerId}/events/delete', 'controller' => 'MauticPointBundle:Api\\TriggerApi:deletePointTriggerEvents', 'method' => 'DELETE'), 'mautic_api_adjustcontactpoints' => array('path' => '/contacts/{leadId}/points/{operator}/{delta}', 'controller' => 'MauticPointBundle:Api\\PointApi:adjustPoints', 'method' => 'POST'))), 'menu' => array('main' => array('mautic.points.menu.root' => array('id' => 'mautic_points_root', 'iconClass' => 'fa-calculator', 'access' => array(0 => 'point:points:view', 1 => 'point:triggers:view'), 'priority' => 30, 'children' => array('mautic.point.menu.index' => array('route' => 'mautic_point_index', 'access' => 'point:points:view'), 'mautic.point.trigger.menu.index' => array('route' => 'mautic_pointtrigger_index', 'access' => 'point:triggers:view'))))), 'categories' => array('point' => NULL), 'services' => array('events' => array('mautic.point.subscriber' => array('class' => 'Mautic\\PointBundle\\EventListener\\PointSubscriber', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.core.model.auditlog')), 'mautic.point.leadbundle.subscriber' => array('class' => 'Mautic\\PointBundle\\EventListener\\LeadSubscriber', 'arguments' => array(0 => 'mautic.point.model.trigger')), 'mautic.point.search.subscriber' => array('class' => 'Mautic\\PointBundle\\EventListener\\SearchSubscriber', 'arguments' => array(0 => 'mautic.point.model.point', 1 => 'mautic.point.model.trigger')), 'mautic.point.dashboard.subscriber' => array('class' => 'Mautic\\PointBundle\\EventListener\\DashboardSubscriber', 'arguments' => array(0 => 'mautic.point.model.point')), 'mautic.point.stats.subscriber' => array('class' => 'Mautic\\PointBundle\\EventListener\\StatsSubscriber', 'arguments' => array(0 => 'doctrine.orm.entity_manager'))), 'forms' => array('mautic.point.type.form' => array('class' => 'Mautic\\PointBundle\\Form\\Type\\PointType', 'arguments' => 'mautic.factory', 'alias' => 'point'), 'mautic.point.type.action' => array('class' => 'Mautic\\PointBundle\\Form\\Type\\PointActionType', 'alias' => 'pointaction'), 'mautic.pointtrigger.type.form' => array('class' => 'Mautic\\PointBundle\\Form\\Type\\TriggerType', 'arguments' => 'mautic.factory', 'alias' => 'pointtrigger'), 'mautic.pointtrigger.type.action' => array('class' => 'Mautic\\PointBundle\\Form\\Type\\TriggerEventType', 'alias' => 'pointtriggerevent'), 'mautic.point.type.genericpoint_settings' => array('class' => 'Mautic\\PointBundle\\Form\\Type\\GenericPointSettingsType', 'alias' => 'genericpoint_settings')), 'models' => array('mautic.point.model.point' => array('class' => 'Mautic\\PointBundle\\Model\\PointModel', 'arguments' => array(0 => 'session', 1 => 'mautic.helper.ip_lookup', 2 => 'mautic.lead.model.lead')), 'mautic.point.model.triggerevent' => array('class' => 'Mautic\\PointBundle\\Model\\TriggerEventModel'), 'mautic.point.model.trigger' => array('class' => 'Mautic\\PointBundle\\Model\\TriggerModel', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.lead.model.lead', 2 => 'mautic.point.model.triggerevent')))))), 'MauticReportBundle' => array('isPlugin' => false, 'base' => 'Report', 'bundle' => 'ReportBundle', 'namespace' => 'Mautic\\ReportBundle', 'symfonyBundleName' => 'MauticReportBundle', 'bundleClass' => 'Mautic\\ReportBundle\\MauticReportBundle', 'permissionClasses' => array('report' => '\\Mautic\\ReportBundle\\Security\\Permissions\\ReportPermissions'), 'relative' => 'app/bundles/ReportBundle', 'directory' => ($this->targetDirs[2].'/bundles/ReportBundle'), 'config' => array('routes' => array('main' => array('mautic_report_index' => array('path' => '/reports/{page}', 'controller' => 'MauticReportBundle:Report:index'), 'mautic_report_export' => array('path' => '/reports/view/{objectId}/export/{format}', 'controller' => 'MauticReportBundle:Report:export', 'defaults' => array('format' => 'csv')), 'mautic_report_view' => array('path' => '/reports/view/{objectId}/{reportPage}', 'controller' => 'MauticReportBundle:Report:view', 'defaults' => array('reportPage' => 1), 'requirements' => array('reportPage' => '\\d+')), 'mautic_report_action' => array('path' => '/reports/{objectAction}/{objectId}', 'controller' => 'MauticReportBundle:Report:execute')), 'api' => array('mautic_api_getreports' => array('path' => '/reports', 'controller' => 'MauticReportBundle:Api\\ReportApi:getEntities'), 'mautic_api_getreport' => array('path' => '/reports/{id}', 'controller' => 'MauticReportBundle:Api\\ReportApi:getReport'))), 'menu' => array('main' => array('mautic.report.reports' => array('route' => 'mautic_report_index', 'iconClass' => 'fa-line-chart', 'access' => array(0 => 'report:reports:viewown', 1 => 'report:reports:viewother'), 'priority' => 20))), 'services' => array('events' => array('mautic.report.search.subscriber' => array('class' => 'Mautic\\ReportBundle\\EventListener\\SearchSubscriber', 'arguments' => array(0 => 'mautic.helper.user', 1 => 'mautic.report.model.report')), 'mautic.report.report.subscriber' => array('class' => 'Mautic\\ReportBundle\\EventListener\\ReportSubscriber', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.core.model.auditlog')), 'mautic.report.dashboard.subscriber' => array('class' => 'Mautic\\ReportBundle\\EventListener\\DashboardSubscriber', 'arguments' => array(0 => 'mautic.report.model.report', 1 => 'mautic.security'))), 'forms' => array('mautic.form.type.report' => array('class' => 'Mautic\\ReportBundle\\Form\\Type\\ReportType', 'arguments' => 'mautic.factory', 'alias' => 'report'), 'mautic.form.type.filter_selector' => array('class' => 'Mautic\\ReportBundle\\Form\\Type\\FilterSelectorType', 'alias' => 'filter_selector'), 'mautic.form.type.table_order' => array('class' => 'Mautic\\ReportBundle\\Form\\Type\\TableOrderType', 'arguments' => 'mautic.factory', 'alias' => 'table_order'), 'mautic.form.type.report_filters' => array('class' => 'Mautic\\ReportBundle\\Form\\Type\\ReportFiltersType', 'arguments' => 'mautic.factory', 'alias' => 'report_filters'), 'mautic.form.type.report_dynamic_filters' => array('class' => 'Mautic\\ReportBundle\\Form\\Type\\DynamicFiltersType', 'alias' => 'report_dynamicfilters'), 'mautic.form.type.report_widget' => array('class' => 'Mautic\\ReportBundle\\Form\\Type\\ReportWidgetType', 'alias' => 'report_widget', 'arguments' => 'mautic.report.model.report')), 'models' => array('mautic.report.model.report' => array('class' => 'Mautic\\ReportBundle\\Model\\ReportModel', 'arguments' => array(0 => 'mautic.helper.core_parameters', 1 => 'mautic.helper.template.formatter', 2 => 'mautic.helper.templating', 3 => 'mautic.channel.helper.channel_list')))))), 'MauticSmsBundle' => array('isPlugin' => false, 'base' => 'Sms', 'bundle' => 'SmsBundle', 'namespace' => 'Mautic\\SmsBundle', 'symfonyBundleName' => 'MauticSmsBundle', 'bundleClass' => 'Mautic\\SmsBundle\\MauticSmsBundle', 'permissionClasses' => array('sms' => '\\Mautic\\SmsBundle\\Security\\Permissions\\SmsPermissions'), 'relative' => 'app/bundles/SmsBundle', 'directory' => ($this->targetDirs[2].'/bundles/SmsBundle'), 'config' => array('services' => array('events' => array('mautic.sms.campaignbundle.subscriber' => array('class' => 'Mautic\\SmsBundle\\EventListener\\CampaignSubscriber', 'arguments' => array(0 => 'mautic.helper.core_parameters', 1 => 'mautic.sms.model.sms')), 'mautic.sms.configbundle.subscriber' => array('class' => 'Mautic\\SmsBundle\\EventListener\\ConfigSubscriber'), 'mautic.sms.smsbundle.subscriber' => array('class' => 'Mautic\\SmsBundle\\EventListener\\SmsSubscriber', 'arguments' => array(0 => 'mautic.core.model.auditlog', 1 => 'mautic.page.model.trackable', 2 => 'mautic.page.helper.token', 3 => 'mautic.asset.helper.token')), 'mautic.sms.channel.subscriber' => array('class' => 'Mautic\\SmsBundle\\EventListener\\ChannelSubscriber'), 'mautic.sms.message_queue.subscriber' => array('class' => 'Mautic\\SmsBundle\\EventListener\\MessageQueueSubscriber', 'arguments' => array(0 => 'mautic.sms.model.sms')), 'mautic.sms.stats.subscriber' => array('class' => 'Mautic\\SmsBundle\\EventListener\\StatsSubscriber', 'arguments' => array(0 => 'doctrine.orm.entity_manager'))), 'forms' => array('mautic.form.type.sms' => array('class' => 'Mautic\\SmsBundle\\Form\\Type\\SmsType', 'arguments' => 'mautic.factory', 'alias' => 'sms'), 'mautic.form.type.smsconfig' => array('class' => 'Mautic\\SmsBundle\\Form\\Type\\ConfigType', 'alias' => 'smsconfig'), 'mautic.form.type.smssend_list' => array('class' => 'Mautic\\SmsBundle\\Form\\Type\\SmsSendType', 'arguments' => 'router', 'alias' => 'smssend_list'), 'mautic.form.type.sms_list' => array('class' => 'Mautic\\SmsBundle\\Form\\Type\\SmsListType', 'alias' => 'sms_list')), 'helpers' => array('mautic.helper.sms' => array('class' => 'Mautic\\SmsBundle\\Helper\\SmsHelper', 'arguments' => array(0 => 'doctrine.orm.entity_manager', 1 => 'mautic.lead.model.lead', 2 => 'mautic.helper.phone_number', 3 => 'mautic.sms.model.sms', 4 => '%mautic.sms_frequency_number%'), 'alias' => 'sms_helper')), 'other' => array('mautic.sms.api' => array('class' => 'Mautic\\SmsBundle\\Api\\TwilioApi', 'arguments' => array(0 => 'mautic.page.model.trackable', 1 => 'mautic.twilio.service', 2 => 'mautic.helper.phone_number', 3 => '%mautic.sms_sending_phone_number%', 4 => 'monolog.logger.mautic'), 'alias' => 'sms_api'), 'mautic.twilio.service' => array('class' => 'Services_Twilio', 'arguments' => array(0 => '%mautic.sms_username%', 1 => '%mautic.sms_password%'), 'alias' => 'twilio_service')), 'models' => array('mautic.sms.model.sms' => array('class' => 'Mautic\\SmsBundle\\Model\\SmsModel', 'arguments' => array(0 => 'mautic.page.model.trackable', 1 => 'mautic.lead.model.lead', 2 => 'mautic.channel.model.queue', 3 => 'mautic.sms.api')))), 'routes' => array('main' => array('mautic_sms_index' => array('path' => '/sms/{page}', 'controller' => 'MauticSmsBundle:Sms:index'), 'mautic_sms_action' => array('path' => '/sms/{objectAction}/{objectId}', 'controller' => 'MauticSmsBundle:Sms:execute'), 'mautic_sms_contacts' => array('path' => '/sms/view/{objectId}/contact/{page}', 'controller' => 'MauticSmsBundle:Sms:contacts')), 'public' => array('mautic_receive_sms' => array('path' => '/sms/receive', 'controller' => 'MauticSmsBundle:Api\\SmsApi:receive')), 'api' => array('mautic_api_smsesstandard' => array('standard_entity' => true, 'name' => 'smses', 'path' => '/smses', 'controller' => 'MauticSmsBundle:Api\\SmsApi'))), 'menu' => array('main' => array('items' => array('mautic.sms.smses' => array('route' => 'mautic_sms_index', 'access' => array(0 => 'sms:smses:viewown', 1 => 'sms:smses:viewother'), 'parent' => 'mautic.core.channels', 'checks' => array('parameters' => array('sms_enabled' => true)), 'priority' => 70)))), 'parameters' => array('sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL))), 'MauticStageBundle' => array('isPlugin' => false, 'base' => 'Stage', 'bundle' => 'StageBundle', 'namespace' => 'Mautic\\StageBundle', 'symfonyBundleName' => 'MauticStageBundle', 'bundleClass' => 'Mautic\\StageBundle\\MauticStageBundle', 'permissionClasses' => array('stage' => '\\Mautic\\StageBundle\\Security\\Permissions\\StagePermissions'), 'relative' => 'app/bundles/StageBundle', 'directory' => ($this->targetDirs[2].'/bundles/StageBundle'), 'config' => array('routes' => array('main' => array('mautic_stage_index' => array('path' => '/stages/{page}', 'controller' => 'MauticStageBundle:Stage:index'), 'mautic_stage_action' => array('path' => '/stages/{objectAction}/{objectId}', 'controller' => 'MauticStageBundle:Stage:execute')), 'api' => array('mautic_api_stagesstandard' => array('standard_entity' => true, 'name' => 'stages', 'path' => '/stages', 'controller' => 'MauticStageBundle:Api\\StageApi'), 'mautic_api_stageddcontact' => array('path' => '/stages/{id}/contact/{contactId}/add', 'controller' => 'MauticStageBundle:Api\\StageApi:addContact', 'method' => 'POST'), 'mautic_api_stageremovecontact' => array('path' => '/stages/{id}/contact/{contactId}/remove', 'controller' => 'MauticStageBundle:Api\\StageApi:removeContact', 'method' => 'POST'), 'bc_mautic_api_stageddcontact' => array('path' => '/stages/{id}/contact/add/{contactId}', 'controller' => 'MauticStageBundle:Api\\StageApi:addContact', 'method' => 'POST'), 'bc_mautic_api_stageremovecontact' => array('path' => '/stages/{id}/contact/remove/{contactId}', 'controller' => 'MauticStageBundle:Api\\StageApi:removeContact', 'method' => 'POST'))), 'menu' => array('main' => array('mautic.stages.menu.index' => array('route' => 'mautic_stage_index', 'iconClass' => 'fa-tachometer', 'access' => array(0 => 'stage:stages:view'), 'priority' => 25))), 'categories' => array('stage' => NULL), 'services' => array('events' => array('mautic.stage.campaignbundle.subscriber' => array('class' => 'Mautic\\StageBundle\\EventListener\\CampaignSubscriber', 'arguments' => array(0 => 'mautic.lead.model.lead', 1 => 'mautic.stage.model.stage')), 'mautic.stage.subscriber' => array('class' => 'Mautic\\StageBundle\\EventListener\\StageSubscriber', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.core.model.auditlog')), 'mautic.stage.leadbundle.subscriber' => array('class' => 'Mautic\\StageBundle\\EventListener\\LeadSubscriber'), 'mautic.stage.search.subscriber' => array('class' => 'Mautic\\StageBundle\\EventListener\\SearchSubscriber', 'arguments' => array(0 => 'mautic.stage.model.stage')), 'mautic.stage.dashboard.subscriber' => array('class' => 'Mautic\\StageBundle\\EventListener\\DashboardSubscriber', 'arguments' => array(0 => 'mautic.stage.model.stage')), 'mautic.stage.stats.subscriber' => array('class' => 'Mautic\\StageBundle\\EventListener\\StatsSubscriber', 'arguments' => array(0 => 'doctrine.orm.entity_manager'))), 'forms' => array('mautic.stage.type.form' => array('class' => 'Mautic\\StageBundle\\Form\\Type\\StageType', 'arguments' => 'mautic.factory', 'alias' => 'stage'), 'mautic.stage.type.action' => array('class' => 'Mautic\\StageBundle\\Form\\Type\\StageActionType', 'arguments' => 'mautic.factory', 'alias' => 'stageaction'), 'mautic.stage.type.action_list' => array('class' => 'Mautic\\StageBundle\\Form\\Type\\StageActionListType', 'arguments' => 'mautic.factory', 'alias' => 'stageaction_list'), 'mautic.stage.type.action_change' => array('class' => 'Mautic\\StageBundle\\Form\\Type\\StageActionChangeType', 'arguments' => 'mautic.factory', 'alias' => 'stageaction_change'), 'mautic.stage.type.stage_list' => array('class' => 'Mautic\\StageBundle\\Form\\Type\\StageListType', 'arguments' => 'mautic.factory', 'alias' => 'stage_list'), 'mautic.point.type.genericstage_settings' => array('class' => 'Mautic\\StageBundle\\Form\\Type\\GenericStageSettingsType', 'alias' => 'genericstage_settings')), 'models' => array('mautic.stage.model.stage' => array('class' => 'Mautic\\StageBundle\\Model\\StageModel', 'arguments' => array(0 => 'mautic.lead.model.lead', 1 => 'session')))))), 'MauticUserBundle' => array('isPlugin' => false, 'base' => 'User', 'bundle' => 'UserBundle', 'namespace' => 'Mautic\\UserBundle', 'symfonyBundleName' => 'MauticUserBundle', 'bundleClass' => 'Mautic\\UserBundle\\MauticUserBundle', 'permissionClasses' => array('user' => '\\Mautic\\UserBundle\\Security\\Permissions\\UserPermissions'), 'relative' => 'app/bundles/UserBundle', 'directory' => ($this->targetDirs[2].'/bundles/UserBundle'), 'config' => array('menu' => array('admin' => array('mautic.user.users' => array('access' => 'user:users:view', 'route' => 'mautic_user_index', 'iconClass' => 'fa-users'), 'mautic.user.roles' => array('access' => 'user:roles:view', 'route' => 'mautic_role_index', 'iconClass' => 'fa-lock'))), 'routes' => array('main' => array('login' => array('path' => '/login', 'controller' => 'MauticUserBundle:Security:login'), 'mautic_user_logincheck' => array('path' => '/login_check', 'controller' => 'MauticUserBundle:Security:loginCheck'), 'mautic_user_logout' => array('path' => '/logout'), 'mautic_sso_login' => array('path' => '/sso_login/{integration}', 'controller' => 'MauticUserBundle:Security:ssoLogin'), 'mautic_sso_login_check' => array('path' => '/sso_login_check/{integration}', 'controller' => 'MauticUserBundle:Security:ssoLoginCheck'), 'lightsaml_sp.login' => array('path' => '/saml/login', 'controller' => 'LightSamlSpBundle:Default:login'), 'lightsaml_sp.login_check' => array('path' => '/saml/login_check'), 'mautic_user_index' => array('path' => '/users/{page}', 'controller' => 'MauticUserBundle:User:index'), 'mautic_user_action' => array('path' => '/users/{objectAction}/{objectId}', 'controller' => 'MauticUserBundle:User:execute'), 'mautic_role_index' => array('path' => '/roles/{page}', 'controller' => 'MauticUserBundle:Role:index'), 'mautic_role_action' => array('path' => '/roles/{objectAction}/{objectId}', 'controller' => 'MauticUserBundle:Role:execute'), 'mautic_user_account' => array('path' => '/account', 'controller' => 'MauticUserBundle:Profile:index')), 'api' => array('mautic_api_usersstandard' => array('standard_entity' => true, 'name' => 'users', 'path' => '/users', 'controller' => 'MauticUserBundle:Api\\UserApi'), 'mautic_api_getself' => array('path' => '/users/self', 'controller' => 'MauticUserBundle:Api\\UserApi:getSelf'), 'mautic_api_checkpermission' => array('path' => '/users/{id}/permissioncheck', 'controller' => 'MauticUserBundle:Api\\UserApi:isGranted', 'method' => 'POST'), 'mautic_api_getuserroles' => array('path' => '/users/list/roles', 'controller' => 'MauticUserBundle:Api\\UserApi:getRoles'), 'mautic_api_rolesstandard' => array('standard_entity' => true, 'name' => 'roles', 'path' => '/roles', 'controller' => 'MauticUserBundle:Api\\RoleApi')), 'public' => array('mautic_user_passwordreset' => array('path' => '/passwordreset', 'controller' => 'MauticUserBundle:Public:passwordReset'), 'mautic_user_passwordresetconfirm' => array('path' => '/passwordresetconfirm', 'controller' => 'MauticUserBundle:Public:passwordResetConfirm'), 'lightsaml_sp.metadata' => array('path' => '/saml/metadata.xml', 'controller' => 'LightSamlSpBundle:Default:metadata'), 'lightsaml_sp.discovery' => array('path' => '/saml/discovery', 'controller' => 'LightSamlSpBundle:Default:discovery'))), 'services' => array('events' => array('mautic.user.subscriber' => array('class' => 'Mautic\\UserBundle\\EventListener\\UserSubscriber', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.core.model.auditlog')), 'mautic.user.search.subscriber' => array('class' => 'Mautic\\UserBundle\\EventListener\\SearchSubscriber', 'arguments' => array(0 => 'mautic.user.model.user', 1 => 'mautic.user.model.role')), 'mautic.user.config.subscriber' => array('class' => 'Mautic\\UserBundle\\EventListener\\ConfigSubscriber'), 'mautic.user.route.subscriber' => array('class' => 'Mautic\\UserBundle\\EventListener\\RouteSubscriber')), 'forms' => array('mautic.form.type.user' => array('class' => 'Mautic\\UserBundle\\Form\\Type\\UserType', 'arguments' => array(0 => 'translator', 1 => 'doctrine.orm.entity_manager', 2 => 'mautic.user.model.user', 3 => 'mautic.helper.language', 4 => 'mautic.helper.core_parameters'), 'alias' => 'user'), 'mautic.form.type.role' => array('class' => 'Mautic\\UserBundle\\Form\\Type\\RoleType', 'alias' => 'role'), 'mautic.form.type.permissions' => array('class' => 'Mautic\\UserBundle\\Form\\Type\\PermissionsType', 'alias' => 'permissions'), 'mautic.form.type.permissionlist' => array('class' => 'Mautic\\UserBundle\\Form\\Type\\PermissionListType', 'alias' => 'permissionlist'), 'mautic.form.type.passwordreset' => array('class' => 'Mautic\\UserBundle\\Form\\Type\\PasswordResetType', 'alias' => 'passwordreset'), 'mautic.form.type.passwordresetconfirm' => array('class' => 'Mautic\\UserBundle\\Form\\Type\\PasswordResetConfirmType', 'alias' => 'passwordresetconfirm'), 'mautic.form.type.user_list' => array('class' => 'Mautic\\UserBundle\\Form\\Type\\UserListType', 'arguments' => 'mautic.user.model.user', 'alias' => 'user_list'), 'mautic.form.type.role_list' => array('class' => 'Mautic\\UserBundle\\Form\\Type\\RoleListType', 'arguments' => 'mautic.user.model.role', 'alias' => 'role_list'), 'mautic.form.type.userconfig' => array('class' => 'Mautic\\UserBundle\\Form\\Type\\ConfigType', 'alias' => 'userconfig', 'arguments' => array(0 => 'mautic.helper.core_parameters'))), 'other' => array('mautic.user.manager' => array('class' => 'Doctrine\\ORM\\EntityManager', 'arguments' => 'Mautic\\UserBundle\\Entity\\User', 'factory' => array(0 => '@doctrine', 1 => 'getManagerForClass')), 'mautic.user.repository' => array('class' => 'Mautic\\UserBundle\\Entity\\UserRepository', 'arguments' => 'Mautic\\UserBundle\\Entity\\User', 'factory' => array(0 => '@mautic.user.manager', 1 => 'getRepository')), 'mautic.permission.manager' => array('class' => 'Doctrine\\ORM\\EntityManager', 'arguments' => 'Mautic\\UserBundle\\Entity\\Permission', 'factory' => array(0 => '@doctrine', 1 => 'getManagerForClass')), 'mautic.permission.repository' => array('class' => 'Mautic\\UserBundle\\Entity\\PermissionRepository', 'arguments' => 'Mautic\\UserBundle\\Entity\\Permission', 'factory' => array(0 => '@mautic.permission.manager', 1 => 'getRepository')), 'mautic.user.form_authenticator' => array('class' => 'Mautic\\UserBundle\\Security\\Authenticator\\FormAuthenticator', 'arguments' => array(0 => 'mautic.helper.integration', 1 => 'security.password_encoder', 2 => 'event_dispatcher', 3 => 'request_stack')), 'mautic.user.preauth_authenticator' => array('class' => 'Mautic\\UserBundle\\Security\\Authenticator\\PreAuthAuthenticator', 'arguments' => array(0 => 'mautic.helper.integration', 1 => 'event_dispatcher', 2 => 'request_stack', 3 => '', 4 => ''), 'public' => ''), 'mautic.user.provider' => array('class' => 'Mautic\\UserBundle\\Security\\Provider\\UserProvider', 'arguments' => array(0 => 'mautic.user.repository', 1 => 'mautic.permission.repository', 2 => 'session', 3 => 'event_dispatcher', 4 => 'security.encoder_factory')), 'mautic.security.authentication_listener' => array('class' => 'Mautic\\UserBundle\\Security\\Firewall\\AuthenticationListener', 'arguments' => array(0 => 'mautic.security.authentication_handler', 1 => 'security.token_storage', 2 => 'security.authentication.manager', 3 => 'monolog.logger', 4 => 'event_dispatcher', 5 => ''), 'public' => ''), 'mautic.security.authentication_handler' => array('class' => 'Mautic\\UserBundle\\Security\\Authentication\\AuthenticationHandler', 'arguments' => array(0 => 'router', 1 => 'session')), 'mautic.security.logout_handler' => array('class' => 'Mautic\\UserBundle\\Security\\Authentication\\LogoutHandler', 'arguments' => array(0 => 'mautic.user.model.user', 1 => 'event_dispatcher', 2 => 'mautic.helper.user')), 'mautic.security.saml.id_store' => array('class' => 'Mautic\\UserBundle\\Security\\Store\\IdStore', 'arguments' => array(0 => 'doctrine.orm.entity_manager', 1 => 'lightsaml.system.time_provider')), 'mautic.security.saml.user_creator' => array('class' => 'Mautic\\UserBundle\\Security\\User\\UserCreator', 'arguments' => array(0 => 'doctrine.orm.entity_manager', 1 => 'lightsaml_sp.username_mapper.simple', 2 => 'mautic.user.model.user', 3 => 'security.encoder_factory', 4 => '%mautic.saml_idp_default_role%'))), 'models' => array('mautic.user.model.role' => array('class' => 'Mautic\\UserBundle\\Model\\RoleModel'), 'mautic.user.model.user' => array('class' => 'Mautic\\UserBundle\\Model\\UserModel', 'arguments' => array(0 => 'mautic.helper.mailer')))), 'parameters' => array('saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => ''))), 'MauticWebhookBundle' => array('isPlugin' => false, 'base' => 'Webhook', 'bundle' => 'WebhookBundle', 'namespace' => 'Mautic\\WebhookBundle', 'symfonyBundleName' => 'MauticWebhookBundle', 'bundleClass' => 'Mautic\\WebhookBundle\\MauticWebhookBundle', 'permissionClasses' => array('webhook' => '\\Mautic\\WebhookBundle\\Security\\Permissions\\WebhookPermissions'), 'relative' => 'app/bundles/WebhookBundle', 'directory' => ($this->targetDirs[2].'/bundles/WebhookBundle'), 'config' => array('routes' => array('main' => array('mautic_webhook_index' => array('path' => '/webhooks/{page}', 'controller' => 'MauticWebhookBundle:Webhook:index'), 'mautic_webhook_action' => array('path' => '/webhooks/{objectAction}/{objectId}', 'controller' => 'MauticWebhookBundle:Webhook:execute'))), 'menu' => array('admin' => array('items' => array('mautic.webhook.webhooks' => array('id' => 'mautic_webhook_root', 'iconClass' => 'fa-exchange', 'access' => array(0 => 'webhook:webhooks:viewown', 1 => 'webhook:webhooks:viewother'), 'route' => 'mautic_webhook_index')))), 'services' => array('forms' => array('mautic.form.type.webhook' => array('class' => 'Mautic\\WebhookBundle\\Form\\Type\\WebhookType', 'arguments' => 'translator', 'alias' => 'webhook'), 'mautic.form.type.webhookconfig' => array('class' => 'Mautic\\WebhookBundle\\Form\\Type\\ConfigType', 'alias' => 'webhookconfig')), 'events' => array('mautic.webhook.config.subscriber' => array('class' => 'Mautic\\WebhookBundle\\EventListener\\ConfigSubscriber'), 'mautic.webhook.audit.subscriber' => array('class' => 'Mautic\\WebhookBundle\\EventListener\\WebhookSubscriber', 'arguments' => array(0 => 'mautic.helper.ip_lookup', 1 => 'mautic.core.model.auditlog')), 'mautic.webhook.stats.subscriber' => array('class' => 'Mautic\\WebhookBundle\\EventListener\\StatsSubscriber', 'arguments' => array(0 => 'doctrine.orm.entity_manager'))), 'models' => array('mautic.webhook.model.webhook' => array('class' => 'Mautic\\WebhookBundle\\Model\\WebhookModel', 'arguments' => array(0 => 'mautic.helper.core_parameters', 1 => 'jms_serializer')))), 'parameters' => array('webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process')))), array('MauticTestBundle' => array('isPlugin' => true, 'base' => 'MauticTest', 'bundle' => 'MauticTestBundle', 'namespace' => 'MauticPlugin\\MauticTestBundle', 'symfonyBundleName' => 'MauticTestBundle', 'bundleClass' => 'MauticPlugin\\MauticTestBundle\\MauticTestBundle', 'permissionClasses' => array(), 'relative' => 'plugins/MauticTestBundle', 'directory' => ($this->targetDirs[3].'/plugins/MauticTestBundle'), 'config' => array('name' => 'Test Work', 'description' => 'This is test work plugin.', 'author' => 'Developer', 'version' => '1.0.0', 'routes' => array('main' => array('plugin_list_something' => array('path' => '/list-something', 'controller' => 'MauticTestBundle:Public:test'), 'plugin_create_something' => array('path' => '/create-something', 'controller' => 'MauticTestBundle:Public:createSomething'), 'plugin_delete_something' => array('path' => '/delete-something/{somethingId}', 'controller' => 'MauticTestBundle:Public:deleteSomething'))), 'services' => array('models' => array('mautic.mautictest.model.something' => array('class' => 'MauticPlugin\\MauticTestBundle\\Model\\SomethingModel'))), 'menu' => array('main' => array('test work' => array('route' => 'plugin_list_something', 'iconClass' => 'fa-gears', 'access' => 'admin', 'priority' => 10))))), 'MauticFullContactBundle' => array('isPlugin' => true, 'base' => 'MauticFullContact', 'bundle' => 'MauticFullContactBundle', 'namespace' => 'MauticPlugin\\MauticFullContactBundle', 'symfonyBundleName' => 'MauticFullContactBundle', 'bundleClass' => 'MauticPlugin\\MauticFullContactBundle\\MauticFullContactBundle', 'permissionClasses' => array(), 'relative' => 'plugins/MauticFullContactBundle', 'directory' => ($this->targetDirs[3].'/plugins/MauticFullContactBundle'), 'config' => array('name' => 'FullContact', 'description' => 'Enables integration with FullContact for contact and company lookup', 'version' => '1.0', 'author' => 'Werner Garcia', 'routes' => array('public' => array('mautic_plugin_fullcontact_index' => array('path' => '/fullcontact/callback', 'controller' => 'MauticFullContactBundle:Public:callback')), 'main' => array('mautic_plugin_fullcontact_action' => array('path' => '/fullcontact/{objectAction}/{objectId}', 'controller' => 'MauticFullContactBundle:FullContact:execute'))), 'services' => array('events' => array('mautic.plugin.fullcontact.button.subscriber' => array('class' => 'MauticPlugin\\MauticFullContactBundle\\EventListener\\ButtonSubscriber', 'arguments' => array(0 => 'mautic.helper.integration')), 'mautic.plugin.fullcontact.lead.subscriber' => array('class' => 'MauticPlugin\\MauticFullContactBundle\\EventListener\\LeadSubscriber', 'arguments' => array(0 => 'mautic.plugin.fullcontact.lookup_helper'))), 'forms' => array('mautic.form.type.fullcontact_lookup' => array('class' => 'MauticPlugin\\MauticFullContactBundle\\Form\\Type\\LookupType', 'alias' => 'fullcontact_lookup'), 'mautic.form.type.fullcontact_batch_lookup' => array('class' => 'MauticPlugin\\MauticFullContactBundle\\Form\\Type\\BatchLookupType', 'alias' => 'fullcontact_batch_lookup')), 'others' => array('mautic.plugin.fullcontact.lookup_helper' => array('class' => 'MauticPlugin\\MauticFullContactBundle\\Helper\\LookupHelper', 'arguments' => array(0 => 'mautic.helper.integration', 1 => 'mautic.helper.user', 2 => 'monolog.logger.mautic', 3 => 'router', 4 => 'mautic.lead.model.lead', 5 => 'mautic.lead.model.company')))))), 'MauticCloudStorageBundle' => array('isPlugin' => true, 'base' => 'MauticCloudStorage', 'bundle' => 'MauticCloudStorageBundle', 'namespace' => 'MauticPlugin\\MauticCloudStorageBundle', 'symfonyBundleName' => 'MauticCloudStorageBundle', 'bundleClass' => 'MauticPlugin\\MauticCloudStorageBundle\\MauticCloudStorageBundle', 'permissionClasses' => array(), 'relative' => 'plugins/MauticCloudStorageBundle', 'directory' => ($this->targetDirs[3].'/plugins/MauticCloudStorageBundle'), 'config' => array('name' => 'Cloud Storage', 'description' => 'Enables integrations with Mautic supported cloud storage services.', 'version' => '1.0', 'author' => 'Mautic', 'services' => array('events' => array('mautic.cloudstorage.remoteassetbrowse.subscriber' => array('class' => 'MauticPlugin\\MauticCloudStorageBundle\\EventListener\\RemoteAssetBrowseSubscriber')), 'forms' => array('mautic.form.type.cloudstorage.openstack' => array('class' => 'MauticPlugin\\MauticCloudStorageBundle\\Form\\Type\\OpenStackType', 'alias' => 'cloudstorage_openstack'), 'mautic.form.type.cloudstorage.rackspace' => array('class' => 'MauticPlugin\\MauticCloudStorageBundle\\Form\\Type\\RackspaceType', 'alias' => 'cloudstorage_rackspace'))))), 'MauticEmailMarketingBundle' => array('isPlugin' => true, 'base' => 'MauticEmailMarketing', 'bundle' => 'MauticEmailMarketingBundle', 'namespace' => 'MauticPlugin\\MauticEmailMarketingBundle', 'symfonyBundleName' => 'MauticEmailMarketingBundle', 'bundleClass' => 'MauticPlugin\\MauticEmailMarketingBundle\\MauticEmailMarketingBundle', 'permissionClasses' => array(), 'relative' => 'plugins/MauticEmailMarketingBundle', 'directory' => ($this->targetDirs[3].'/plugins/MauticEmailMarketingBundle'), 'config' => array('name' => 'Email Marketing', 'description' => 'Enables integration with Mautic supported email marketing services.', 'version' => '1.0', 'author' => 'Mautic', 'services' => array('forms' => array('mautic.form.type.emailmarketing.mailchimp' => array('class' => 'MauticPlugin\\MauticEmailMarketingBundle\\Form\\Type\\MailchimpType', 'arguments' => 'mautic.factory', 'alias' => 'emailmarketing_mailchimp'), 'mautic.form.type.emailmarketing.constantcontact' => array('class' => 'MauticPlugin\\MauticEmailMarketingBundle\\Form\\Type\\ConstantContactType', 'arguments' => 'mautic.factory', 'alias' => 'emailmarketing_constantcontact'), 'mautic.form.type.emailmarketing.icontact' => array('class' => 'MauticPlugin\\MauticEmailMarketingBundle\\Form\\Type\\IcontactType', 'arguments' => 'mautic.factory', 'alias' => 'emailmarketing_icontact'))))), 'MauticGmailBundle' => array('isPlugin' => true, 'base' => 'MauticGmail', 'bundle' => 'MauticGmailBundle', 'namespace' => 'MauticPlugin\\MauticGmailBundle', 'symfonyBundleName' => 'MauticGmailBundle', 'bundleClass' => 'MauticPlugin\\MauticGmailBundle\\MauticGmailBundle', 'permissionClasses' => array(), 'relative' => 'plugins/MauticGmailBundle', 'directory' => ($this->targetDirs[3].'/plugins/MauticGmailBundle'), 'config' => array('name' => 'Gmail', 'description' => 'Enables integrations with Gmail for email tracking', 'version' => '1.0', 'author' => 'Werner Garcia')), 'MauticCrmBundle' => array('isPlugin' => true, 'base' => 'MauticCrm', 'bundle' => 'MauticCrmBundle', 'namespace' => 'MauticPlugin\\MauticCrmBundle', 'symfonyBundleName' => 'MauticCrmBundle', 'bundleClass' => 'MauticPlugin\\MauticCrmBundle\\MauticCrmBundle', 'permissionClasses' => array(), 'relative' => 'plugins/MauticCrmBundle', 'directory' => ($this->targetDirs[3].'/plugins/MauticCrmBundle'), 'config' => array('name' => 'CRM', 'description' => 'Enables integration with Mautic supported CRMs.', 'version' => '1.0', 'author' => 'Mautic', 'routes' => array('public' => array('mautic_integration_contacts' => array('path' => '/plugin/{integration}/contact_data', 'controller' => 'MauticCrmBundle:Public:contactData', 'requirements' => array('integration' => '.+')), 'mautic_integration_companies' => array('path' => '/plugin/{integration}/company_data', 'controller' => 'MauticCrmBundle:Public:companyData', 'requirements' => array('integration' => '.+')))))), 'MauticFocusBundle' => array('isPlugin' => true, 'base' => 'MauticFocus', 'bundle' => 'MauticFocusBundle', 'namespace' => 'MauticPlugin\\MauticFocusBundle', 'symfonyBundleName' => 'MauticFocusBundle', 'bundleClass' => 'MauticPlugin\\MauticFocusBundle\\MauticFocusBundle', 'permissionClasses' => array('focus' => '\\MauticPlugin\\MauticFocusBundle\\Security\\Permissions\\FocusPermissions'), 'relative' => 'plugins/MauticFocusBundle', 'directory' => ($this->targetDirs[3].'/plugins/MauticFocusBundle'), 'config' => array('name' => 'Mautic Focus', 'description' => 'Drive visitor\'s focus on your website with Mautic Focus', 'version' => '1.0', 'author' => 'Mautic, Inc', 'routes' => array('main' => array('mautic_focus_index' => array('path' => '/focus/{page}', 'controller' => 'MauticFocusBundle:Focus:index'), 'mautic_focus_action' => array('path' => '/focus/{objectAction}/{objectId}', 'controller' => 'MauticFocusBundle:Focus:execute')), 'public' => array('mautic_focus_generate' => array('path' => '/focus/{id}.js', 'controller' => 'MauticFocusBundle:Public:generate'), 'mautic_focus_pixel' => array('path' => '/focus/{id}/viewpixel.gif', 'controller' => 'MauticFocusBundle:Public:viewPixel'))), 'services' => array('events' => array('mautic.focus.subscriber.form_bundle' => array('class' => 'MauticPlugin\\MauticFocusBundle\\EventListener\\FormSubscriber', 'arguments' => array(0 => 'mautic.focus.model.focus')), 'mautic.focus.subscriber.page_bundle' => array('class' => 'MauticPlugin\\MauticFocusBundle\\EventListener\\PageSubscriber', 'arguments' => array(0 => 'mautic.focus.model.focus', 1 => 'router')), 'mautic.focus.subscriber.stat' => array('class' => 'MauticPlugin\\MauticFocusBundle\\EventListener\\StatSubscriber', 'arguments' => array(0 => 'mautic.focus.model.focus')), 'mautic.focus.subscriber.focus' => array('class' => 'MauticPlugin\\MauticFocusBundle\\EventListener\\FocusSubscriber', 'arguments' => array(0 => 'router', 1 => 'mautic.helper.ip_lookup', 2 => 'mautic.core.model.auditlog')), 'mautic.focus.stats.subscriber' => array('class' => 'MauticPlugin\\MauticFocusBundle\\EventListener\\StatsSubscriber', 'arguments' => array(0 => 'doctrine.orm.entity_manager'))), 'forms' => array('mautic.focus.form.type.color' => array('class' => 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\ColorType', 'alias' => 'focus_color'), 'mautic.focus.form.type.content' => array('class' => 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\ContentType', 'alias' => 'focus_content'), 'mautic.focus.form.type.focus' => array('class' => 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\FocusType', 'alias' => 'focus', 'arguments' => 'mautic.security'), 'mautic.focus.form.type.entity_properties' => array('class' => 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\PropertiesType', 'alias' => 'focus_entity_properties'), 'mautic.focus.form.type.properties' => array('class' => 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\FocusPropertiesType', 'alias' => 'focus_properties')), 'models' => array('mautic.focus.model.focus' => array('class' => 'MauticPlugin\\MauticFocusBundle\\Model\\FocusModel', 'arguments' => array(0 => 'mautic.form.model.form', 1 => 'mautic.page.model.trackable', 2 => 'mautic.helper.templating'))), 'other' => array('mautic.focus.helper.token' => array('class' => 'MauticPlugin\\MauticFocusBundle\\Helper\\TokenHelper', 'arguments' => array(0 => 'mautic.focus.model.focus', 1 => 'router')))), 'menu' => array('main' => array('mautic.focus' => array('route' => 'mautic_focus_index', 'access' => 'plugin:focus:items:view', 'parent' => 'mautic.core.channels', 'priority' => 10))), 'categories' => array('plugin:focus' => 'mautic.focus'), 'parameters' => array('website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => ''))), 'MauticOutlookBundle' => array('isPlugin' => true, 'base' => 'MauticOutlook', 'bundle' => 'MauticOutlookBundle', 'namespace' => 'MauticPlugin\\MauticOutlookBundle', 'symfonyBundleName' => 'MauticOutlookBundle', 'bundleClass' => 'MauticPlugin\\MauticOutlookBundle\\MauticOutlookBundle', 'permissionClasses' => array(), 'relative' => 'plugins/MauticOutlookBundle', 'directory' => ($this->targetDirs[3].'/plugins/MauticOutlookBundle'), 'config' => array('name' => 'Outlook', 'description' => 'Enables integrations with Outlook for email tracking', 'version' => '1.0', 'author' => 'Mautic')), 'MauticSocialBundle' => array('isPlugin' => true, 'base' => 'MauticSocial', 'bundle' => 'MauticSocialBundle', 'namespace' => 'MauticPlugin\\MauticSocialBundle', 'symfonyBundleName' => 'MauticSocialBundle', 'bundleClass' => 'MauticPlugin\\MauticSocialBundle\\MauticSocialBundle', 'permissionClasses' => array('mauticSocial' => '\\MauticPlugin\\MauticSocialBundle\\Security\\Permissions\\MauticSocialPermissions'), 'relative' => 'plugins/MauticSocialBundle', 'directory' => ($this->targetDirs[3].'/plugins/MauticSocialBundle'), 'config' => array('name' => 'Social Media', 'description' => 'Enables integrations with Mautic supported social media services.', 'version' => '1.0', 'author' => 'Mautic', 'routes' => array('main' => array('mautic_social_index' => array('path' => '/monitoring/{page}', 'controller' => 'MauticSocialBundle:Monitoring:index'), 'mautic_social_action' => array('path' => '/monitoring/{objectAction}/{objectId}', 'controller' => 'MauticSocialBundle:Monitoring:execute'), 'mautic_social_contacts' => array('path' => '/monitoring/view/{objectId}/contacts/{page}', 'controller' => 'MauticSocialBundle:Monitoring:contacts'))), 'services' => array('events' => array('mautic.social.formbundle.subscriber' => array('class' => 'MauticPlugin\\MauticSocialBundle\\EventListener\\FormSubscriber'), 'mautic.social.campaignbundle.subscriber' => array('class' => 'MauticPlugin\\MauticSocialBundle\\EventListener\\CampaignSubscriber', 'arguments' => array(0 => 'mautic.factory', 1 => 'mautic.social.helper.campaign')), 'mautic.social.configbundle.subscriber' => array('class' => 'MauticPlugin\\MauticSocialBundle\\EventListener\\ConfigSubscriber'), 'mautic.social.subscriber.channel' => array('class' => 'MauticPlugin\\MauticSocialBundle\\EventListener\\ChannelSubscriber', 'arguments' => array(0 => 'mautic.helper.integration'))), 'forms' => array('mautic.form.type.social.sociallogin' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\SocialLoginType', 'arguments' => array(0 => 'mautic.helper.integration', 1 => 'mautic.form.model.form', 2 => 'mautic.helper.core_parameters'), 'alias' => 'sociallogin'), 'mautic.form.type.social.facebook' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\FacebookType', 'alias' => 'socialmedia_facebook'), 'mautic.form.type.social.twitter' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterType', 'alias' => 'socialmedia_twitter'), 'mautic.form.type.social.googleplus' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\GooglePlusType', 'alias' => 'socialmedia_googleplus'), 'mautic.form.type.social.linkedin' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\LinkedInType', 'alias' => 'socialmedia_linkedin'), 'mautic.social.form.type.twitter.tweet' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TweetType', 'alias' => 'twitter_tweet'), 'mautic.social.form.type.monitoring' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\MonitoringType', 'alias' => 'monitoring'), 'mautic.social.form.type.network.twitter.abstract' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterAbstractType', 'alias' => 'twitter_abstract'), 'mautic.social.form.type.network.twitter.hashtag' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterHashtagType', 'alias' => 'twitter_hashtag'), 'mautic.social.form.type.network.twitter.mention' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterMentionType', 'alias' => 'twitter_handle'), 'mautic.social.form.type.network.twitter.custom' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterCustomType', 'alias' => 'twitter_custom'), 'mautic.social.config' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\ConfigType', 'alias' => 'social_config', 'arguments' => 'mautic.lead.model.field')), 'models' => array('mautic.social.model.monitoring' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Model\\MonitoringModel'), 'mautic.social.model.postcount' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Model\\PostCountModel')), 'others' => array('mautic.social.helper.campaign' => array('class' => 'MauticPlugin\\MauticSocialBundle\\Helper\\CampaignEventHelper', 'arguments' => array(0 => 'mautic.helper.integration', 1 => 'mautic.page.model.trackable', 2 => 'mautic.page.helper.token', 3 => 'mautic.asset.helper.token')))), 'menu' => array('main' => array('mautic.social.monitoring' => array('route' => 'mautic_social_index', 'parent' => 'mautic.core.channels', 'access' => 'plugin:mauticSocial:monitoring:view', 'priority' => 0))), 'categories' => array('plugin:mauticSocial' => 'mautic.social.monitoring'), 'twitter' => array('tweet_request_count' => 100), 'parameters' => array('twitter_handle_field' => 'twitter'))), 'MauticCitrixBundle' => array('isPlugin' => true, 'base' => 'MauticCitrix', 'bundle' => 'MauticCitrixBundle', 'namespace' => 'MauticPlugin\\MauticCitrixBundle', 'symfonyBundleName' => 'MauticCitrixBundle', 'bundleClass' => 'MauticPlugin\\MauticCitrixBundle\\MauticCitrixBundle', 'permissionClasses' => array(), 'relative' => 'plugins/MauticCitrixBundle', 'directory' => ($this->targetDirs[3].'/plugins/MauticCitrixBundle'), 'config' => array('name' => 'Citrix', 'description' => 'Enables integration with Mautic supported Citrix collaboration products.', 'version' => '1.0', 'author' => 'Mautic', 'routes' => array('public' => array('mautic_citrix_proxy' => array('path' => '/citrix/proxy', 'controller' => 'MauticCitrixBundle:Public:proxy'), 'mautic_citrix_sessionchanged' => array('path' => '/citrix/sessionChanged', 'controller' => 'MauticCitrixBundle:Public:sessionChanged'))), 'services' => array('events' => array('mautic.citrix.formbundle.subscriber' => array('class' => 'MauticPlugin\\MauticCitrixBundle\\EventListener\\FormSubscriber', 'arguments' => array(0 => 'mautic.citrix.model.citrix', 1 => 'mautic.form.model.form', 2 => 'mautic.form.model.submission'), 'methodCalls' => array('setEmailModel' => array(0 => 'mautic.email.model.email'))), 'mautic.citrix.leadbundle.subscriber' => array('class' => 'MauticPlugin\\MauticCitrixBundle\\EventListener\\LeadSubscriber', 'arguments' => array(0 => 'mautic.citrix.model.citrix')), 'mautic.citrix.campaignbundle.subscriber' => array('class' => 'MauticPlugin\\MauticCitrixBundle\\EventListener\\CampaignSubscriber', 'arguments' => array(0 => 'mautic.citrix.model.citrix'), 'methodCalls' => array('setEmailModel' => array(0 => 'mautic.email.model.email'))), 'mautic.citrix.emailbundle.subscriber' => array('class' => 'MauticPlugin\\MauticCitrixBundle\\EventListener\\EmailSubscriber')), 'forms' => array('mautic.form.type.fieldslist.citrixlist' => array('class' => 'MauticPlugin\\MauticCitrixBundle\\Form\\Type\\CitrixListType', 'alias' => 'citrix_list'), 'mautic.form.type.citrix.submitaction' => array('class' => 'MauticPlugin\\MauticCitrixBundle\\Form\\Type\\CitrixActionType', 'alias' => 'citrix_submit_action', 'arguments' => array(0 => 'mautic.form.model.field')), 'mautic.form.type.citrix.campaignevent' => array('class' => 'MauticPlugin\\MauticCitrixBundle\\Form\\Type\\CitrixCampaignEventType', 'alias' => 'citrix_campaign_event', 'arguments' => array(0 => 'mautic.citrix.model.citrix', 1 => 'translator')), 'mautic.form.type.citrix.campaignaction' => array('class' => 'MauticPlugin\\MauticCitrixBundle\\Form\\Type\\CitrixCampaignActionType', 'alias' => 'citrix_campaign_action', 'arguments' => array(0 => 'translator'))), 'models' => array('mautic.citrix.model.citrix' => array('class' => 'MauticPlugin\\MauticCitrixBundle\\Model\\CitrixModel', 'arguments' => array(0 => 'mautic.lead.model.lead', 1 => 'mautic.campaign.model.event')))))), 'MauticClearbitBundle' => array('isPlugin' => true, 'base' => 'MauticClearbit', 'bundle' => 'MauticClearbitBundle', 'namespace' => 'MauticPlugin\\MauticClearbitBundle', 'symfonyBundleName' => 'MauticClearbitBundle', 'bundleClass' => 'MauticPlugin\\MauticClearbitBundle\\MauticClearbitBundle', 'permissionClasses' => array(), 'relative' => 'plugins/MauticClearbitBundle', 'directory' => ($this->targetDirs[3].'/plugins/MauticClearbitBundle'), 'config' => array('name' => 'Clearbit', 'description' => 'Enables integration with Clearbit for contact and company lookup', 'version' => '1.0', 'author' => 'Werner Garcia', 'routes' => array('public' => array('mautic_plugin_clearbit_index' => array('path' => '/clearbit/callback', 'controller' => 'MauticClearbitBundle:Public:callback')), 'main' => array('mautic_plugin_clearbit_action' => array('path' => '/clearbit/{objectAction}/{objectId}', 'controller' => 'MauticClearbitBundle:Clearbit:execute'))), 'services' => array('events' => array('mautic.plugin.clearbit.button.subscriber' => array('class' => 'MauticPlugin\\MauticClearbitBundle\\EventListener\\ButtonSubscriber', 'arguments' => array(0 => 'mautic.helper.integration')), 'mautic.plugin.clearbit.lead.subscriber' => array('class' => 'MauticPlugin\\MauticClearbitBundle\\EventListener\\LeadSubscriber', 'arguments' => array(0 => 'mautic.plugin.clearbit.lookup_helper'))), 'forms' => array('mautic.form.type.clearbit_lookup' => array('class' => 'MauticPlugin\\MauticClearbitBundle\\Form\\Type\\LookupType', 'alias' => 'clearbit_lookup'), 'mautic.form.type.clearbit_batch_lookup' => array('class' => 'MauticPlugin\\MauticClearbitBundle\\Form\\Type\\BatchLookupType', 'alias' => 'clearbit_batch_lookup')), 'others' => array('mautic.plugin.clearbit.lookup_helper' => array('class' => 'MauticPlugin\\MauticClearbitBundle\\Helper\\LookupHelper', 'arguments' => array(0 => 'mautic.helper.integration', 1 => 'mautic.helper.user', 2 => 'monolog.logger.mautic', 3 => 'mautic.lead.model.lead', 4 => 'mautic.lead.model.company'))))))));
    }

    /**
     * Gets the 'mautic.security.authentication_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Security\Authentication\AuthenticationHandler A Mautic\UserBundle\Security\Authentication\AuthenticationHandler instance
     */
    protected function getMautic_Security_AuthenticationHandlerService()
    {
        return $this->services['mautic.security.authentication_handler'] = new \Mautic\UserBundle\Security\Authentication\AuthenticationHandler($this->get('router'), $this->get('session'));
    }

    /**
     * Gets the 'mautic.security.logout_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Security\Authentication\LogoutHandler A Mautic\UserBundle\Security\Authentication\LogoutHandler instance
     */
    protected function getMautic_Security_LogoutHandlerService()
    {
        return $this->services['mautic.security.logout_handler'] = new \Mautic\UserBundle\Security\Authentication\LogoutHandler($this->get('mautic.user.model.user'), $this->get('debug.event_dispatcher'), $this->get('mautic.helper.user'));
    }

    /**
     * Gets the 'mautic.security.saml.id_store' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Security\Store\IdStore A Mautic\UserBundle\Security\Store\IdStore instance
     */
    protected function getMautic_Security_Saml_IdStoreService()
    {
        return $this->services['mautic.security.saml.id_store'] = new \Mautic\UserBundle\Security\Store\IdStore($this->get('doctrine.orm.default_entity_manager'), $this->get('lightsaml.system.time_provider'));
    }

    /**
     * Gets the 'mautic.security.saml.user_creator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Security\User\UserCreator A Mautic\UserBundle\Security\User\UserCreator instance
     */
    protected function getMautic_Security_Saml_UserCreatorService()
    {
        return $this->services['mautic.security.saml.user_creator'] = new \Mautic\UserBundle\Security\User\UserCreator($this->get('doctrine.orm.default_entity_manager'), $this->get('lightsaml_sp.username_mapper.simple'), $this->get('mautic.user.model.user'), $this->get('security.encoder_factory'), '');
    }

    /**
     * Gets the 'mautic.sms.api' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\SmsBundle\Api\TwilioApi A Mautic\SmsBundle\Api\TwilioApi instance
     */
    protected function getMautic_Sms_ApiService()
    {
        return $this->services['mautic.sms.api'] = new \Mautic\SmsBundle\Api\TwilioApi($this->get('mautic.page.model.trackable'), $this->get('mautic.twilio.service'), $this->get('mautic.helper.phone_number'), NULL, $this->get('monolog.logger.mautic'));
    }

    /**
     * Gets the 'mautic.sms.campaignbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\SmsBundle\EventListener\CampaignSubscriber A Mautic\SmsBundle\EventListener\CampaignSubscriber instance
     */
    protected function getMautic_Sms_Campaignbundle_SubscriberService()
    {
        $this->services['mautic.sms.campaignbundle.subscriber'] = $instance = new \Mautic\SmsBundle\EventListener\CampaignSubscriber($this->get('mautic.helper.core_parameters'), $this->get('mautic.sms.model.sms'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.sms.channel.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\SmsBundle\EventListener\ChannelSubscriber A Mautic\SmsBundle\EventListener\ChannelSubscriber instance
     */
    protected function getMautic_Sms_Channel_SubscriberService()
    {
        $this->services['mautic.sms.channel.subscriber'] = $instance = new \Mautic\SmsBundle\EventListener\ChannelSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.sms.configbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\SmsBundle\EventListener\ConfigSubscriber A Mautic\SmsBundle\EventListener\ConfigSubscriber instance
     */
    protected function getMautic_Sms_Configbundle_SubscriberService()
    {
        $this->services['mautic.sms.configbundle.subscriber'] = $instance = new \Mautic\SmsBundle\EventListener\ConfigSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.sms.message_queue.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\SmsBundle\EventListener\MessageQueueSubscriber A Mautic\SmsBundle\EventListener\MessageQueueSubscriber instance
     */
    protected function getMautic_Sms_MessageQueue_SubscriberService()
    {
        $this->services['mautic.sms.message_queue.subscriber'] = $instance = new \Mautic\SmsBundle\EventListener\MessageQueueSubscriber($this->get('mautic.sms.model.sms'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.sms.model.sms' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\SmsBundle\Model\SmsModel A Mautic\SmsBundle\Model\SmsModel instance
     */
    protected function getMautic_Sms_Model_SmsService()
    {
        $this->services['mautic.sms.model.sms'] = $instance = new \Mautic\SmsBundle\Model\SmsModel($this->get('mautic.page.model.trackable'), $this->get('mautic.lead.model.lead'), $this->get('mautic.channel.model.queue'), $this->get('mautic.sms.api'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.sms.smsbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\SmsBundle\EventListener\SmsSubscriber A Mautic\SmsBundle\EventListener\SmsSubscriber instance
     */
    protected function getMautic_Sms_Smsbundle_SubscriberService()
    {
        $this->services['mautic.sms.smsbundle.subscriber'] = $instance = new \Mautic\SmsBundle\EventListener\SmsSubscriber($this->get('mautic.core.model.auditlog'), $this->get('mautic.page.model.trackable'), $this->get('mautic.page.helper.token'), $this->get('mautic.asset.helper.token'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.sms.stats.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\SmsBundle\EventListener\StatsSubscriber A Mautic\SmsBundle\EventListener\StatsSubscriber instance
     */
    protected function getMautic_Sms_Stats_SubscriberService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        $this->services['mautic.sms.stats.subscriber'] = $instance = new \Mautic\SmsBundle\EventListener\StatsSubscriber($a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($a);
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.social.campaignbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\EventListener\CampaignSubscriber A MauticPlugin\MauticSocialBundle\EventListener\CampaignSubscriber instance
     */
    protected function getMautic_Social_Campaignbundle_SubscriberService()
    {
        $a = $this->get('mautic.factory');

        $this->services['mautic.social.campaignbundle.subscriber'] = $instance = new \MauticPlugin\MauticSocialBundle\EventListener\CampaignSubscriber($a, $this->get('mautic.social.helper.campaign'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($a);
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.social.config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Form\Type\ConfigType A MauticPlugin\MauticSocialBundle\Form\Type\ConfigType instance
     */
    protected function getMautic_Social_ConfigService()
    {
        return $this->services['mautic.social.config'] = new \MauticPlugin\MauticSocialBundle\Form\Type\ConfigType($this->get('mautic.lead.model.field'));
    }

    /**
     * Gets the 'mautic.social.configbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\EventListener\ConfigSubscriber A MauticPlugin\MauticSocialBundle\EventListener\ConfigSubscriber instance
     */
    protected function getMautic_Social_Configbundle_SubscriberService()
    {
        $this->services['mautic.social.configbundle.subscriber'] = $instance = new \MauticPlugin\MauticSocialBundle\EventListener\ConfigSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.social.form.type.monitoring' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Form\Type\MonitoringType A MauticPlugin\MauticSocialBundle\Form\Type\MonitoringType instance
     */
    protected function getMautic_Social_Form_Type_MonitoringService()
    {
        return $this->services['mautic.social.form.type.monitoring'] = new \MauticPlugin\MauticSocialBundle\Form\Type\MonitoringType();
    }

    /**
     * Gets the 'mautic.social.form.type.network.twitter.abstract' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Form\Type\TwitterAbstractType A MauticPlugin\MauticSocialBundle\Form\Type\TwitterAbstractType instance
     */
    protected function getMautic_Social_Form_Type_Network_Twitter_AbstractService()
    {
        return $this->services['mautic.social.form.type.network.twitter.abstract'] = new \MauticPlugin\MauticSocialBundle\Form\Type\TwitterAbstractType();
    }

    /**
     * Gets the 'mautic.social.form.type.network.twitter.custom' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Form\Type\TwitterCustomType A MauticPlugin\MauticSocialBundle\Form\Type\TwitterCustomType instance
     */
    protected function getMautic_Social_Form_Type_Network_Twitter_CustomService()
    {
        return $this->services['mautic.social.form.type.network.twitter.custom'] = new \MauticPlugin\MauticSocialBundle\Form\Type\TwitterCustomType();
    }

    /**
     * Gets the 'mautic.social.form.type.network.twitter.hashtag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Form\Type\TwitterHashtagType A MauticPlugin\MauticSocialBundle\Form\Type\TwitterHashtagType instance
     */
    protected function getMautic_Social_Form_Type_Network_Twitter_HashtagService()
    {
        return $this->services['mautic.social.form.type.network.twitter.hashtag'] = new \MauticPlugin\MauticSocialBundle\Form\Type\TwitterHashtagType();
    }

    /**
     * Gets the 'mautic.social.form.type.network.twitter.mention' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Form\Type\TwitterMentionType A MauticPlugin\MauticSocialBundle\Form\Type\TwitterMentionType instance
     */
    protected function getMautic_Social_Form_Type_Network_Twitter_MentionService()
    {
        return $this->services['mautic.social.form.type.network.twitter.mention'] = new \MauticPlugin\MauticSocialBundle\Form\Type\TwitterMentionType();
    }

    /**
     * Gets the 'mautic.social.form.type.twitter.tweet' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Form\Type\TweetType A MauticPlugin\MauticSocialBundle\Form\Type\TweetType instance
     */
    protected function getMautic_Social_Form_Type_Twitter_TweetService()
    {
        return $this->services['mautic.social.form.type.twitter.tweet'] = new \MauticPlugin\MauticSocialBundle\Form\Type\TweetType();
    }

    /**
     * Gets the 'mautic.social.formbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\EventListener\FormSubscriber A MauticPlugin\MauticSocialBundle\EventListener\FormSubscriber instance
     */
    protected function getMautic_Social_Formbundle_SubscriberService()
    {
        $this->services['mautic.social.formbundle.subscriber'] = $instance = new \MauticPlugin\MauticSocialBundle\EventListener\FormSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.social.helper.campaign' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Helper\CampaignEventHelper A MauticPlugin\MauticSocialBundle\Helper\CampaignEventHelper instance
     */
    protected function getMautic_Social_Helper_CampaignService()
    {
        return $this->services['mautic.social.helper.campaign'] = new \MauticPlugin\MauticSocialBundle\Helper\CampaignEventHelper($this->get('mautic.helper.integration'), $this->get('mautic.page.model.trackable'), $this->get('mautic.page.helper.token'), $this->get('mautic.asset.helper.token'));
    }

    /**
     * Gets the 'mautic.social.model.monitoring' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Model\MonitoringModel A MauticPlugin\MauticSocialBundle\Model\MonitoringModel instance
     */
    protected function getMautic_Social_Model_MonitoringService()
    {
        $this->services['mautic.social.model.monitoring'] = $instance = new \MauticPlugin\MauticSocialBundle\Model\MonitoringModel();

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.social.model.postcount' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\Model\PostCountModel A MauticPlugin\MauticSocialBundle\Model\PostCountModel instance
     */
    protected function getMautic_Social_Model_PostcountService()
    {
        $this->services['mautic.social.model.postcount'] = $instance = new \MauticPlugin\MauticSocialBundle\Model\PostCountModel();

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.social.subscriber.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \MauticPlugin\MauticSocialBundle\EventListener\ChannelSubscriber A MauticPlugin\MauticSocialBundle\EventListener\ChannelSubscriber instance
     */
    protected function getMautic_Social_Subscriber_ChannelService()
    {
        $this->services['mautic.social.subscriber.channel'] = $instance = new \MauticPlugin\MauticSocialBundle\EventListener\ChannelSubscriber($this->get('mautic.helper.integration'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.stage.campaignbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\StageBundle\EventListener\CampaignSubscriber A Mautic\StageBundle\EventListener\CampaignSubscriber instance
     */
    protected function getMautic_Stage_Campaignbundle_SubscriberService()
    {
        $this->services['mautic.stage.campaignbundle.subscriber'] = $instance = new \Mautic\StageBundle\EventListener\CampaignSubscriber($this->get('mautic.lead.model.lead'), $this->get('mautic.stage.model.stage'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.stage.dashboard.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\StageBundle\EventListener\DashboardSubscriber A Mautic\StageBundle\EventListener\DashboardSubscriber instance
     */
    protected function getMautic_Stage_Dashboard_SubscriberService()
    {
        $this->services['mautic.stage.dashboard.subscriber'] = $instance = new \Mautic\StageBundle\EventListener\DashboardSubscriber($this->get('mautic.stage.model.stage'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.stage.leadbundle.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\StageBundle\EventListener\LeadSubscriber A Mautic\StageBundle\EventListener\LeadSubscriber instance
     */
    protected function getMautic_Stage_Leadbundle_SubscriberService()
    {
        $this->services['mautic.stage.leadbundle.subscriber'] = $instance = new \Mautic\StageBundle\EventListener\LeadSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.stage.model.stage' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\StageBundle\Model\StageModel A Mautic\StageBundle\Model\StageModel instance
     */
    protected function getMautic_Stage_Model_StageService()
    {
        $this->services['mautic.stage.model.stage'] = $instance = new \Mautic\StageBundle\Model\StageModel($this->get('mautic.lead.model.lead'), $this->get('session'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.stage.search.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\StageBundle\EventListener\SearchSubscriber A Mautic\StageBundle\EventListener\SearchSubscriber instance
     */
    protected function getMautic_Stage_Search_SubscriberService()
    {
        $this->services['mautic.stage.search.subscriber'] = $instance = new \Mautic\StageBundle\EventListener\SearchSubscriber($this->get('mautic.stage.model.stage'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.stage.stats.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\StageBundle\EventListener\StatsSubscriber A Mautic\StageBundle\EventListener\StatsSubscriber instance
     */
    protected function getMautic_Stage_Stats_SubscriberService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        $this->services['mautic.stage.stats.subscriber'] = $instance = new \Mautic\StageBundle\EventListener\StatsSubscriber($a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($a);
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.stage.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\StageBundle\EventListener\StageSubscriber A Mautic\StageBundle\EventListener\StageSubscriber instance
     */
    protected function getMautic_Stage_SubscriberService()
    {
        $this->services['mautic.stage.subscriber'] = $instance = new \Mautic\StageBundle\EventListener\StageSubscriber($this->get('mautic.helper.ip_lookup'), $this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.stage.type.action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\StageBundle\Form\Type\StageActionType A Mautic\StageBundle\Form\Type\StageActionType instance
     */
    protected function getMautic_Stage_Type_ActionService()
    {
        return $this->services['mautic.stage.type.action'] = new \Mautic\StageBundle\Form\Type\StageActionType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.stage.type.action_change' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\StageBundle\Form\Type\StageActionChangeType A Mautic\StageBundle\Form\Type\StageActionChangeType instance
     */
    protected function getMautic_Stage_Type_ActionChangeService()
    {
        return $this->services['mautic.stage.type.action_change'] = new \Mautic\StageBundle\Form\Type\StageActionChangeType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.stage.type.action_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\StageBundle\Form\Type\StageActionListType A Mautic\StageBundle\Form\Type\StageActionListType instance
     */
    protected function getMautic_Stage_Type_ActionListService()
    {
        return $this->services['mautic.stage.type.action_list'] = new \Mautic\StageBundle\Form\Type\StageActionListType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.stage.type.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\StageBundle\Form\Type\StageType A Mautic\StageBundle\Form\Type\StageType instance
     */
    protected function getMautic_Stage_Type_FormService()
    {
        return $this->services['mautic.stage.type.form'] = new \Mautic\StageBundle\Form\Type\StageType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.stage.type.stage_list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\StageBundle\Form\Type\StageListType A Mautic\StageBundle\Form\Type\StageListType instance
     */
    protected function getMautic_Stage_Type_StageListService()
    {
        return $this->services['mautic.stage.type.stage_list'] = new \Mautic\StageBundle\Form\Type\StageListType($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.tblprefix_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\EventListener\DoctrineEventsSubscriber A Mautic\CoreBundle\EventListener\DoctrineEventsSubscriber instance
     */
    protected function getMautic_TblprefixSubscriberService()
    {
        return $this->services['mautic.tblprefix_subscriber'] = new \Mautic\CoreBundle\EventListener\DoctrineEventsSubscriber(NULL);
    }

    /**
     * Gets the 'mautic.templating.name_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\TemplateNameParser A Mautic\CoreBundle\Templating\TemplateNameParser instance
     */
    protected function getMautic_Templating_NameParserService()
    {
        return $this->services['mautic.templating.name_parser'] = new \Mautic\CoreBundle\Templating\TemplateNameParser($this->get('kernel'));
    }

    /**
     * Gets the 'mautic.translation.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Loader\TranslationLoader A Mautic\CoreBundle\Loader\TranslationLoader instance
     */
    protected function getMautic_Translation_LoaderService()
    {
        return $this->services['mautic.translation.loader'] = new \Mautic\CoreBundle\Loader\TranslationLoader($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.transport.amazon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Swiftmailer\Transport\AmazonTransport A Mautic\EmailBundle\Swiftmailer\Transport\AmazonTransport instance
     */
    protected function getMautic_Transport_AmazonService()
    {
        $this->services['mautic.transport.amazon'] = $instance = new \Mautic\EmailBundle\Swiftmailer\Transport\AmazonTransport('email-smtp.us-east-1.amazonaws.com', $this->get('mautic.http.connector'));

        $instance->setUsername(NULL);
        $instance->setPassword(NULL);

        return $instance;
    }

    /**
     * Gets the 'mautic.transport.elasticemail' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Swiftmailer\Transport\ElasticemailTransport A Mautic\EmailBundle\Swiftmailer\Transport\ElasticemailTransport instance
     */
    protected function getMautic_Transport_ElasticemailService()
    {
        $this->services['mautic.transport.elasticemail'] = $instance = new \Mautic\EmailBundle\Swiftmailer\Transport\ElasticemailTransport();

        $instance->setUsername(NULL);
        $instance->setPassword(NULL);

        return $instance;
    }

    /**
     * Gets the 'mautic.transport.mailjet' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Swiftmailer\Transport\MailjetTransport A Mautic\EmailBundle\Swiftmailer\Transport\MailjetTransport instance
     */
    protected function getMautic_Transport_MailjetService()
    {
        $this->services['mautic.transport.mailjet'] = $instance = new \Mautic\EmailBundle\Swiftmailer\Transport\MailjetTransport('', '', '', false, NULL);

        $instance->setUsername(NULL);
        $instance->setPassword(NULL);

        return $instance;
    }

    /**
     * Gets the 'mautic.transport.mandrill' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Swiftmailer\Transport\MandrillTransport A Mautic\EmailBundle\Swiftmailer\Transport\MandrillTransport instance
     */
    protected function getMautic_Transport_MandrillService()
    {
        $this->services['mautic.transport.mandrill'] = $instance = new \Mautic\EmailBundle\Swiftmailer\Transport\MandrillTransport();

        $instance->setUsername(NULL);
        $instance->setPassword(NULL);
        $instance->setMauticFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.transport.postmark' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Swiftmailer\Transport\PostmarkTransport A Mautic\EmailBundle\Swiftmailer\Transport\PostmarkTransport instance
     */
    protected function getMautic_Transport_PostmarkService()
    {
        $this->services['mautic.transport.postmark'] = $instance = new \Mautic\EmailBundle\Swiftmailer\Transport\PostmarkTransport();

        $instance->setUsername(NULL);
        $instance->setPassword(NULL);

        return $instance;
    }

    /**
     * Gets the 'mautic.transport.sendgrid' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Swiftmailer\Transport\SendgridTransport A Mautic\EmailBundle\Swiftmailer\Transport\SendgridTransport instance
     */
    protected function getMautic_Transport_SendgridService()
    {
        $this->services['mautic.transport.sendgrid'] = $instance = new \Mautic\EmailBundle\Swiftmailer\Transport\SendgridTransport();

        $instance->setUsername(NULL);
        $instance->setPassword(NULL);

        return $instance;
    }

    /**
     * Gets the 'mautic.transport.sparkpost' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\EmailBundle\Swiftmailer\Transport\SparkpostTransport A Mautic\EmailBundle\Swiftmailer\Transport\SparkpostTransport instance
     */
    protected function getMautic_Transport_SparkpostService()
    {
        $this->services['mautic.transport.sparkpost'] = $instance = new \Mautic\EmailBundle\Swiftmailer\Transport\SparkpostTransport(NULL, $this->get('translator'));

        $instance->setMauticFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.twilio.service' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Services_Twilio A Services_Twilio instance
     */
    protected function getMautic_Twilio_ServiceService()
    {
        return $this->services['mautic.twilio.service'] = new \Services_Twilio(NULL, NULL);
    }

    /**
     * Gets the 'mautic.user.config.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\EventListener\ConfigSubscriber A Mautic\UserBundle\EventListener\ConfigSubscriber instance
     */
    protected function getMautic_User_Config_SubscriberService()
    {
        $this->services['mautic.user.config.subscriber'] = $instance = new \Mautic\UserBundle\EventListener\ConfigSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.user.form_authenticator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Security\Authenticator\FormAuthenticator A Mautic\UserBundle\Security\Authenticator\FormAuthenticator instance
     */
    protected function getMautic_User_FormAuthenticatorService()
    {
        return $this->services['mautic.user.form_authenticator'] = new \Mautic\UserBundle\Security\Authenticator\FormAuthenticator($this->get('mautic.helper.integration'), $this->get('security.password_encoder'), $this->get('debug.event_dispatcher'), $this->get('request_stack'));
    }

    /**
     * Gets the 'mautic.user.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\ORM\EntityManager A Doctrine\ORM\EntityManager instance
     */
    protected function getMautic_User_ManagerService()
    {
        return $this->services['mautic.user.manager'] = $this->get('doctrine')->getManagerForClass('Mautic\\UserBundle\\Entity\\User');
    }

    /**
     * Gets the 'mautic.user.model.role' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Model\RoleModel A Mautic\UserBundle\Model\RoleModel instance
     */
    protected function getMautic_User_Model_RoleService()
    {
        $this->services['mautic.user.model.role'] = $instance = new \Mautic\UserBundle\Model\RoleModel();

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.user.model.user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Model\UserModel A Mautic\UserBundle\Model\UserModel instance
     */
    protected function getMautic_User_Model_UserService()
    {
        $this->services['mautic.user.model.user'] = $instance = new \Mautic\UserBundle\Model\UserModel($this->get('mautic.helper.mailer'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.user.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Security\Provider\UserProvider A Mautic\UserBundle\Security\Provider\UserProvider instance
     */
    protected function getMautic_User_ProviderService()
    {
        return $this->services['mautic.user.provider'] = new \Mautic\UserBundle\Security\Provider\UserProvider($this->get('mautic.user.repository'), $this->get('mautic.permission.repository'), $this->get('session'), $this->get('debug.event_dispatcher'), $this->get('security.encoder_factory'));
    }

    /**
     * Gets the 'mautic.user.repository' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Entity\UserRepository A Mautic\UserBundle\Entity\UserRepository instance
     */
    protected function getMautic_User_RepositoryService()
    {
        return $this->services['mautic.user.repository'] = $this->get('mautic.user.manager')->getRepository('Mautic\\UserBundle\\Entity\\User');
    }

    /**
     * Gets the 'mautic.user.route.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\EventListener\RouteSubscriber A Mautic\UserBundle\EventListener\RouteSubscriber instance
     */
    protected function getMautic_User_Route_SubscriberService()
    {
        $this->services['mautic.user.route.subscriber'] = $instance = new \Mautic\UserBundle\EventListener\RouteSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.user.search.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\EventListener\SearchSubscriber A Mautic\UserBundle\EventListener\SearchSubscriber instance
     */
    protected function getMautic_User_Search_SubscriberService()
    {
        $this->services['mautic.user.search.subscriber'] = $instance = new \Mautic\UserBundle\EventListener\SearchSubscriber($this->get('mautic.user.model.user'), $this->get('mautic.user.model.role'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.user.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\EventListener\UserSubscriber A Mautic\UserBundle\EventListener\UserSubscriber instance
     */
    protected function getMautic_User_SubscriberService()
    {
        $this->services['mautic.user.subscriber'] = $instance = new \Mautic\UserBundle\EventListener\UserSubscriber($this->get('mautic.helper.ip_lookup'), $this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.validator.leadlistaccess' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\Form\Validator\Constraints\LeadListAccessValidator A Mautic\LeadBundle\Form\Validator\Constraints\LeadListAccessValidator instance
     */
    protected function getMautic_Validator_LeadlistaccessService()
    {
        return $this->services['mautic.validator.leadlistaccess'] = new \Mautic\LeadBundle\Form\Validator\Constraints\LeadListAccessValidator($this->get('mautic.factory'));
    }

    /**
     * Gets the 'mautic.validator.oauthcallback' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ApiBundle\Form\Validator\Constraints\OAuthCallbackValidator A Mautic\ApiBundle\Form\Validator\Constraints\OAuthCallbackValidator instance
     */
    protected function getMautic_Validator_OauthcallbackService()
    {
        return $this->services['mautic.validator.oauthcallback'] = new \Mautic\ApiBundle\Form\Validator\Constraints\OAuthCallbackValidator();
    }

    /**
     * Gets the 'mautic.webhook.audit.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\WebhookBundle\EventListener\WebhookSubscriber A Mautic\WebhookBundle\EventListener\WebhookSubscriber instance
     */
    protected function getMautic_Webhook_Audit_SubscriberService()
    {
        $this->services['mautic.webhook.audit.subscriber'] = $instance = new \Mautic\WebhookBundle\EventListener\WebhookSubscriber($this->get('mautic.helper.ip_lookup'), $this->get('mautic.core.model.auditlog'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.webhook.config.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\WebhookBundle\EventListener\ConfigSubscriber A Mautic\WebhookBundle\EventListener\ConfigSubscriber instance
     */
    protected function getMautic_Webhook_Config_SubscriberService()
    {
        $this->services['mautic.webhook.config.subscriber'] = $instance = new \Mautic\WebhookBundle\EventListener\ConfigSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.webhook.model.webhook' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\WebhookBundle\Model\WebhookModel A Mautic\WebhookBundle\Model\WebhookModel instance
     */
    protected function getMautic_Webhook_Model_WebhookService()
    {
        $this->services['mautic.webhook.model.webhook'] = $instance = new \Mautic\WebhookBundle\Model\WebhookModel($this->get('mautic.helper.core_parameters'), $this->get('jms_serializer'));

        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setUserHelper($this->get('mautic.helper.user'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));

        return $instance;
    }

    /**
     * Gets the 'mautic.webhook.stats.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\WebhookBundle\EventListener\StatsSubscriber A Mautic\WebhookBundle\EventListener\StatsSubscriber instance
     */
    protected function getMautic_Webhook_Stats_SubscriberService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        $this->services['mautic.webhook.stats.subscriber'] = $instance = new \Mautic\WebhookBundle\EventListener\StatsSubscriber($a);

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($a);
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.webhook.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\LeadBundle\EventListener\WebhookSubscriber A Mautic\LeadBundle\EventListener\WebhookSubscriber instance
     */
    protected function getMautic_Webhook_SubscriberService()
    {
        $this->services['mautic.webhook.subscriber'] = $instance = new \Mautic\LeadBundle\EventListener\WebhookSubscriber();

        $instance->setWebhookModel($this->get('mautic.webhook.model.webhook'));
        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic.webpush.js.subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\EventListener\BuildJsSubscriber A Mautic\CoreBundle\EventListener\BuildJsSubscriber instance
     */
    protected function getMautic_Webpush_Js_SubscriberService()
    {
        $this->services['mautic.webpush.js.subscriber'] = $instance = new \Mautic\CoreBundle\EventListener\BuildJsSubscriber();

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($this->get('translator'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'mautic\channelbundle\form\type\messagetype' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\ChannelBundle\Form\Type\MessageType A Mautic\ChannelBundle\Form\Type\MessageType instance
     */
    protected function getMautic_Channelbundle_Form_Type_MessagetypeService()
    {
        $this->services['mautic\channelbundle\form\type\messagetype'] = $instance = new \Mautic\ChannelBundle\Form\Type\MessageType($this->get('mautic.channel.model.message'));

        $instance->setSecurity($this->get('mautic.security'));

        return $instance;
    }

    /**
     * Gets the 'mautic\userbundle\security\authenticator\preauthauthenticator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Security\Authenticator\PreAuthAuthenticator A Mautic\UserBundle\Security\Authenticator\PreAuthAuthenticator instance
     */
    protected function getMautic_Userbundle_Security_Authenticator_PreauthauthenticatorService()
    {
        return $this->services['mautic\userbundle\security\authenticator\preauthauthenticator'] = new \Mautic\UserBundle\Security\Authenticator\PreAuthAuthenticator($this->get('mautic.helper.integration'), $this->get('debug.event_dispatcher'), $this->get('request_stack'), '', '');
    }

    /**
     * Gets the 'mautic\userbundle\security\firewall\authenticationlistener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\UserBundle\Security\Firewall\AuthenticationListener A Mautic\UserBundle\Security\Firewall\AuthenticationListener instance
     */
    protected function getMautic_Userbundle_Security_Firewall_AuthenticationlistenerService()
    {
        return $this->services['mautic\userbundle\security\firewall\authenticationlistener'] = new \Mautic\UserBundle\Security\Firewall\AuthenticationListener($this->get('mautic.security.authentication_handler'), $this->get('security.token_storage'), $this->get('security.authentication.manager'), $this->get('logger'), $this->get('debug.event_dispatcher'), '');
    }

    /**
     * Gets the 'monolog.handler.chrome' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Handler\ChromePhpHandler A Symfony\Bridge\Monolog\Handler\ChromePhpHandler instance
     */
    protected function getMonolog_Handler_ChromeService()
    {
        $this->services['monolog.handler.chrome'] = $instance = new \Symfony\Bridge\Monolog\Handler\ChromePhpHandler(100, true);

        $instance->pushProcessor($this->get('monolog.processor.psr_log_message'));

        return $instance;
    }

    /**
     * Gets the 'monolog.handler.console' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Handler\ConsoleHandler A Symfony\Bridge\Monolog\Handler\ConsoleHandler instance
     */
    protected function getMonolog_Handler_ConsoleService()
    {
        $this->services['monolog.handler.console'] = $instance = new \Symfony\Bridge\Monolog\Handler\ConsoleHandler(NULL, false, array());

        $instance->pushProcessor($this->get('monolog.processor.psr_log_message'));

        return $instance;
    }

    /**
     * Gets the 'monolog.handler.debug' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Handler\DebugHandler A Symfony\Bridge\Monolog\Handler\DebugHandler instance
     */
    protected function getMonolog_Handler_DebugService()
    {
        return $this->services['monolog.handler.debug'] = new \Symfony\Bridge\Monolog\Handler\DebugHandler(100, true);
    }

    /**
     * Gets the 'monolog.handler.main' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Monolog\Handler\RotatingFileHandler A Monolog\Handler\RotatingFileHandler instance
     */
    protected function getMonolog_Handler_MainService()
    {
        $this->services['monolog.handler.main'] = $instance = new \Monolog\Handler\RotatingFileHandler(($this->targetDirs[2].'/logs/dev.php'), 7, 100, true, NULL);

        $instance->pushProcessor($this->get('monolog.processor.psr_log_message'));
        $instance->setFilenameFormat('{filename}-{date}', 'Y-m-d');
        $instance->setFormatter($this->get('mautic.monolog.fulltrace.formatter'));

        return $instance;
    }

    /**
     * Gets the 'monolog.handler.mautic' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Monolog\Handler\RotatingFileHandler A Monolog\Handler\RotatingFileHandler instance
     */
    protected function getMonolog_Handler_MauticService()
    {
        $this->services['monolog.handler.mautic'] = $instance = new \Monolog\Handler\RotatingFileHandler(($this->targetDirs[2].'/logs/mautic_dev.php'), 7, 100, true, NULL);

        $instance->pushProcessor($this->get('monolog.processor.psr_log_message'));
        $instance->setFilenameFormat('{filename}-{date}', 'Y-m-d');
        $instance->setFormatter($this->get('mautic.monolog.fulltrace.formatter'));

        return $instance;
    }

    /**
     * Gets the 'monolog.handler.null_internal' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Monolog\Handler\NullHandler A Monolog\Handler\NullHandler instance
     */
    protected function getMonolog_Handler_NullInternalService()
    {
        return $this->services['monolog.handler.null_internal'] = new \Monolog\Handler\NullHandler();
    }

    /**
     * Gets the 'monolog.logger.chrome' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_ChromeService()
    {
        $this->services['monolog.logger.chrome'] = $instance = new \Symfony\Bridge\Monolog\Logger('chrome');

        $instance->pushHandler($this->get('monolog.handler.chrome'));
        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.doctrine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_DoctrineService()
    {
        $this->services['monolog.logger.doctrine'] = $instance = new \Symfony\Bridge\Monolog\Logger('doctrine');

        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.event' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_EventService()
    {
        $this->services['monolog.logger.event'] = $instance = new \Symfony\Bridge\Monolog\Logger('event');

        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.mautic' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_MauticService()
    {
        $this->services['monolog.logger.mautic'] = $instance = new \Symfony\Bridge\Monolog\Logger('mautic');

        $instance->pushHandler($this->get('monolog.handler.mautic'));
        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_PhpService()
    {
        $this->services['monolog.logger.php'] = $instance = new \Symfony\Bridge\Monolog\Logger('php');

        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.profiler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_ProfilerService()
    {
        $this->services['monolog.logger.profiler'] = $instance = new \Symfony\Bridge\Monolog\Logger('profiler');

        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.request' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_RequestService()
    {
        $this->services['monolog.logger.request'] = $instance = new \Symfony\Bridge\Monolog\Logger('request');

        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_RouterService()
    {
        $this->services['monolog.logger.router'] = $instance = new \Symfony\Bridge\Monolog\Logger('router');

        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.security' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_SecurityService()
    {
        $this->services['monolog.logger.security'] = $instance = new \Symfony\Bridge\Monolog\Logger('security');

        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.templating' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_TemplatingService()
    {
        $this->services['monolog.logger.templating'] = $instance = new \Symfony\Bridge\Monolog\Logger('templating');

        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_TranslationService()
    {
        $this->services['monolog.logger.translation'] = $instance = new \Symfony\Bridge\Monolog\Logger('translation');

        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        $instance->pushHandler($this->get('monolog.handler.debug'));

        return $instance;
    }

    /**
     * Gets the 'muatic.form.type.field_propertypagebreak' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\FormBundle\Form\Type\FormFieldPageBreakType A Mautic\FormBundle\Form\Type\FormFieldPageBreakType instance
     */
    protected function getMuatic_Form_Type_FieldPropertypagebreakService()
    {
        return $this->services['muatic.form.type.field_propertypagebreak'] = new \Mautic\FormBundle\Form\Type\FormFieldPageBreakType($this->get('translator'));
    }

    /**
     * Gets the 'oneup_uploader.chunk_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oneup\UploaderBundle\Uploader\Chunk\ChunkManager A Oneup\UploaderBundle\Uploader\Chunk\ChunkManager instance
     */
    protected function getOneupUploader_ChunkManagerService()
    {
        return $this->services['oneup_uploader.chunk_manager'] = new \Oneup\UploaderBundle\Uploader\Chunk\ChunkManager(array('maxage' => 604800, 'storage' => array('type' => 'filesystem', 'filesystem' => NULL, 'directory' => (__DIR__.'/uploader/chunks'), 'stream_wrapper' => NULL, 'sync_buffer_size' => '100K', 'prefix' => 'chunks'), 'load_distribution' => true), $this->get('oneup_uploader.chunks_storage'));
    }

    /**
     * Gets the 'oneup_uploader.chunks_storage' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oneup\UploaderBundle\Uploader\Chunk\Storage\FilesystemStorage A Oneup\UploaderBundle\Uploader\Chunk\Storage\FilesystemStorage instance
     */
    protected function getOneupUploader_ChunksStorageService()
    {
        return $this->services['oneup_uploader.chunks_storage'] = new \Oneup\UploaderBundle\Uploader\Chunk\Storage\FilesystemStorage((__DIR__.'/uploader/chunks'));
    }

    /**
     * Gets the 'oneup_uploader.controller.mautic' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\Controller\UploadController A Mautic\AssetBundle\Controller\UploadController instance
     */
    protected function getOneupUploader_Controller_MauticService()
    {
        return $this->services['oneup_uploader.controller.mautic'] = new \Mautic\AssetBundle\Controller\UploadController($this, $this->get('oneup_uploader.storage.asset'), $this->get('mautic.asset.upload.error.handler'), array('error_handler' => 'mautic.asset.upload.error.handler', 'frontend' => 'custom', 'custom_frontend' => array('class' => 'Mautic\\AssetBundle\\Controller\\UploadController', 'name' => 'mautic'), 'storage' => array('directory' => ($this->targetDirs[2].'/../media/files'), 'service' => NULL, 'type' => 'filesystem', 'filesystem' => NULL, 'stream_wrapper' => NULL, 'sync_buffer_size' => '100K'), 'route_prefix' => '', 'allowed_mimetypes' => array(), 'disallowed_mimetypes' => array(), 'max_size' => 9223372036854775807, 'use_orphanage' => false, 'enable_progress' => false, 'enable_cancelation' => false, 'namer' => 'oneup_uploader.namer.uniqid', 'root_folder' => false), 'asset');
    }

    /**
     * Gets the 'oneup_uploader.namer.uniqid' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oneup\UploaderBundle\Uploader\Naming\UniqidNamer A Oneup\UploaderBundle\Uploader\Naming\UniqidNamer instance
     */
    protected function getOneupUploader_Namer_UniqidService()
    {
        return $this->services['oneup_uploader.namer.uniqid'] = new \Oneup\UploaderBundle\Uploader\Naming\UniqidNamer();
    }

    /**
     * Gets the 'oneup_uploader.orphanage_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oneup\UploaderBundle\Uploader\Orphanage\OrphanageManager A Oneup\UploaderBundle\Uploader\Orphanage\OrphanageManager instance
     */
    protected function getOneupUploader_OrphanageManagerService()
    {
        return $this->services['oneup_uploader.orphanage_manager'] = new \Oneup\UploaderBundle\Uploader\Orphanage\OrphanageManager($this, array('maxage' => 604800, 'directory' => (__DIR__.'/uploader/orphanage')));
    }

    /**
     * Gets the 'oneup_uploader.pre_upload' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\AssetBundle\EventListener\UploadSubscriber A Mautic\AssetBundle\EventListener\UploadSubscriber instance
     */
    protected function getOneupUploader_PreUploadService()
    {
        $a = $this->get('translator');

        $this->services['oneup_uploader.pre_upload'] = $instance = new \Mautic\AssetBundle\EventListener\UploadSubscriber($a, $this->get('mautic.helper.core_parameters'), $this->get('mautic.asset.model.asset'));

        $instance->setTemplating($this->get('mautic.helper.templating'));
        $instance->setRequest($this->get('request_stack'));
        $instance->setSecurity($this->get('mautic.security'));
        $instance->setSerializer($this->get('jms_serializer'));
        $instance->setSystemParameters(array('site_url' => 'http://nautic.dev', 'webroot' => '', 'cache_path' => $this->targetDirs[1], 'log_path' => ($this->targetDirs[2].'/logs'), 'image_path' => 'media/images', 'tmp_path' => $this->targetDirs[1], 'theme' => 'Mauve', 'db_driver' => 'pdo_mysql', 'db_host' => 'localhost', 'db_port' => '3306', 'db_name' => 'mautic', 'db_user' => 'root', 'db_password' => 'root', 'db_table_prefix' => NULL, 'db_server_version' => '5.7.17-0ubuntu0.16.04.1', 'locale' => 'en_US', 'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', 'dev_hosts' => NULL, 'trusted_hosts' => NULL, 'trusted_proxies' => NULL, 'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52', 'rememberme_lifetime' => 31536000, 'rememberme_path' => '/', 'rememberme_domain' => '', 'default_pagelimit' => 30, 'default_timezone' => 'UTC', 'date_format_full' => 'F j, Y g:i a T', 'date_format_short' => 'D, M d', 'date_format_dateonly' => 'F j, Y', 'date_format_timeonly' => 'g:i a', 'ip_lookup_service' => 'maxmind_download', 'ip_lookup_auth' => '', 'ip_lookup_config' => array(), 'transifex_username' => '', 'transifex_password' => '', 'update_stability' => 'stable', 'cookie_path' => '/', 'cookie_domain' => '', 'cookie_secure' => NULL, 'cookie_httponly' => false, 'do_not_track_ips' => array(), 'do_not_track_bots' => array(0 => 'MSNBOT', 1 => 'msnbot-media', 2 => 'bingbot', 3 => 'Googlebot', 4 => 'Google Web Preview', 5 => 'Mediapartners-Google', 6 => 'Baiduspider', 7 => 'Ezooms', 8 => 'YahooSeeker', 9 => 'Slurp', 10 => 'AltaVista', 11 => 'AVSearch', 12 => 'Mercator', 13 => 'Scooter', 14 => 'InfoSeek', 15 => 'Ultraseek', 16 => 'Lycos', 17 => 'Wget', 18 => 'YandexBot', 19 => 'Java/1.4.1_04', 20 => 'SiteBot', 21 => 'Exabot', 22 => 'AhrefsBot', 23 => 'MJ12bot', 24 => 'NetSeer crawler', 25 => 'TurnitinBot', 26 => 'magpie-crawler', 27 => 'Nutch Crawler', 28 => 'CMS Crawler', 29 => 'rogerbot', 30 => 'Domnutch', 31 => 'ssearch_bot', 32 => 'XoviBot', 33 => 'digincore', 34 => 'fr-crawler', 35 => 'SeznamBot', 36 => 'Seznam screenshot-generator', 37 => 'Facebot', 38 => 'facebookexternalhit'), 'do_not_track_internal_ips' => array(), 'link_shortener_url' => NULL, 'cached_data_timeout' => 10, 'batch_sleep_time' => 1, 'batch_campaign_sleep_time' => false, 'cors_restrict_domains' => true, 'cors_valid_domains' => array(), 'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification', 'api_enabled' => false, 'api_enable_basic_auth' => false, 'api_oauth2_access_token_lifetime' => 60, 'api_oauth2_refresh_token_lifetime' => 14, 'api_batch_max_limit' => 200, 'upload_dir' => ($this->targetDirs[2].'/../media/files'), 'max_size' => '6', 'allowed_extensions' => array(0 => 'csv', 1 => 'doc', 2 => 'docx', 3 => 'epub', 4 => 'gif', 5 => 'jpg', 6 => 'jpeg', 7 => 'mpg', 8 => 'mpeg', 9 => 'mp3', 10 => 'odt', 11 => 'odp', 12 => 'ods', 13 => 'pdf', 14 => 'png', 15 => 'ppt', 16 => 'pptx', 17 => 'tif', 18 => 'tiff', 19 => 'txt', 20 => 'xls', 21 => 'xlsx', 22 => 'wav'), 'campaign_time_wait_on_event_false' => 'PT1H', 'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'), 'dashboard_import_user_dir' => NULL, 'mailer_api_key' => NULL, 'mailer_from_name' => 'admin Admin', 'mailer_from_email' => 'adminmail@mail.org.ua', 'mailer_return_path' => NULL, 'mailer_transport' => 'mail', 'mailer_append_tracking_pixel' => true, 'mailer_convert_embed_images' => false, 'mailer_host' => NULL, 'mailer_port' => NULL, 'mailer_user' => NULL, 'mailer_password' => NULL, 'mailer_encryption' => NULL, 'mailer_auth_mode' => NULL, 'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com', 'mailer_spool_type' => 'memory', 'mailer_spool_path' => ($this->targetDirs[2].'/spool'), 'mailer_spool_msg_limit' => NULL, 'mailer_spool_time_limit' => NULL, 'mailer_spool_recover_timeout' => 900, 'mailer_spool_clear_timeout' => 1800, 'unsubscribe_text' => NULL, 'webview_text' => NULL, 'unsubscribe_message' => NULL, 'resubscribe_message' => NULL, 'monitored_email' => array(), 'mailer_is_owner' => false, 'default_signature_text' => NULL, 'email_frequency_number' => NULL, 'email_frequency_time' => NULL, 'show_contact_preferences' => false, 'show_contact_frequency' => false, 'show_contact_pause_dates' => false, 'show_contact_preferred_channels' => false, 'show_contact_categories' => false, 'show_contact_segments' => false, 'mailer_mailjet_sandbox' => false, 'mailer_mailjet_sandbox_default_mail' => NULL, 'notification_enabled' => false, 'notification_landing_page_enabled' => true, 'notification_app_id' => NULL, 'notification_rest_api_key' => NULL, 'notification_safari_web_id' => NULL, 'gcm_sender_id' => '482941778795', 'welcomenotification_enabled' => true, 'cat_in_page_url' => false, 'google_analytics' => false, 'track_contact_by_ip' => false, 'redirect_list_types' => array(301 => 'mautic.page.form.redirecttype.permanent', 302 => 'mautic.page.form.redirecttype.temporary'), 'sms_enabled' => false, 'sms_username' => NULL, 'sms_password' => NULL, 'sms_sending_phone_number' => NULL, 'sms_frequency_number' => NULL, 'sms_frequency_time' => NULL, 'saml_idp_metadata' => '', 'saml_idp_entity_id' => '', 'saml_idp_own_certificate' => '', 'saml_idp_own_private_key' => '', 'saml_idp_own_password' => '', 'saml_idp_email_attribute' => '', 'saml_idp_username_attribute' => '', 'saml_idp_firstname_attribute' => '', 'saml_idp_lastname_attribute' => '', 'saml_idp_default_role' => '', 'webhook_start' => 0, 'webhook_limit' => 1000, 'webhook_log_max' => 10, 'queue_mode' => 'immediate_process', 'website_snapshot_url' => 'https://mautic.net/api/snapshot', 'website_snapshot_key' => '', 'twitter_handle_field' => 'twitter', 'supported_languages' => array('en_US' => 'English - United States'), 'paths' => array('themes' => 'themes', 'assets' => 'media', 'asset_prefix' => '', 'plugins' => 'plugins', 'translations' => 'translations', 'local_config' => ($this->targetDirs[2].'/config/local.php'), 'root' => $this->targetDirs[3], 'app' => 'app', 'bundles' => 'app/bundles', 'vendor' => 'vendor')));
        $instance->setDispatcher($this->get('debug.event_dispatcher'));
        $instance->setTranslator($a);
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRouter($this->get('router'));
        $instance->setLogger($this->get('monolog.logger.mautic'));
        $instance->setFactory($this->get('mautic.factory'));
        $instance->init();

        return $instance;
    }

    /**
     * Gets the 'oneup_uploader.routing.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oneup\UploaderBundle\Routing\RouteLoader A Oneup\UploaderBundle\Routing\RouteLoader instance
     */
    protected function getOneupUploader_Routing_LoaderService()
    {
        return $this->services['oneup_uploader.routing.loader'] = new \Oneup\UploaderBundle\Routing\RouteLoader(array('asset' => array(0 => 'oneup_uploader.controller.mautic', 1 => array('enable_progress' => false, 'enable_cancelation' => false, 'route_prefix' => ''))));
    }

    /**
     * Gets the 'oneup_uploader.storage.asset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oneup\UploaderBundle\Uploader\Storage\FilesystemStorage A Oneup\UploaderBundle\Uploader\Storage\FilesystemStorage instance
     */
    protected function getOneupUploader_Storage_AssetService()
    {
        return $this->services['oneup_uploader.storage.asset'] = new \Oneup\UploaderBundle\Uploader\Storage\FilesystemStorage(($this->targetDirs[2].'/../media/files'));
    }

    /**
     * Gets the 'oneup_uploader.templating.uploader_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oneup\UploaderBundle\Templating\Helper\UploaderHelper A Oneup\UploaderBundle\Templating\Helper\UploaderHelper instance
     */
    protected function getOneupUploader_Templating_UploaderHelperService()
    {
        return $this->services['oneup_uploader.templating.uploader_helper'] = new \Oneup\UploaderBundle\Templating\Helper\UploaderHelper($this->get('router'), array('asset' => 8388608));
    }

    /**
     * Gets the 'oneup_uploader.twig.extension.uploader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oneup\UploaderBundle\Twig\Extension\UploaderExtension A Oneup\UploaderBundle\Twig\Extension\UploaderExtension instance
     */
    protected function getOneupUploader_Twig_Extension_UploaderService()
    {
        return $this->services['oneup_uploader.twig.extension.uploader'] = new \Oneup\UploaderBundle\Twig\Extension\UploaderExtension($this->get('oneup_uploader.templating.uploader_helper'));
    }

    /**
     * Gets the 'oneup_uploader.validation_listener.allowed_mimetype' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oneup\UploaderBundle\EventListener\AllowedMimetypeValidationListener A Oneup\UploaderBundle\EventListener\AllowedMimetypeValidationListener instance
     */
    protected function getOneupUploader_ValidationListener_AllowedMimetypeService()
    {
        return $this->services['oneup_uploader.validation_listener.allowed_mimetype'] = new \Oneup\UploaderBundle\EventListener\AllowedMimetypeValidationListener();
    }

    /**
     * Gets the 'oneup_uploader.validation_listener.disallowed_mimetype' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oneup\UploaderBundle\EventListener\DisallowedMimetypeValidationListener A Oneup\UploaderBundle\EventListener\DisallowedMimetypeValidationListener instance
     */
    protected function getOneupUploader_ValidationListener_DisallowedMimetypeService()
    {
        return $this->services['oneup_uploader.validation_listener.disallowed_mimetype'] = new \Oneup\UploaderBundle\EventListener\DisallowedMimetypeValidationListener();
    }

    /**
     * Gets the 'oneup_uploader.validation_listener.max_size' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Oneup\UploaderBundle\EventListener\MaxSizeValidationListener A Oneup\UploaderBundle\EventListener\MaxSizeValidationListener instance
     */
    protected function getOneupUploader_ValidationListener_MaxSizeService()
    {
        return $this->services['oneup_uploader.validation_listener.max_size'] = new \Oneup\UploaderBundle\EventListener\MaxSizeValidationListener();
    }

    /**
     * Gets the 'profiler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Profiler\Profiler A Symfony\Component\HttpKernel\Profiler\Profiler instance
     */
    protected function getProfilerService()
    {
        $a = $this->get('monolog.logger.profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $b = $this->get('kernel', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        $c = new \Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector($this->get('doctrine'));
        $c->addLogger('default', $this->get('doctrine.dbal.logger.profiling.default'));

        $d = new \Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector();
        if ($this->has('kernel')) {
            $d->setKernel($b);
        }

        $this->services['profiler'] = $instance = new \Symfony\Component\HttpKernel\Profiler\Profiler(new \Symfony\Component\HttpKernel\Profiler\FileProfilerStorage(('file:'.__DIR__.'/profiler'), '', '', 86400), $a);

        $instance->add($this->get('data_collector.request'));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\TimeDataCollector($b, $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector());
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector());
        $instance->add($this->get('data_collector.form'));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector());
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector($a));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\EventDataCollector($this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $instance->add($this->get('data_collector.router'));
        $instance->add($this->get('data_collector.translation'));
        $instance->add(new \Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector($this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.role_hierarchy'), $this->get('security.logout_url_generator')));
        $instance->add(new \Symfony\Bridge\Twig\DataCollector\TwigDataCollector($this->get('twig.profile')));
        $instance->add($c);
        $instance->add(new \Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector($this));
        $instance->add($d);

        return $instance;
    }

    /**
     * Gets the 'profiler_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ProfilerListener A Symfony\Component\HttpKernel\EventListener\ProfilerListener instance
     */
    protected function getProfilerListenerService()
    {
        return $this->services['profiler_listener'] = new \Symfony\Component\HttpKernel\EventListener\ProfilerListener($this->get('profiler'), $this->get('request_stack'), NULL, false, false);
    }

    /**
     * Gets the 'property_accessor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\PropertyAccess\PropertyAccessor A Symfony\Component\PropertyAccess\PropertyAccessor instance
     */
    protected function getPropertyAccessorService()
    {
        return $this->services['property_accessor'] = new \Symfony\Component\PropertyAccess\PropertyAccessor(false, false);
    }

    /**
     * Gets the 'request' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @throws RuntimeException always since this service is expected to be injected dynamically
     * @throws InactiveScopeException when the 'request' service is requested while the 'request' scope is not active
     * @deprecated The "request" service is deprecated since Symfony 2.7 and will be removed in 3.0. Use the "request_stack" service instead.
     */
    protected function getRequestService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('request', 'request');
        }

        throw new RuntimeException('You have requested a synthetic service ("request"). The DIC does not know how to construct this service.');
    }

    /**
     * Gets the 'request_stack' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestStack A Symfony\Component\HttpFoundation\RequestStack instance
     */
    protected function getRequestStackService()
    {
        return $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack();
    }

    /**
     * Gets the 'response_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ResponseListener A Symfony\Component\HttpKernel\EventListener\ResponseListener instance
     */
    protected function getResponseListenerService()
    {
        return $this->services['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8');
    }

    /**
     * Gets the 'router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Routing\Router A Symfony\Bundle\FrameworkBundle\Routing\Router instance
     */
    protected function getRouterService()
    {
        $this->services['router'] = $instance = new \Symfony\Bundle\FrameworkBundle\Routing\Router($this, ($this->targetDirs[2].'/config/routing_dev.php'), array('cache_dir' => __DIR__, 'debug' => true, 'generator_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator', 'generator_base_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper', 'generator_cache_class' => 'appDevDebugProjectContainerUrlGenerator', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper', 'matcher_cache_class' => 'appDevDebugProjectContainerUrlMatcher', 'strict_requirements' => true), $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('monolog.logger.router', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        $instance->setConfigCacheFactory($this->get('config_cache_factory'));

        return $instance;
    }

    /**
     * Gets the 'router_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\RouterListener A Symfony\Component\HttpKernel\EventListener\RouterListener instance
     */
    protected function getRouterListenerService()
    {
        return $this->services['router_listener'] = new \Symfony\Component\HttpKernel\EventListener\RouterListener($this->get('router'), $this->get('request_stack'), $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'routing.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader A Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader instance
     */
    protected function getRouting_LoaderService()
    {
        $a = $this->get('file_locator');

        $b = new \Symfony\Component\Config\Loader\LoaderResolver();
        $b->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($a));
        $b->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($a));
        $b->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($a));
        $b->addLoader(new \Symfony\Component\Routing\Loader\DirectoryLoader($a));
        $b->addLoader(new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
        $b->addLoader(new \FOS\RestBundle\Routing\Loader\DirectoryRouteLoader($a, $this->get('fos_rest.routing.loader.processor')));
        $b->addLoader($this->get('fos_rest.routing.loader.controller'));
        $b->addLoader($this->get('fos_rest.routing.loader.yaml_collection'));
        $b->addLoader($this->get('fos_rest.routing.loader.xml_collection'));
        $b->addLoader($this->get('oneup_uploader.routing.loader'));
        $b->addLoader($this->get('mautic.route_loader'));

        return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader($this->get('controller_name_converter'), $b);
    }

    /**
     * Gets the 'security.authentication.guard_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Guard\GuardAuthenticatorHandler A Symfony\Component\Security\Guard\GuardAuthenticatorHandler instance
     */
    protected function getSecurity_Authentication_GuardHandlerService()
    {
        return $this->services['security.authentication.guard_handler'] = new \Symfony\Component\Security\Guard\GuardAuthenticatorHandler($this->get('security.token_storage'), $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'security.authentication_utils' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Http\Authentication\AuthenticationUtils A Symfony\Component\Security\Http\Authentication\AuthenticationUtils instance
     */
    protected function getSecurity_AuthenticationUtilsService()
    {
        return $this->services['security.authentication_utils'] = new \Symfony\Component\Security\Http\Authentication\AuthenticationUtils($this->get('request_stack'));
    }

    /**
     * Gets the 'security.authorization_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\AuthorizationChecker A Symfony\Component\Security\Core\Authorization\AuthorizationChecker instance
     */
    protected function getSecurity_AuthorizationCheckerService()
    {
        return $this->services['security.authorization_checker'] = new \Symfony\Component\Security\Core\Authorization\AuthorizationChecker($this->get('security.token_storage'), $this->get('security.authentication.manager'), $this->get('security.access.decision_manager'), false);
    }

    /**
     * Gets the 'security.context' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\SecurityContext A Symfony\Component\Security\Core\SecurityContext instance
     *
     * @deprecated The "security.context" service is deprecated since Symfony 2.6 and will be removed in 3.0.
     */
    protected function getSecurity_ContextService()
    {
        @trigger_error('The "security.context" service is deprecated since Symfony 2.6 and will be removed in 3.0.', E_USER_DEPRECATED);

        return $this->services['security.context'] = new \Symfony\Component\Security\Core\SecurityContext($this->get('security.token_storage'), $this->get('security.authorization_checker'));
    }

    /**
     * Gets the 'security.csrf.token_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Csrf\CsrfTokenManager A Symfony\Component\Security\Csrf\CsrfTokenManager instance
     */
    protected function getSecurity_Csrf_TokenManagerService()
    {
        return $this->services['security.csrf.token_manager'] = new \Symfony\Component\Security\Csrf\CsrfTokenManager(new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator(), new \Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage($this->get('session')));
    }

    /**
     * Gets the 'security.encoder_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Encoder\EncoderFactory A Symfony\Component\Security\Core\Encoder\EncoderFactory instance
     */
    protected function getSecurity_EncoderFactoryService()
    {
        return $this->services['security.encoder_factory'] = new \Symfony\Component\Security\Core\Encoder\EncoderFactory(array('Symfony\\Component\\Security\\Core\\User\\User' => array('class' => 'Symfony\\Component\\Security\\Core\\Encoder\\BCryptPasswordEncoder', 'arguments' => array(0 => 13)), 'Mautic\\UserBundle\\Entity\\User' => array('class' => 'Symfony\\Component\\Security\\Core\\Encoder\\BCryptPasswordEncoder', 'arguments' => array(0 => 13))));
    }

    /**
     * Gets the 'security.firewall' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Http\Firewall A Symfony\Component\Security\Http\Firewall instance
     */
    protected function getSecurity_FirewallService()
    {
        return $this->services['security.firewall'] = new \Symfony\Component\Security\Http\Firewall(new \Symfony\Bundle\SecurityBundle\Security\FirewallMap($this, array('security.firewall.map.context.install' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/installer'), 'security.firewall.map.context.dev' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/(_(profiler|wdt)|css|images|js)/'), 'security.firewall.map.context.login' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/s/login$'), 'security.firewall.map.context.sso_login' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/s/sso_login'), 'security.firewall.map.context.saml_discovery' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/saml/discovery$'), 'security.firewall.map.context.main' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/s/'), 'security.firewall.map.context.public' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/'))), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'security.firewall.map.context.dev' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance
     */
    protected function getSecurity_Firewall_Map_Context_DevService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        return $this->services['security.firewall.map.context.dev'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => $this->get('mautic.user.provider')), 'dev', $b, $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)), 2 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '58f0f772084797.79047117', $b, $this->get('security.authentication.manager')), 3 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'dev', NULL, NULL, NULL, $b, false));
    }

    /**
     * Gets the 'security.firewall.map.context.install' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance
     */
    protected function getSecurity_Firewall_Map_Context_InstallService()
    {
        return $this->services['security.firewall.map.context.install'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(), NULL);
    }

    /**
     * Gets the 'security.firewall.map.context.login' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance
     */
    protected function getSecurity_Firewall_Map_Context_LoginService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        return $this->services['security.firewall.map.context.login'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => $this->get('security.context_listener.1'), 2 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '58f0f772084797.79047117', $b, $this->get('security.authentication.manager')), 3 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'login', NULL, NULL, NULL, $b, false));
    }

    /**
     * Gets the 'security.firewall.map.context.main' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance
     */
    protected function getSecurity_Firewall_Map_Context_MainService()
    {
        $a = $this->get('security.http_utils');
        $b = $this->get('mautic.user.provider');
        $c = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $d = $this->get('security.token_storage');
        $e = $this->get('mautic.security.authentication_handler');
        $f = $this->get('mautic.user.form_authenticator');
        $g = $this->get('security.authentication.manager');
        $h = $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        $i = new \Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices(array(0 => $b), '2b8f10339af620f848a8683ad825be13e746de52', 'main', array('lifetime' => 31536000, 'path' => '/', 'domain' => '', 'name' => 'REMEMBERME', 'secure' => false, 'httponly' => true, 'always_remember_me' => false, 'remember_me_parameter' => '_remember_me'), $c);

        $j = new \Symfony\Component\Security\Http\Firewall\LogoutListener($d, $a, new \Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler($a, '/s/login'), array('csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'logout', 'logout_path' => '/s/logout'));
        $j->addHandler(new \Symfony\Component\Security\Http\Logout\SessionLogoutHandler());
        $j->addHandler($this->get('mautic.security.logout_handler'));
        $j->addHandler($i);

        $k = new \Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy('migrate');

        $l = new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler($e, array('login_path' => '/s/login', 'always_use_default_target_path' => false, 'default_target_path' => '/', 'target_path_parameter' => '_target_path', 'use_referer' => false), 'main');

        $m = new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler($e, array('login_path' => '/s/login', 'failure_path' => NULL, 'failure_forward' => false, 'failure_path_parameter' => '_failure_path'));

        $n = new \Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler($f, $l, $m, $c);

        $o = new \Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener($d, $g, $k, $a, 'main', $n, $n, array('authenticator' => 'mautic.user.form_authenticator', 'check_path' => '/s/login_check', 'use_forward' => false, 'require_previous_session' => true, 'username_parameter' => '_username', 'password_parameter' => '_password', 'csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'authenticate', 'post_only' => true), $c, $h, $this->get('security.csrf.token_manager'), $f);
        $o->setRememberMeServices($i);

        return $this->services['security.firewall.map.context.main'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => $this->get('security.context_listener.1'), 2 => $j, 3 => $o, 4 => new \Symfony\Component\Security\Http\Firewall\RememberMeListener($d, $i, $g, $c, $h, true, $k), 5 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($d, $this->get('security.authentication.trust_resolver'), $a, 'main', new \Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint($this->get('http_kernel'), $a, '/s/login', false), NULL, NULL, $c, false));
    }

    /**
     * Gets the 'security.firewall.map.context.public' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance
     */
    protected function getSecurity_Firewall_Map_Context_PublicService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        return $this->services['security.firewall.map.context.public'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => $this->get('security.context_listener.1'), 2 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '58f0f772084797.79047117', $b, $this->get('security.authentication.manager')), 3 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'public', NULL, NULL, NULL, $b, false));
    }

    /**
     * Gets the 'security.firewall.map.context.saml_discovery' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance
     */
    protected function getSecurity_Firewall_Map_Context_SamlDiscoveryService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        return $this->services['security.firewall.map.context.saml_discovery'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => $this->get('security.context_listener.1'), 2 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '58f0f772084797.79047117', $b, $this->get('security.authentication.manager')), 3 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'saml_discovery', NULL, NULL, NULL, $b, false));
    }

    /**
     * Gets the 'security.firewall.map.context.sso_login' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance
     */
    protected function getSecurity_Firewall_Map_Context_SsoLoginService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('security.authentication.manager');
        $c = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        return $this->services['security.firewall.map.context.sso_login'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => $this->get('security.context_listener.1'), 2 => new \Mautic\UserBundle\Security\Firewall\AuthenticationListener($this->get('mautic.security.authentication_handler'), $a, $b, $this->get('logger'), $this->get('debug.event_dispatcher'), 'sso_login'), 3 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '58f0f772084797.79047117', $c, $b), 4 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'sso_login', NULL, NULL, NULL, $c, false));
    }

    /**
     * Gets the 'security.password_encoder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Encoder\UserPasswordEncoder A Symfony\Component\Security\Core\Encoder\UserPasswordEncoder instance
     */
    protected function getSecurity_PasswordEncoderService()
    {
        return $this->services['security.password_encoder'] = new \Symfony\Component\Security\Core\Encoder\UserPasswordEncoder($this->get('security.encoder_factory'));
    }

    /**
     * Gets the 'security.rememberme.response_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Http\RememberMe\ResponseListener A Symfony\Component\Security\Http\RememberMe\ResponseListener instance
     */
    protected function getSecurity_Rememberme_ResponseListenerService()
    {
        return $this->services['security.rememberme.response_listener'] = new \Symfony\Component\Security\Http\RememberMe\ResponseListener();
    }

    /**
     * Gets the 'security.secure_random' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Util\SecureRandom A Symfony\Component\Security\Core\Util\SecureRandom instance
     *
     * @deprecated The "security.secure_random" service is deprecated since Symfony 2.8 and will be removed in 3.0. Use the random_bytes() function instead.
     */
    protected function getSecurity_SecureRandomService()
    {
        @trigger_error('The "security.secure_random" service is deprecated since Symfony 2.8 and will be removed in 3.0. Use the random_bytes() function instead.', E_USER_DEPRECATED);

        return $this->services['security.secure_random'] = new \Symfony\Component\Security\Core\Util\SecureRandom();
    }

    /**
     * Gets the 'security.token_storage' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage A Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage instance
     */
    protected function getSecurity_TokenStorageService()
    {
        return $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage();
    }

    /**
     * Gets the 'security.user_checker.dev' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\User\UserChecker A Symfony\Component\Security\Core\User\UserChecker instance
     */
    protected function getSecurity_UserChecker_DevService()
    {
        return $this->services['security.user_checker.dev'] = new \Symfony\Component\Security\Core\User\UserChecker();
    }

    /**
     * Gets the 'security.validator.user_password' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator A Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator instance
     */
    protected function getSecurity_Validator_UserPasswordService()
    {
        return $this->services['security.validator.user_password'] = new \Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator($this->get('security.token_storage'), $this->get('security.encoder_factory'));
    }

    /**
     * Gets the 'sensio_distribution.security_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \SensioLabs\Security\SecurityChecker A SensioLabs\Security\SecurityChecker instance
     */
    protected function getSensioDistribution_SecurityCheckerService()
    {
        return $this->services['sensio_distribution.security_checker'] = new \SensioLabs\Security\SecurityChecker();
    }

    /**
     * Gets the 'sensio_distribution.security_checker.command' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \SensioLabs\Security\Command\SecurityCheckerCommand A SensioLabs\Security\Command\SecurityCheckerCommand instance
     */
    protected function getSensioDistribution_SecurityChecker_CommandService()
    {
        return $this->services['sensio_distribution.security_checker.command'] = new \SensioLabs\Security\Command\SecurityCheckerCommand($this->get('sensio_distribution.security_checker'));
    }

    /**
     * Gets the 'service_container' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @throws RuntimeException always since this service is expected to be injected dynamically
     */
    protected function getServiceContainerService()
    {
        throw new RuntimeException('You have requested a synthetic service ("service_container"). The DIC does not know how to construct this service.');
    }

    /**
     * Gets the 'session' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Session A Symfony\Component\HttpFoundation\Session\Session instance
     */
    protected function getSessionService()
    {
        return $this->services['session'] = new \Symfony\Component\HttpFoundation\Session\Session($this->get('session.storage.native'), new \Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag(), new \Symfony\Component\HttpFoundation\Session\Flash\FlashBag());
    }

    /**
     * Gets the 'session.save_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\SaveSessionListener A Symfony\Component\HttpKernel\EventListener\SaveSessionListener instance
     */
    protected function getSession_SaveListenerService()
    {
        return $this->services['session.save_listener'] = new \Symfony\Component\HttpKernel\EventListener\SaveSessionListener();
    }

    /**
     * Gets the 'session.storage.filesystem' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage A Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage instance
     */
    protected function getSession_Storage_FilesystemService()
    {
        return $this->services['session.storage.filesystem'] = new \Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage((__DIR__.'/sessions'), 'MOCKSESSID', $this->get('session.storage.metadata_bag'));
    }

    /**
     * Gets the 'session.storage.native' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage A Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage instance
     */
    protected function getSession_Storage_NativeService()
    {
        return $this->services['session.storage.native'] = new \Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage(array('name' => 'eef8347ab0ab5a3c47c64690bceb92aa', 'cookie_httponly' => true, 'gc_probability' => 1), NULL, $this->get('session.storage.metadata_bag'));
    }

    /**
     * Gets the 'session.storage.php_bridge' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage A Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage instance
     */
    protected function getSession_Storage_PhpBridgeService()
    {
        return $this->services['session.storage.php_bridge'] = new \Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage(NULL, $this->get('session.storage.metadata_bag'));
    }

    /**
     * Gets the 'session_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\EventListener\SessionListener A Symfony\Bundle\FrameworkBundle\EventListener\SessionListener instance
     */
    protected function getSessionListenerService()
    {
        return $this->services['session_listener'] = new \Symfony\Bundle\FrameworkBundle\EventListener\SessionListener($this);
    }

    /**
     * Gets the 'streamed_response_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener A Symfony\Component\HttpKernel\EventListener\StreamedResponseListener instance
     */
    protected function getStreamedResponseListenerService()
    {
        return $this->services['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener();
    }

    /**
     * Gets the 'swiftmailer.email_sender.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener A Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener instance
     */
    protected function getSwiftmailer_EmailSender_ListenerService()
    {
        return $this->services['swiftmailer.email_sender.listener'] = new \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener($this, $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'swiftmailer.mailer.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Swift_Mailer A Swift_Mailer instance
     */
    protected function getSwiftmailer_Mailer_DefaultService()
    {
        return $this->services['swiftmailer.mailer.default'] = new \Swift_Mailer($this->get('swiftmailer.mailer.default.transport'));
    }

    /**
     * Gets the 'swiftmailer.mailer.default.plugin.messagelogger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Swift_Plugins_MessageLogger A Swift_Plugins_MessageLogger instance
     */
    protected function getSwiftmailer_Mailer_Default_Plugin_MessageloggerService()
    {
        return $this->services['swiftmailer.mailer.default.plugin.messagelogger'] = new \Swift_Plugins_MessageLogger();
    }

    /**
     * Gets the 'swiftmailer.mailer.default.transport' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Swift_Transport_MailTransport A Swift_Transport_MailTransport instance
     */
    protected function getSwiftmailer_Mailer_Default_TransportService()
    {
        $this->services['swiftmailer.mailer.default.transport'] = $instance = new \Swift_Transport_MailTransport(new \Swift_Transport_SimpleMailInvoker(), new \Swift_Events_SimpleEventDispatcher());

        $instance->registerPlugin($this->get('swiftmailer.mailer.default.plugin.messagelogger'));

        return $instance;
    }

    /**
     * Gets the 'templating' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine A Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine instance
     */
    protected function getTemplatingService()
    {
        $this->services['templating'] = $instance = new \Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine($this, array());

        $instance->addEngine($this->get('debug.templating.engine.php'));
        $instance->addEngine(new \Symfony\Bundle\TwigBundle\TwigEngine($this->get('twig'), $this->get('templating.name_parser'), $this->get('templating.locator')));

        return $instance;
    }

    /**
     * Gets the 'templating.filename_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser A Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser instance
     */
    protected function getTemplating_FilenameParserService()
    {
        return $this->services['templating.filename_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser();
    }

    /**
     * Gets the 'templating.globals' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables A Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables instance
     */
    protected function getTemplating_GlobalsService()
    {
        return $this->services['templating.globals'] = new \Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables($this);
    }

    /**
     * Gets the 'templating.helper.actions' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper instance
     */
    protected function getTemplating_Helper_ActionsService()
    {
        return $this->services['templating.helper.actions'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper($this->get('fragment.handler'));
    }

    /**
     * Gets the 'templating.helper.assets' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\AssetsHelper A Mautic\CoreBundle\Templating\Helper\AssetsHelper instance
     */
    protected function getTemplating_Helper_AssetsService()
    {
        $this->services['templating.helper.assets'] = $instance = new \Mautic\CoreBundle\Templating\Helper\AssetsHelper($this->get('assets.packages'), array());

        $instance->setPathsHelper($this->get('mautic.helper.paths'));
        $instance->setAssetHelper($this->get('mautic.helper.assetgeneration'));
        $instance->setSiteUrl('http://nautic.dev');
        $instance->setVersion('81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17', '2.7.2-dev');

        return $instance;
    }

    /**
     * Gets the 'templating.helper.code' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper instance
     */
    protected function getTemplating_Helper_CodeService()
    {
        return $this->services['templating.helper.code'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper(NULL, $this->targetDirs[2], 'UTF-8');
    }

    /**
     * Gets the 'templating.helper.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\FormHelper A Mautic\CoreBundle\Templating\Helper\FormHelper instance
     */
    protected function getTemplating_Helper_FormService()
    {
        return $this->services['templating.helper.form'] = new \Mautic\CoreBundle\Templating\Helper\FormHelper(new \Symfony\Component\Form\FormRenderer(new \Symfony\Component\Form\Extension\Templating\TemplatingRendererEngine($this->get('debug.templating.engine.php'), array(0 => 'FrameworkBundle:Form', 1 => 'MauticCoreBundle:FormTheme\\Custom')), $this->get('security.csrf.token_manager', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
    }

    /**
     * Gets the 'templating.helper.logout_url' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper A Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper instance
     */
    protected function getTemplating_Helper_LogoutUrlService()
    {
        return $this->services['templating.helper.logout_url'] = new \Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper($this->get('security.logout_url_generator'));
    }

    /**
     * Gets the 'templating.helper.request' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper instance
     */
    protected function getTemplating_Helper_RequestService()
    {
        return $this->services['templating.helper.request'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper($this->get('request_stack'));
    }

    /**
     * Gets the 'templating.helper.router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper instance
     */
    protected function getTemplating_Helper_RouterService()
    {
        return $this->services['templating.helper.router'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper($this->get('router'));
    }

    /**
     * Gets the 'templating.helper.security' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper A Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper instance
     */
    protected function getTemplating_Helper_SecurityService()
    {
        return $this->services['templating.helper.security'] = new \Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper($this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'templating.helper.session' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper instance
     */
    protected function getTemplating_Helper_SessionService()
    {
        return $this->services['templating.helper.session'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper($this->get('request_stack'));
    }

    /**
     * Gets the 'templating.helper.slots' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\SlotsHelper A Mautic\CoreBundle\Templating\Helper\SlotsHelper instance
     */
    protected function getTemplating_Helper_SlotsService()
    {
        return $this->services['templating.helper.slots'] = new \Mautic\CoreBundle\Templating\Helper\SlotsHelper();
    }

    /**
     * Gets the 'templating.helper.stopwatch' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper A Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper instance
     */
    protected function getTemplating_Helper_StopwatchService()
    {
        return $this->services['templating.helper.stopwatch'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper($this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'templating.helper.translator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Helper\TranslatorHelper A Mautic\CoreBundle\Templating\Helper\TranslatorHelper instance
     */
    protected function getTemplating_Helper_TranslatorService()
    {
        return $this->services['templating.helper.translator'] = new \Mautic\CoreBundle\Templating\Helper\TranslatorHelper($this->get('translator'));
    }

    /**
     * Gets the 'templating.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader A Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader instance
     */
    protected function getTemplating_LoaderService()
    {
        return $this->services['templating.loader'] = new \Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader($this->get('templating.locator'));
    }

    /**
     * Gets the 'templating.name_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\TemplateNameParser A Mautic\CoreBundle\Templating\TemplateNameParser instance
     */
    protected function getTemplating_NameParserService()
    {
        return $this->services['templating.name_parser'] = new \Mautic\CoreBundle\Templating\TemplateNameParser($this->get('kernel'));
    }

    /**
     * Gets the 'templating.twig.extension.asset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Twig\Extension\AssetExtension A Mautic\CoreBundle\Templating\Twig\Extension\AssetExtension instance
     */
    protected function getTemplating_Twig_Extension_AssetService()
    {
        return $this->services['templating.twig.extension.asset'] = new \Mautic\CoreBundle\Templating\Twig\Extension\AssetExtension($this->get('templating.helper.assets'));
    }

    /**
     * Gets the 'templating.twig.extension.slot' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Templating\Twig\Extension\SlotExtension A Mautic\CoreBundle\Templating\Twig\Extension\SlotExtension instance
     */
    protected function getTemplating_Twig_Extension_SlotService()
    {
        return $this->services['templating.twig.extension.slot'] = new \Mautic\CoreBundle\Templating\Twig\Extension\SlotExtension($this->get('mautic.factory'));
    }

    /**
     * Gets the 'transifex' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \BabDev\Transifex\Transifex A BabDev\Transifex\Transifex instance
     */
    protected function getTransifexService()
    {
        return $this->services['transifex'] = new \BabDev\Transifex\Transifex(array('api.username' => '', 'api.password' => ''));
    }

    /**
     * Gets the 'translation.dumper.csv' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\CsvFileDumper A Symfony\Component\Translation\Dumper\CsvFileDumper instance
     */
    protected function getTranslation_Dumper_CsvService()
    {
        return $this->services['translation.dumper.csv'] = new \Symfony\Component\Translation\Dumper\CsvFileDumper();
    }

    /**
     * Gets the 'translation.dumper.ini' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\IniFileDumper A Symfony\Component\Translation\Dumper\IniFileDumper instance
     */
    protected function getTranslation_Dumper_IniService()
    {
        return $this->services['translation.dumper.ini'] = new \Symfony\Component\Translation\Dumper\IniFileDumper();
    }

    /**
     * Gets the 'translation.dumper.json' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\JsonFileDumper A Symfony\Component\Translation\Dumper\JsonFileDumper instance
     */
    protected function getTranslation_Dumper_JsonService()
    {
        return $this->services['translation.dumper.json'] = new \Symfony\Component\Translation\Dumper\JsonFileDumper();
    }

    /**
     * Gets the 'translation.dumper.mo' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\MoFileDumper A Symfony\Component\Translation\Dumper\MoFileDumper instance
     */
    protected function getTranslation_Dumper_MoService()
    {
        return $this->services['translation.dumper.mo'] = new \Symfony\Component\Translation\Dumper\MoFileDumper();
    }

    /**
     * Gets the 'translation.dumper.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\PhpFileDumper A Symfony\Component\Translation\Dumper\PhpFileDumper instance
     */
    protected function getTranslation_Dumper_PhpService()
    {
        return $this->services['translation.dumper.php'] = new \Symfony\Component\Translation\Dumper\PhpFileDumper();
    }

    /**
     * Gets the 'translation.dumper.po' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\PoFileDumper A Symfony\Component\Translation\Dumper\PoFileDumper instance
     */
    protected function getTranslation_Dumper_PoService()
    {
        return $this->services['translation.dumper.po'] = new \Symfony\Component\Translation\Dumper\PoFileDumper();
    }

    /**
     * Gets the 'translation.dumper.qt' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\QtFileDumper A Symfony\Component\Translation\Dumper\QtFileDumper instance
     */
    protected function getTranslation_Dumper_QtService()
    {
        return $this->services['translation.dumper.qt'] = new \Symfony\Component\Translation\Dumper\QtFileDumper();
    }

    /**
     * Gets the 'translation.dumper.res' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\IcuResFileDumper A Symfony\Component\Translation\Dumper\IcuResFileDumper instance
     */
    protected function getTranslation_Dumper_ResService()
    {
        return $this->services['translation.dumper.res'] = new \Symfony\Component\Translation\Dumper\IcuResFileDumper();
    }

    /**
     * Gets the 'translation.dumper.xliff' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\XliffFileDumper A Symfony\Component\Translation\Dumper\XliffFileDumper instance
     */
    protected function getTranslation_Dumper_XliffService()
    {
        return $this->services['translation.dumper.xliff'] = new \Symfony\Component\Translation\Dumper\XliffFileDumper();
    }

    /**
     * Gets the 'translation.dumper.yml' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\YamlFileDumper A Symfony\Component\Translation\Dumper\YamlFileDumper instance
     */
    protected function getTranslation_Dumper_YmlService()
    {
        return $this->services['translation.dumper.yml'] = new \Symfony\Component\Translation\Dumper\YamlFileDumper();
    }

    /**
     * Gets the 'translation.extractor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Extractor\ChainExtractor A Symfony\Component\Translation\Extractor\ChainExtractor instance
     */
    protected function getTranslation_ExtractorService()
    {
        $this->services['translation.extractor'] = $instance = new \Symfony\Component\Translation\Extractor\ChainExtractor();

        $instance->addExtractor('php', $this->get('translation.extractor.php'));
        $instance->addExtractor('twig', $this->get('twig.translation.extractor'));

        return $instance;
    }

    /**
     * Gets the 'translation.extractor.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor A Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor instance
     */
    protected function getTranslation_Extractor_PhpService()
    {
        return $this->services['translation.extractor.php'] = new \Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor();
    }

    /**
     * Gets the 'translation.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader A Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader instance
     */
    protected function getTranslation_LoaderService()
    {
        $a = $this->get('translation.loader.xliff');

        $this->services['translation.loader'] = $instance = new \Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader();

        $instance->addLoader('php', $this->get('translation.loader.php'));
        $instance->addLoader('yml', $this->get('translation.loader.yml'));
        $instance->addLoader('xlf', $a);
        $instance->addLoader('xliff', $a);
        $instance->addLoader('po', $this->get('translation.loader.po'));
        $instance->addLoader('mo', $this->get('translation.loader.mo'));
        $instance->addLoader('ts', $this->get('translation.loader.qt'));
        $instance->addLoader('csv', $this->get('translation.loader.csv'));
        $instance->addLoader('res', $this->get('translation.loader.res'));
        $instance->addLoader('dat', $this->get('translation.loader.dat'));
        $instance->addLoader('ini', $this->get('translation.loader.ini'));
        $instance->addLoader('json', $this->get('translation.loader.json'));
        $instance->addLoader('mautic', $this->get('mautic.translation.loader'));

        return $instance;
    }

    /**
     * Gets the 'translation.loader.csv' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\CsvFileLoader A Symfony\Component\Translation\Loader\CsvFileLoader instance
     */
    protected function getTranslation_Loader_CsvService()
    {
        return $this->services['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader();
    }

    /**
     * Gets the 'translation.loader.dat' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\IcuDatFileLoader A Symfony\Component\Translation\Loader\IcuDatFileLoader instance
     */
    protected function getTranslation_Loader_DatService()
    {
        return $this->services['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader();
    }

    /**
     * Gets the 'translation.loader.ini' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\IniFileLoader A Symfony\Component\Translation\Loader\IniFileLoader instance
     */
    protected function getTranslation_Loader_IniService()
    {
        return $this->services['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader();
    }

    /**
     * Gets the 'translation.loader.json' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\JsonFileLoader A Symfony\Component\Translation\Loader\JsonFileLoader instance
     */
    protected function getTranslation_Loader_JsonService()
    {
        return $this->services['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader();
    }

    /**
     * Gets the 'translation.loader.mo' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\MoFileLoader A Symfony\Component\Translation\Loader\MoFileLoader instance
     */
    protected function getTranslation_Loader_MoService()
    {
        return $this->services['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader();
    }

    /**
     * Gets the 'translation.loader.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\PhpFileLoader A Symfony\Component\Translation\Loader\PhpFileLoader instance
     */
    protected function getTranslation_Loader_PhpService()
    {
        return $this->services['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader();
    }

    /**
     * Gets the 'translation.loader.po' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\PoFileLoader A Symfony\Component\Translation\Loader\PoFileLoader instance
     */
    protected function getTranslation_Loader_PoService()
    {
        return $this->services['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader();
    }

    /**
     * Gets the 'translation.loader.qt' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\QtFileLoader A Symfony\Component\Translation\Loader\QtFileLoader instance
     */
    protected function getTranslation_Loader_QtService()
    {
        return $this->services['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader();
    }

    /**
     * Gets the 'translation.loader.res' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\IcuResFileLoader A Symfony\Component\Translation\Loader\IcuResFileLoader instance
     */
    protected function getTranslation_Loader_ResService()
    {
        return $this->services['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader();
    }

    /**
     * Gets the 'translation.loader.xliff' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\XliffFileLoader A Symfony\Component\Translation\Loader\XliffFileLoader instance
     */
    protected function getTranslation_Loader_XliffService()
    {
        return $this->services['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader();
    }

    /**
     * Gets the 'translation.loader.yml' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Loader\YamlFileLoader A Symfony\Component\Translation\Loader\YamlFileLoader instance
     */
    protected function getTranslation_Loader_YmlService()
    {
        return $this->services['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader();
    }

    /**
     * Gets the 'translation.writer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Writer\TranslationWriter A Symfony\Component\Translation\Writer\TranslationWriter instance
     */
    protected function getTranslation_WriterService()
    {
        $this->services['translation.writer'] = $instance = new \Symfony\Component\Translation\Writer\TranslationWriter();

        $instance->addDumper('php', $this->get('translation.dumper.php'));
        $instance->addDumper('xlf', $this->get('translation.dumper.xliff'));
        $instance->addDumper('po', $this->get('translation.dumper.po'));
        $instance->addDumper('mo', $this->get('translation.dumper.mo'));
        $instance->addDumper('yml', $this->get('translation.dumper.yml'));
        $instance->addDumper('ts', $this->get('translation.dumper.qt'));
        $instance->addDumper('csv', $this->get('translation.dumper.csv'));
        $instance->addDumper('ini', $this->get('translation.dumper.ini'));
        $instance->addDumper('json', $this->get('translation.dumper.json'));
        $instance->addDumper('res', $this->get('translation.dumper.res'));

        return $instance;
    }

    /**
     * Gets the 'translator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\DataCollectorTranslator A Symfony\Component\Translation\DataCollectorTranslator instance
     */
    protected function getTranslatorService()
    {
        return $this->services['translator'] = new \Symfony\Component\Translation\DataCollectorTranslator(new \Symfony\Component\Translation\LoggingTranslator($this->get('translator.default'), $this->get('monolog.logger.translation')));
    }

    /**
     * Gets the 'translator.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Mautic\CoreBundle\Translation\Translator A Mautic\CoreBundle\Translation\Translator instance
     */
    protected function getTranslator_DefaultService()
    {
        $this->services['translator.default'] = $instance = new \Mautic\CoreBundle\Translation\Translator($this, new \Symfony\Component\Translation\MessageSelector(), array('translation.loader.php' => array(0 => 'php'), 'translation.loader.yml' => array(0 => 'yml'), 'translation.loader.xliff' => array(0 => 'xlf', 1 => 'xliff'), 'translation.loader.po' => array(0 => 'po'), 'translation.loader.mo' => array(0 => 'mo'), 'translation.loader.qt' => array(0 => 'ts'), 'translation.loader.csv' => array(0 => 'csv'), 'translation.loader.res' => array(0 => 'res'), 'translation.loader.dat' => array(0 => 'dat'), 'translation.loader.ini' => array(0 => 'ini'), 'translation.loader.json' => array(0 => 'json'), 'mautic.translation.loader' => array(0 => 'mautic')), array('cache_dir' => NULL, 'debug' => true, 'resource_files' => array('et' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.et.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.et.xlf')), 'ar' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.ar.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.ar.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.ar.xlf')), 'sk' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.sk.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.sk.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.sk.xlf')), 'no' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.no.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.no.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.no.xlf')), 'fr' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.fr.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.fr.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.fr.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/oauth-server-bundle/Resources/translations/FOSOAuthServerBundle.fr.yml'), 4 => ($this->targetDirs[3].'/vendor/willdurand/oauth-server-bundle/Resources/translations/BazingaOAuthServerBundle.fr.yml'), 5 => ($this->targetDirs[3].'/vendor/webfactory/exceptions-bundle/Resources/translations/webfactory-exceptions-bundle.fr.yml')), 'lt' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.lt.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.lt.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.lt.xlf')), 'lb' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.lb.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.lb.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.lb.xlf')), 'it' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.it.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.it.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.it.xlf'), 3 => ($this->targetDirs[3].'/vendor/webfactory/exceptions-bundle/Resources/translations/webfactory-exceptions-bundle.it.yml')), 'pl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.pl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.pl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.pl.xlf')), 'sq' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.sq.xlf')), 'gl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.gl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.gl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.gl.xlf')), 'zh_CN' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.zh_CN.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.zh_CN.xlf')), 'ro' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.ro.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.ro.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.ro.xlf')), 'fi' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.fi.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.fi.xlf')), 'eu' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.eu.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.eu.xlf')), 'sv' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.sv.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.sv.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.sv.xlf')), 'vi' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.vi.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.vi.xlf')), 'bg' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.bg.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.bg.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.bg.xlf')), 'af' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.af.xlf')), 'ja' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.ja.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.ja.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.ja.xlf')), 'hy' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.hy.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.hy.xlf')), 'zh_TW' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf')), 'es' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.es.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.es.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.es.xlf')), 'id' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.id.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.id.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.id.xlf')), 'da' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.da.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.da.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.da.xlf')), 'sl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.sl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.sl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.sl.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/oauth-server-bundle/Resources/translations/FOSOAuthServerBundle.sl.yml'), 4 => ($this->targetDirs[3].'/vendor/willdurand/oauth-server-bundle/Resources/translations/BazingaOAuthServerBundle.sl.yml')), 'en' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.en.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.en.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.en.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/oauth-server-bundle/Resources/translations/FOSOAuthServerBundle.en.yml'), 4 => ($this->targetDirs[3].'/vendor/willdurand/oauth-server-bundle/Resources/translations/BazingaOAuthServerBundle.en.yml'), 5 => ($this->targetDirs[3].'/vendor/oneup/uploader-bundle/Oneup/UploaderBundle/Resources/translations/OneupUploaderBundle.en.yml'), 6 => ($this->targetDirs[3].'/vendor/webfactory/exceptions-bundle/Resources/translations/webfactory-exceptions-bundle.en.yml')), 'cy' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.cy.xlf')), 'th' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.th.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.th.xlf')), 'nl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.nl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.nl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.nl.xlf'), 3 => ($this->targetDirs[3].'/vendor/willdurand/oauth-server-bundle/Resources/translations/BazingaOAuthServerBundle.nl.yml')), 'uk' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.uk.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.uk.xlf')), 'az' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.az.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.az.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.az.xlf')), 'el' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.el.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.el.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.el.xlf')), 'de' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.de.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.de.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.de.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/oauth-server-bundle/Resources/translations/FOSOAuthServerBundle.de.yml'), 4 => ($this->targetDirs[3].'/vendor/willdurand/oauth-server-bundle/Resources/translations/BazingaOAuthServerBundle.de.yml'), 5 => ($this->targetDirs[3].'/vendor/webfactory/exceptions-bundle/Resources/translations/webfactory-exceptions-bundle.de.yml')), 'ca' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.ca.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.ca.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.ca.xlf')), 'tr' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.tr.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.tr.xlf')), 'hr' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.hr.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.hr.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.hr.xlf'), 3 => ($this->targetDirs[3].'/vendor/webfactory/exceptions-bundle/Resources/translations/webfactory-exceptions-bundle.hr.yml')), 'pt' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.pt.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.pt.xlf')), 'hu' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.hu.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.hu.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.hu.xlf')), 'sr_Cyrl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.sr_Cyrl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.sr_Cyrl.xlf')), 'ru' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.ru.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.ru.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.ru.xlf')), 'fa' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.fa.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.fa.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.fa.xlf')), 'cs' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.cs.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.cs.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.cs.xlf')), 'he' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.he.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.he.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.he.xlf')), 'nn' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.nn.xlf')), 'sr_Latn' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.sr_Latn.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.sr_Latn.xlf')), 'pt_BR' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.pt_BR.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.pt_BR.xlf')), 'mn' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.mn.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.mn.xlf')), 'lv' => array(0 => ($this->targetDirs[3].'/vendor/symfony/validator/Resources/translations/validators.lv.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/translations/validators.lv.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.lv.xlf')), 'ua' => array(0 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.ua.xlf')), 'pt_PT' => array(0 => ($this->targetDirs[3].'/vendor/symfony/security/Core/Resources/translations/security.pt_PT.xlf')))), array());

        $instance->setConfigCacheFactory($this->get('config_cache_factory'));
        $instance->setFallbackLocales(array(0 => 'en_US'));

        return $instance;
    }

    /**
     * Gets the 'translator_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\TranslatorListener A Symfony\Component\HttpKernel\EventListener\TranslatorListener instance
     */
    protected function getTranslatorListenerService()
    {
        return $this->services['translator_listener'] = new \Symfony\Component\HttpKernel\EventListener\TranslatorListener($this->get('translator'), $this->get('request_stack'));
    }

    /**
     * Gets the 'twig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Twig_Environment A Twig_Environment instance
     */
    protected function getTwigService()
    {
        $a = $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $b = $this->get('request_stack');
        $c = $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $d = $this->get('fragment.handler');

        $e = new \Symfony\Bridge\Twig\Extension\HttpFoundationExtension($b, $c);

        $f = new \Symfony\Bridge\Twig\AppVariable();
        $f->setEnvironment('dev');
        $f->setDebug(true);
        if ($this->has('security.token_storage')) {
            $f->setTokenStorage($this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        if ($this->has('request_stack')) {
            $f->setRequestStack($b);
        }

        $this->services['twig'] = $instance = new \Twig_Environment($this->get('twig.loader'), array('cache' => false, 'debug' => true, 'strict_variables' => true, 'exception_controller' => 'twig.controller.exception:showAction', 'form_themes' => array(0 => 'form_div_layout.html.twig'), 'autoescape' => 'name', 'charset' => 'UTF-8', 'paths' => array(), 'date' => array('format' => 'F j, Y H:i', 'interval_format' => '%d days', 'timezone' => NULL), 'number_format' => array('decimals' => 0, 'decimal_point' => '.', 'thousands_separator' => ',')));

        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\LogoutUrlExtension($this->get('security.logout_url_generator')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\SecurityExtension($this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $instance->addExtension(new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension());
        $instance->addExtension(new \JMS\Serializer\Twig\SerializerExtension($this->get('jms_serializer')));
        $instance->addExtension($this->get('oneup_uploader.twig.extension.uploader'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ProfilerExtension($this->get('twig.profile'), $a));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\TranslationExtension($this->get('translator')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\AssetExtension($this->get('assets.packages'), $e));
        $instance->addExtension(new \Symfony\Bundle\TwigBundle\Extension\ActionsExtension($d));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CodeExtension(NULL, $this->targetDirs[2], 'UTF-8'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\RoutingExtension($this->get('router')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\YamlExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\StopwatchExtension($a, true));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpKernelExtension($d));
        $instance->addExtension($e);
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\FormExtension(new \Symfony\Bridge\Twig\Form\TwigRenderer(new \Symfony\Bridge\Twig\Form\TwigRendererEngine(array(0 => 'form_div_layout.html.twig')), $this->get('security.csrf.token_manager', ContainerInterface::NULL_ON_INVALID_REFERENCE))));
        $instance->addExtension(new \Twig_Extension_Debug());
        $instance->addExtension($this->get('templating.twig.extension.slot'));
        $instance->addExtension($this->get('templating.twig.extension.asset'));
        $instance->addExtension(new \Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension());
        $instance->addGlobal('app', $f);
        call_user_func(array(new \Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator('F j, Y H:i', '%d days', NULL, 0, '.', ','), 'configure'), $instance);

        return $instance;
    }

    /**
     * Gets the 'twig.controller.exception' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Webfactory\Bundle\ExceptionsBundle\Controller\ExceptionController A Webfactory\Bundle\ExceptionsBundle\Controller\ExceptionController instance
     */
    protected function getTwig_Controller_ExceptionService()
    {
        return $this->services['twig.controller.exception'] = new \Webfactory\Bundle\ExceptionsBundle\Controller\ExceptionController($this->get('twig'), true);
    }

    /**
     * Gets the 'twig.controller.preview_error' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\TwigBundle\Controller\PreviewErrorController A Symfony\Bundle\TwigBundle\Controller\PreviewErrorController instance
     */
    protected function getTwig_Controller_PreviewErrorService()
    {
        return $this->services['twig.controller.preview_error'] = new \Symfony\Bundle\TwigBundle\Controller\PreviewErrorController($this->get('http_kernel'), 'twig.controller.exception:showAction');
    }

    /**
     * Gets the 'twig.exception_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ExceptionListener A Symfony\Component\HttpKernel\EventListener\ExceptionListener instance
     */
    protected function getTwig_ExceptionListenerService()
    {
        return $this->services['twig.exception_listener'] = new \Symfony\Component\HttpKernel\EventListener\ExceptionListener('twig.controller.exception:showAction', $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'twig.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\TwigBundle\Loader\FilesystemLoader A Symfony\Bundle\TwigBundle\Loader\FilesystemLoader instance
     */
    protected function getTwig_LoaderService()
    {
        $this->services['twig.loader'] = $instance = new \Symfony\Bundle\TwigBundle\Loader\FilesystemLoader($this->get('templating.locator'), $this->get('templating.name_parser'));

        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/framework-bundle/Resources/views'), 'Framework');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/security-bundle/Resources/views'), 'Security');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/swiftmailer-bundle/Resources/views'), 'Swiftmailer');
        $instance->addPath(($this->targetDirs[3].'/vendor/doctrine/doctrine-bundle/Resources/views'), 'Doctrine');
        $instance->addPath(($this->targetDirs[3].'/vendor/knplabs/knp-menu-bundle/Resources/views'), 'KnpMenu');
        $instance->addPath(($this->targetDirs[3].'/vendor/friendsofsymfony/oauth-server-bundle/Resources/views'), 'FOSOAuthServer');
        $instance->addPath(($this->targetDirs[3].'/vendor/willdurand/oauth-server-bundle/Resources/views'), 'BazingaOAuthServer');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/twig-bundle/Resources/views'), 'Twig');
        $instance->addPath(($this->targetDirs[2].'/Resources/LightSamlSpBundle/views'), 'LightSamlSp');
        $instance->addPath(($this->targetDirs[3].'/vendor/lightsaml/sp-bundle/src/LightSaml/SpBundle/Resources/views'), 'LightSamlSp');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/web-profiler-bundle/Resources/views'), 'WebProfiler');
        $instance->addPath(($this->targetDirs[3].'/vendor/webfactory/exceptions-bundle/Resources/views'), 'WebfactoryExceptions');
        $instance->addPath(($this->targetDirs[3].'/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views'));
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/twig-bridge/Resources/views/Form'));

        return $instance;
    }

    /**
     * Gets the 'twig.profile' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Twig_Profiler_Profile A Twig_Profiler_Profile instance
     */
    protected function getTwig_ProfileService()
    {
        return $this->services['twig.profile'] = new \Twig_Profiler_Profile();
    }

    /**
     * Gets the 'twig.translation.extractor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Twig\Translation\TwigExtractor A Symfony\Bridge\Twig\Translation\TwigExtractor instance
     */
    protected function getTwig_Translation_ExtractorService()
    {
        return $this->services['twig.translation.extractor'] = new \Symfony\Bridge\Twig\Translation\TwigExtractor($this->get('twig'));
    }

    /**
     * Gets the 'uri_signer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\UriSigner A Symfony\Component\HttpKernel\UriSigner instance
     */
    protected function getUriSignerService()
    {
        return $this->services['uri_signer'] = new \Symfony\Component\HttpKernel\UriSigner('81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17');
    }

    /**
     * Gets the 'validate_request_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener A Symfony\Component\HttpKernel\EventListener\ValidateRequestListener instance
     */
    protected function getValidateRequestListenerService()
    {
        return $this->services['validate_request_listener'] = new \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener();
    }

    /**
     * Gets the 'validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Validator\Validator\ValidatorInterface A Symfony\Component\Validator\Validator\ValidatorInterface instance
     */
    protected function getValidatorService()
    {
        return $this->services['validator'] = $this->get('validator.builder')->getValidator();
    }

    /**
     * Gets the 'validator.builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Validator\ValidatorBuilderInterface A Symfony\Component\Validator\ValidatorBuilderInterface instance
     */
    protected function getValidator_BuilderService()
    {
        $this->services['validator.builder'] = $instance = \Symfony\Component\Validator\Validation::createValidatorBuilder();

        $instance->setConstraintValidatorFactory(new \Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory($this, array('validator.expression' => 'validator.expression', 'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => 'validator.expression', 'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => 'validator.email', 'security.validator.user_password' => 'security.validator.user_password', 'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator' => 'security.validator.user_password', 'doctrine.orm.validator.unique' => 'doctrine.orm.validator.unique', 'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator' => 'doctrine.orm.validator.unique', 'oauth_callback' => 'mautic.validator.oauthcallback', 'Mautic\\ApiBundle\\Form\\Validator\\Constraints\\OAuthCallbackValidator' => 'mautic.validator.oauthcallback', 'leadlist_access' => 'mautic.validator.leadlistaccess', 'Mautic\\LeadBundle\\Form\\Validator\\Constraints\\LeadListAccessValidator' => 'mautic.validator.leadlistaccess', 'uniqueleadlist' => 'mautic.lead.constraint.alias', 'Mautic\\LeadBundle\\Form\\Validator\\Constraints\\UniqueUserAliasValidator' => 'mautic.lead.constraint.alias')));
        $instance->setTranslator($this->get('translator'));
        $instance->setTranslationDomain('validators');
        $instance->addXmlMappings(array(0 => ($this->targetDirs[3].'/vendor/symfony/form/Resources/config/validation.xml'), 1 => ($this->targetDirs[3].'/vendor/friendsofsymfony/oauth-server-bundle/Resources/config/validation.xml')));
        $instance->addMethodMapping('loadValidatorMetadata');
        $instance->addObjectInitializers(array(0 => $this->get('doctrine.orm.validator_initializer')));

        return $instance;
    }

    /**
     * Gets the 'validator.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Validator\Constraints\EmailValidator A Symfony\Component\Validator\Constraints\EmailValidator instance
     */
    protected function getValidator_EmailService()
    {
        return $this->services['validator.email'] = new \Symfony\Component\Validator\Constraints\EmailValidator(false);
    }

    /**
     * Gets the 'validator.expression' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Validator\Constraints\ExpressionValidator A Symfony\Component\Validator\Constraints\ExpressionValidator instance
     */
    protected function getValidator_ExpressionService()
    {
        return $this->services['validator.expression'] = new \Symfony\Component\Validator\Constraints\ExpressionValidator($this->get('property_accessor'));
    }

    /**
     * Gets the 'web_profiler.controller.exception' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController A Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController instance
     */
    protected function getWebProfiler_Controller_ExceptionService()
    {
        return $this->services['web_profiler.controller.exception'] = new \Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController($this->get('profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('twig'), true);
    }

    /**
     * Gets the 'web_profiler.controller.profiler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController A Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController instance
     */
    protected function getWebProfiler_Controller_ProfilerService()
    {
        return $this->services['web_profiler.controller.profiler'] = new \Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController($this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('twig'), array('data_collector.request' => array(0 => 'request', 1 => '@WebProfiler/Collector/request.html.twig'), 'data_collector.time' => array(0 => 'time', 1 => '@WebProfiler/Collector/time.html.twig'), 'data_collector.memory' => array(0 => 'memory', 1 => '@WebProfiler/Collector/memory.html.twig'), 'data_collector.ajax' => array(0 => 'ajax', 1 => '@WebProfiler/Collector/ajax.html.twig'), 'data_collector.form' => array(0 => 'form', 1 => '@WebProfiler/Collector/form.html.twig'), 'data_collector.exception' => array(0 => 'exception', 1 => '@WebProfiler/Collector/exception.html.twig'), 'data_collector.logger' => array(0 => 'logger', 1 => '@WebProfiler/Collector/logger.html.twig'), 'data_collector.events' => array(0 => 'events', 1 => '@WebProfiler/Collector/events.html.twig'), 'data_collector.router' => array(0 => 'router', 1 => '@WebProfiler/Collector/router.html.twig'), 'data_collector.translation' => array(0 => 'translation', 1 => '@WebProfiler/Collector/translation.html.twig'), 'data_collector.security' => array(0 => 'security', 1 => '@Security/Collector/security.html.twig'), 'data_collector.twig' => array(0 => 'twig', 1 => '@WebProfiler/Collector/twig.html.twig'), 'data_collector.doctrine' => array(0 => 'db', 1 => '@Doctrine/Collector/db.html.twig'), 'swiftmailer.data_collector' => array(0 => 'swiftmailer', 1 => '@Swiftmailer/Collector/swiftmailer.html.twig'), 'data_collector.config' => array(0 => 'config', 1 => '@WebProfiler/Collector/config.html.twig')), 'bottom');
    }

    /**
     * Gets the 'web_profiler.controller.router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Controller\RouterController A Symfony\Bundle\WebProfilerBundle\Controller\RouterController instance
     */
    protected function getWebProfiler_Controller_RouterService()
    {
        return $this->services['web_profiler.controller.router'] = new \Symfony\Bundle\WebProfilerBundle\Controller\RouterController($this->get('profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('twig'), $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'web_profiler.debug_toolbar' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener A Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener instance
     */
    protected function getWebProfiler_DebugToolbarService()
    {
        return $this->services['web_profiler.debug_toolbar'] = new \Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener($this->get('twig'), false, 2, 'bottom', $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE), '^/(app(_[\\w]+)?\\.php/)?_wdt');
    }

    /**
     * Gets the 'bazinga.oauth.entity_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Doctrine\ORM\EntityManager A Doctrine\ORM\EntityManager instance
     */
    protected function getBazinga_Oauth_EntityManagerService()
    {
        return $this->services['bazinga.oauth.entity_manager'] = $this->get('doctrine')->getManager(NULL);
    }

    /**
     * Gets the 'bazinga.oauth.provider.token_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Bazinga\OAuthServerBundle\Doctrine\Provider\TokenProvider A Bazinga\OAuthServerBundle\Doctrine\Provider\TokenProvider instance
     */
    protected function getBazinga_Oauth_Provider_TokenProviderService()
    {
        return $this->services['bazinga.oauth.provider.token_provider'] = new \Bazinga\OAuthServerBundle\Doctrine\Provider\TokenProvider($this->get('bazinga.oauth.entity_manager'), 'Mautic\\ApiBundle\\Entity\\oAuth1\\RequestToken', 'Mautic\\ApiBundle\\Entity\\oAuth1\\AccessToken');
    }

    /**
     * Gets the 'controller_name_converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser A Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser instance
     */
    protected function getControllerNameConverterService()
    {
        return $this->services['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser($this->get('kernel'));
    }

    /**
     * Gets the 'doctrine.dbal.logger.profiling.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Doctrine\DBAL\Logging\DebugStack A Doctrine\DBAL\Logging\DebugStack instance
     */
    protected function getDoctrine_Dbal_Logger_Profiling_DefaultService()
    {
        return $this->services['doctrine.dbal.logger.profiling.default'] = new \Doctrine\DBAL\Logging\DebugStack();
    }

    /**
     * Gets the 'form.server_params' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Form\Util\ServerParams A Symfony\Component\Form\Util\ServerParams instance
     */
    protected function getForm_ServerParamsService()
    {
        return $this->services['form.server_params'] = new \Symfony\Component\Form\Util\ServerParams($this->get('request_stack'));
    }

    /**
     * Gets the 'fos_oauth_server.entity_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Doctrine\ORM\EntityManager A Doctrine\ORM\EntityManager instance
     */
    protected function getFosOauthServer_EntityManagerService()
    {
        return $this->services['fos_oauth_server.entity_manager'] = $this->get('doctrine')->getManager(NULL);
    }

    /**
     * Gets the 'jms_serializer.unserialize_object_constructor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \JMS\Serializer\Construction\UnserializeObjectConstructor A JMS\Serializer\Construction\UnserializeObjectConstructor instance
     */
    protected function getJmsSerializer_UnserializeObjectConstructorService()
    {
        return $this->services['jms_serializer.unserialize_object_constructor'] = new \JMS\Serializer\Construction\UnserializeObjectConstructor();
    }

    /**
     * Gets the 'knp_menu.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Knp\Menu\Twig\Helper A Knp\Menu\Twig\Helper instance
     */
    protected function getKnpMenu_HelperService()
    {
        return $this->services['knp_menu.helper'] = new \Knp\Menu\Twig\Helper($this->get('knp_menu.renderer_provider'), $this->get('knp_menu.menu_provider'), $this->get('knp_menu.manipulator'), $this->get('knp_menu.matcher'));
    }

    /**
     * Gets the 'knp_menu.manipulator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Knp\Menu\Util\MenuManipulator A Knp\Menu\Util\MenuManipulator instance
     */
    protected function getKnpMenu_ManipulatorService()
    {
        return $this->services['knp_menu.manipulator'] = new \Knp\Menu\Util\MenuManipulator();
    }

    /**
     * Gets the 'monolog.processor.psr_log_message' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Monolog\Processor\PsrLogMessageProcessor A Monolog\Processor\PsrLogMessageProcessor instance
     */
    protected function getMonolog_Processor_PsrLogMessageService()
    {
        return $this->services['monolog.processor.psr_log_message'] = new \Monolog\Processor\PsrLogMessageProcessor();
    }

    /**
     * Gets the 'router.request_context' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Routing\RequestContext A Symfony\Component\Routing\RequestContext instance
     */
    protected function getRouter_RequestContextService()
    {
        return $this->services['router.request_context'] = new \Symfony\Component\Routing\RequestContext('', 'GET', 'nautic.dev', 'http', 80, 443);
    }

    /**
     * Gets the 'security.access.decision_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Core\Authorization\AccessDecisionManager A Symfony\Component\Security\Core\Authorization\AccessDecisionManager instance
     */
    protected function getSecurity_Access_DecisionManagerService()
    {
        $a = $this->get('security.role_hierarchy');
        $b = $this->get('security.authentication.trust_resolver');

        $this->services['security.access.decision_manager'] = $instance = new \Symfony\Component\Security\Core\Authorization\AccessDecisionManager(array(), 'affirmative', false, true);

        $instance->setVoters(array(0 => new \Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter($a), 1 => new \Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter(new \Symfony\Component\Security\Core\Authorization\ExpressionLanguage(), $b, $a), 2 => new \Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter($b)));

        return $instance;
    }

    /**
     * Gets the 'security.access_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\Firewall\AccessListener A Symfony\Component\Security\Http\Firewall\AccessListener instance
     */
    protected function getSecurity_AccessListenerService()
    {
        return $this->services['security.access_listener'] = new \Symfony\Component\Security\Http\Firewall\AccessListener($this->get('security.token_storage'), $this->get('security.access.decision_manager'), $this->get('security.access_map'), $this->get('security.authentication.manager'));
    }

    /**
     * Gets the 'security.access_map' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\AccessMap A Symfony\Component\Security\Http\AccessMap instance
     */
    protected function getSecurity_AccessMapService()
    {
        $this->services['security.access_map'] = $instance = new \Symfony\Component\Security\Http\AccessMap();

        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/api'), array(0 => 'IS_AUTHENTICATED_FULLY'), NULL);

        return $instance;
    }

    /**
     * Gets the 'security.authentication.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager A Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager instance
     */
    protected function getSecurity_Authentication_ManagerService()
    {
        $a = $this->get('debug.event_dispatcher');
        $b = $this->get('mautic.user.provider');

        $this->services['security.authentication.manager'] = $instance = new \Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager(array(0 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('58f0f772084797.79047117'), 1 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('58f0f772084797.79047117'), 2 => new \Mautic\UserBundle\Security\Authenticator\PreAuthAuthenticator($this->get('mautic.helper.integration'), $a, $this->get('request_stack'), $b, 'sso_login'), 3 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('58f0f772084797.79047117'), 4 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('58f0f772084797.79047117'), 5 => new \Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider($this->get('mautic.user.form_authenticator'), $b, 'main'), 6 => new \Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider($this->get('security.user_checker.dev'), '2b8f10339af620f848a8683ad825be13e746de52', 'main'), 7 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('58f0f772084797.79047117')), true);

        $instance->setEventDispatcher($a);

        return $instance;
    }

    /**
     * Gets the 'security.authentication.trust_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver A Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver instance
     */
    protected function getSecurity_Authentication_TrustResolverService()
    {
        return $this->services['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver('Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken', 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken');
    }

    /**
     * Gets the 'security.channel_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\Firewall\ChannelListener A Symfony\Component\Security\Http\Firewall\ChannelListener instance
     */
    protected function getSecurity_ChannelListenerService()
    {
        return $this->services['security.channel_listener'] = new \Symfony\Component\Security\Http\Firewall\ChannelListener($this->get('security.access_map'), new \Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint(80, 443), $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'security.context_listener.1' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\Firewall\ContextListener A Symfony\Component\Security\Http\Firewall\ContextListener instance
     */
    protected function getSecurity_ContextListener_1Service()
    {
        return $this->services['security.context_listener.1'] = new \Symfony\Component\Security\Http\Firewall\ContextListener($this->get('security.token_storage'), array(0 => $this->get('mautic.user.provider')), 'mautic', $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'security.http_utils' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\HttpUtils A Symfony\Component\Security\Http\HttpUtils instance
     */
    protected function getSecurity_HttpUtilsService()
    {
        $a = $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        return $this->services['security.http_utils'] = new \Symfony\Component\Security\Http\HttpUtils($a, $a);
    }

    /**
     * Gets the 'security.logout_url_generator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator A Symfony\Component\Security\Http\Logout\LogoutUrlGenerator instance
     */
    protected function getSecurity_LogoutUrlGeneratorService()
    {
        $this->services['security.logout_url_generator'] = $instance = new \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator($this->get('request_stack', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        $instance->registerListener('main', '/s/logout', 'logout', '_csrf_token', NULL);

        return $instance;
    }

    /**
     * Gets the 'security.role_hierarchy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Core\Role\RoleHierarchy A Symfony\Component\Security\Core\Role\RoleHierarchy instance
     */
    protected function getSecurity_RoleHierarchyService()
    {
        return $this->services['security.role_hierarchy'] = new \Symfony\Component\Security\Core\Role\RoleHierarchy(array('ROLE_ADMIN' => array(0 => 'ROLE_USER')));
    }

    /**
     * Gets the 'session.storage.metadata_bag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag A Symfony\Component\HttpFoundation\Session\Storage\MetadataBag instance
     */
    protected function getSession_Storage_MetadataBagService()
    {
        return $this->services['session.storage.metadata_bag'] = new \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag('_sf2_meta', '0');
    }

    /**
     * Gets the 'templating.locator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator A Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator instance
     */
    protected function getTemplating_LocatorService()
    {
        return $this->services['templating.locator'] = new \Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator($this->get('file_locator'), __DIR__);
    }

    /**
     * {@inheritdoc}
     */
    public function getParameter($name)
    {
        $name = strtolower($name);

        if (!(isset($this->parameters[$name]) || array_key_exists($name, $this->parameters))) {
            throw new InvalidArgumentException(sprintf('The parameter "%s" must be defined.', $name));
        }

        return $this->parameters[$name];
    }

    /**
     * {@inheritdoc}
     */
    public function hasParameter($name)
    {
        $name = strtolower($name);

        return isset($this->parameters[$name]) || array_key_exists($name, $this->parameters);
    }

    /**
     * {@inheritdoc}
     */
    public function setParameter($name, $value)
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }

    /**
     * {@inheritdoc}
     */
    public function getParameterBag()
    {
        if (null === $this->parameterBag) {
            $this->parameterBag = new FrozenParameterBag($this->parameters);
        }

        return $this->parameterBag;
    }

    /**
     * Gets the default parameters.
     *
     * @return array An array of the default parameters
     */
    protected function getDefaultParameters()
    {
        return array(
            'kernel.root_dir' => $this->targetDirs[2],
            'kernel.environment' => 'dev',
            'kernel.debug' => true,
            'kernel.name' => 'app',
            'kernel.cache_dir' => __DIR__,
            'kernel.logs_dir' => ($this->targetDirs[2].'/logs'),
            'kernel.bundles' => array(
                'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle',
                'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle',
                'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle',
                'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle',
                'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle',
                'DoctrineCacheBundle' => 'Doctrine\\Bundle\\DoctrineCacheBundle\\DoctrineCacheBundle',
                'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle',
                'DoctrineMigrationsBundle' => 'Doctrine\\Bundle\\MigrationsBundle\\DoctrineMigrationsBundle',
                'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle',
                'FOSOAuthServerBundle' => 'FOS\\OAuthServerBundle\\FOSOAuthServerBundle',
                'BazingaOAuthServerBundle' => 'Bazinga\\OAuthServerBundle\\BazingaOAuthServerBundle',
                'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle',
                'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle',
                'OneupUploaderBundle' => 'Oneup\\UploaderBundle\\OneupUploaderBundle',
                'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle',
                'DebrilRssAtomBundle' => 'Debril\\RssAtomBundle\\DebrilRssAtomBundle',
                'MauticApiBundle' => 'Mautic\\ApiBundle\\MauticApiBundle',
                'MauticAssetBundle' => 'Mautic\\AssetBundle\\MauticAssetBundle',
                'MauticCalendarBundle' => 'Mautic\\CalendarBundle\\MauticCalendarBundle',
                'MauticCampaignBundle' => 'Mautic\\CampaignBundle\\MauticCampaignBundle',
                'MauticCategoryBundle' => 'Mautic\\CategoryBundle\\MauticCategoryBundle',
                'MauticChannelBundle' => 'Mautic\\ChannelBundle\\MauticChannelBundle',
                'MauticConfigBundle' => 'Mautic\\ConfigBundle\\MauticConfigBundle',
                'MauticCoreBundle' => 'Mautic\\CoreBundle\\MauticCoreBundle',
                'MauticDashboardBundle' => 'Mautic\\DashboardBundle\\MauticDashboardBundle',
                'MauticDynamicContentBundle' => 'Mautic\\DynamicContentBundle\\MauticDynamicContentBundle',
                'MauticEmailBundle' => 'Mautic\\EmailBundle\\MauticEmailBundle',
                'MauticFormBundle' => 'Mautic\\FormBundle\\MauticFormBundle',
                'MauticInstallBundle' => 'Mautic\\InstallBundle\\MauticInstallBundle',
                'MauticLeadBundle' => 'Mautic\\LeadBundle\\MauticLeadBundle',
                'MauticNotificationBundle' => 'Mautic\\NotificationBundle\\MauticNotificationBundle',
                'MauticPageBundle' => 'Mautic\\PageBundle\\MauticPageBundle',
                'MauticPluginBundle' => 'Mautic\\PluginBundle\\MauticPluginBundle',
                'MauticPointBundle' => 'Mautic\\PointBundle\\MauticPointBundle',
                'MauticReportBundle' => 'Mautic\\ReportBundle\\MauticReportBundle',
                'MauticSmsBundle' => 'Mautic\\SmsBundle\\MauticSmsBundle',
                'MauticStageBundle' => 'Mautic\\StageBundle\\MauticStageBundle',
                'MauticUserBundle' => 'Mautic\\UserBundle\\MauticUserBundle',
                'MauticWebhookBundle' => 'Mautic\\WebhookBundle\\MauticWebhookBundle',
                'LightSamlSymfonyBridgeBundle' => 'LightSaml\\SymfonyBridgeBundle\\LightSamlSymfonyBridgeBundle',
                'LightSamlSpBundle' => 'LightSaml\\SpBundle\\LightSamlSpBundle',
                'MauticTestBundle' => 'MauticPlugin\\MauticTestBundle\\MauticTestBundle',
                'MauticFullContactBundle' => 'MauticPlugin\\MauticFullContactBundle\\MauticFullContactBundle',
                'MauticCloudStorageBundle' => 'MauticPlugin\\MauticCloudStorageBundle\\MauticCloudStorageBundle',
                'MauticEmailMarketingBundle' => 'MauticPlugin\\MauticEmailMarketingBundle\\MauticEmailMarketingBundle',
                'MauticGmailBundle' => 'MauticPlugin\\MauticGmailBundle\\MauticGmailBundle',
                'MauticCrmBundle' => 'MauticPlugin\\MauticCrmBundle\\MauticCrmBundle',
                'MauticFocusBundle' => 'MauticPlugin\\MauticFocusBundle\\MauticFocusBundle',
                'MauticOutlookBundle' => 'MauticPlugin\\MauticOutlookBundle\\MauticOutlookBundle',
                'MauticSocialBundle' => 'MauticPlugin\\MauticSocialBundle\\MauticSocialBundle',
                'MauticCitrixBundle' => 'MauticPlugin\\MauticCitrixBundle\\MauticCitrixBundle',
                'MauticClearbitBundle' => 'MauticPlugin\\MauticClearbitBundle\\MauticClearbitBundle',
                'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle',
                'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle',
                'SensioGeneratorBundle' => 'Sensio\\Bundle\\GeneratorBundle\\SensioGeneratorBundle',
                'WebfactoryExceptionsBundle' => 'Webfactory\\Bundle\\ExceptionsBundle\\WebfactoryExceptionsBundle',
            ),
            'kernel.charset' => 'UTF-8',
            'kernel.container_class' => 'appDevDebugProjectContainer',
            'twig.controller.exception.class' => 'Webfactory\\Bundle\\ExceptionsBundle\\Controller\\ExceptionController',
            'mautic.bundles' => array(
                'MauticCoreBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Core',
                    'bundle' => 'CoreBundle',
                    'namespace' => 'Mautic\\CoreBundle',
                    'symfonyBundleName' => 'MauticCoreBundle',
                    'bundleClass' => 'Mautic\\CoreBundle\\MauticCoreBundle',
                    'permissionClasses' => array(
                        'core' => '\\Mautic\\CoreBundle\\Security\\Permissions\\SystemPermissions',
                    ),
                    'relative' => 'app/bundles/CoreBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/CoreBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_core_ajax' => array(
                                    'path' => '/ajax',
                                    'controller' => 'MauticCoreBundle:Ajax:delegateAjax',
                                ),
                                'mautic_core_update' => array(
                                    'path' => '/update',
                                    'controller' => 'MauticCoreBundle:Update:index',
                                ),
                                'mautic_core_update_schema' => array(
                                    'path' => '/update/schema',
                                    'controller' => 'MauticCoreBundle:Update:schema',
                                ),
                                'mautic_core_form_action' => array(
                                    'path' => '/action/{objectAction}/{objectModel}/{objectId}',
                                    'controller' => 'MauticCoreBundle:Form:execute',
                                    'defaults' => array(
                                        'objectModel' => '',
                                    ),
                                ),
                                'mautic_core_file_action' => array(
                                    'path' => '/file/{objectAction}/{objectId}',
                                    'controller' => 'MauticCoreBundle:File:execute',
                                ),
                                'mautic_themes_index' => array(
                                    'path' => '/themes',
                                    'controller' => 'MauticCoreBundle:Theme:index',
                                ),
                                'mautic_themes_action' => array(
                                    'path' => '/themes/{objectAction}/{objectId}',
                                    'controller' => 'MauticCoreBundle:Theme:execute',
                                ),
                            ),
                            'public' => array(
                                'mautic_js' => array(
                                    'path' => '/mtc.js',
                                    'controller' => 'MauticCoreBundle:Js:index',
                                ),
                                'mautic_base_index' => array(
                                    'path' => '/',
                                    'controller' => 'MauticCoreBundle:Default:index',
                                ),
                                'mautic_secure_root' => array(
                                    'path' => '/s',
                                    'controller' => 'MauticCoreBundle:Default:redirectSecureRoot',
                                ),
                                'mautic_secure_root_slash' => array(
                                    'path' => '/s/',
                                    'controller' => 'MauticCoreBundle:Default:redirectSecureRoot',
                                ),
                                'mautic_remove_trailing_slash' => array(
                                    'path' => '/{url}',
                                    'controller' => 'MauticCoreBundle:Common:removeTrailingSlash',
                                    'method' => 'GET',
                                    'requirements' => array(
                                        'url' => '.*/$',
                                    ),
                                ),
                            ),
                            'api' => array(
                                'mautic_core_api_file_list' => array(
                                    'path' => '/files/{dir}',
                                    'controller' => 'MauticCoreBundle:Api\\FileApi:list',
                                ),
                                'mautic_core_api_file_create' => array(
                                    'path' => '/files/{dir}/new',
                                    'controller' => 'MauticCoreBundle:Api\\FileApi:create',
                                    'method' => 'POST',
                                ),
                                'mautic_core_api_file_delete' => array(
                                    'path' => '/files/{dir}/{file}/delete',
                                    'controller' => 'MauticCoreBundle:Api\\FileApi:delete',
                                    'method' => 'DELETE',
                                ),
                                'mautic_core_api_theme_list' => array(
                                    'path' => '/themes',
                                    'controller' => 'MauticCoreBundle:Api\\ThemeApi:list',
                                ),
                                'mautic_core_api_theme_get' => array(
                                    'path' => '/themes/{theme}',
                                    'controller' => 'MauticCoreBundle:Api\\ThemeApi:get',
                                ),
                                'mautic_core_api_theme_create' => array(
                                    'path' => '/themes/new',
                                    'controller' => 'MauticCoreBundle:Api\\ThemeApi:new',
                                    'method' => 'POST',
                                ),
                                'mautic_core_api_theme_delete' => array(
                                    'path' => '/themes/{theme}/delete',
                                    'controller' => 'MauticCoreBundle:Api\\ThemeApi:delete',
                                    'method' => 'DELETE',
                                ),
                                'mautic_core_api_stats' => array(
                                    'path' => '/stats/{table}',
                                    'controller' => 'MauticCoreBundle:Api\\StatsApi:list',
                                    'defaults' => array(
                                        'table' => '',
                                    ),
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'mautic.core.components' => array(
                                    'id' => 'mautic_components_root',
                                    'iconClass' => 'fa-puzzle-piece',
                                    'priority' => 60,
                                ),
                                'mautic.core.channels' => array(
                                    'id' => 'mautic_channels_root',
                                    'iconClass' => 'fa-rss',
                                    'priority' => 40,
                                ),
                            ),
                            'admin' => array(
                                'mautic.theme.menu.index' => array(
                                    'route' => 'mautic_themes_index',
                                    'iconClass' => 'fa-newspaper-o',
                                    'id' => 'mautic_themes_index',
                                    'access' => 'admin',
                                ),
                            ),
                            'extra' => array(
                                'priority' => -1000,
                                'items' => array(
                                    'name' => 'extra',
                                    'children' => array(

                                    ),
                                ),
                            ),
                            'profile' => array(
                                'priority' => -1000,
                                'items' => array(
                                    'name' => 'profile',
                                    'children' => array(

                                    ),
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.core.subscriber' => array(
                                    'class' => 'Mautic\\CoreBundle\\EventListener\\CoreSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.bundle',
                                        1 => 'mautic.helper.menu',
                                        2 => 'mautic.helper.user',
                                        3 => 'templating.helper.assets',
                                        4 => 'mautic.helper.core_parameters',
                                        5 => 'security.context',
                                        6 => 'mautic.user.model.user',
                                    ),
                                ),
                                'mautic.core.environment.subscriber' => array(
                                    'class' => 'Mautic\\CoreBundle\\EventListener\\EnvironmentSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.cookie',
                                    ),
                                ),
                                'mautic.core.configbundle.subscriber' => array(
                                    'class' => 'Mautic\\CoreBundle\\EventListener\\ConfigSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.language',
                                        1 => 'mautic.helper.core_parameters',
                                    ),
                                ),
                                'mautic.webpush.js.subscriber' => array(
                                    'class' => 'Mautic\\CoreBundle\\EventListener\\BuildJsSubscriber',
                                ),
                                'mautic.core.dashboard.subscriber' => array(
                                    'class' => 'Mautic\\CoreBundle\\EventListener\\DashboardSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                                'mautic.core.maintenance.subscriber' => array(
                                    'class' => 'Mautic\\CoreBundle\\EventListener\\MaintenanceSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.dbal.default_connection',
                                    ),
                                ),
                                'mautic.core.stats.subscriber' => array(
                                    'class' => 'Mautic\\CoreBundle\\EventListener\\StatsSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                ),
                                'mautic.core.assets.subscriber' => array(
                                    'class' => 'Mautic\\CoreBundle\\EventListener\\AssetsSubscriber',
                                    'arguments' => array(
                                        0 => 'templating.helper.assets',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.spacer' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\SpacerType',
                                    'alias' => 'spacer',
                                ),
                                'mautic.form.type.tel' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\TelType',
                                    'alias' => 'tel',
                                ),
                                'mautic.form.type.button_group' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\ButtonGroupType',
                                    'alias' => 'button_group',
                                ),
                                'mautic.form.type.yesno_button_group' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\YesNoButtonGroupType',
                                    'alias' => 'yesno_button_group',
                                ),
                                'mautic.form.type.standalone_button' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\StandAloneButtonType',
                                    'alias' => 'standalone_button',
                                ),
                                'mautic.form.type.form_buttons' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\FormButtonsType',
                                    'alias' => 'form_buttons',
                                ),
                                'mautic.form.type.hidden_entity' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\HiddenEntityType',
                                    'alias' => 'hidden_entity',
                                    'arguments' => 'doctrine.orm.entity_manager',
                                ),
                                'mautic.form.type.sortablelist' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\SortableListType',
                                    'alias' => 'sortablelist',
                                ),
                                'mautic.form.type.dynamiclist' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\DynamicListType',
                                    'alias' => 'dynamiclist',
                                ),
                                'mautic.form.type.coreconfig' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\ConfigType',
                                    'arguments' => array(
                                        0 => 'translator',
                                        1 => 'mautic.helper.language',
                                        2 => 'mautic.ip_lookup.factory',
                                        3 => '%mautic.supported_languages%',
                                        4 => '%mautic.ip_lookup_services%',
                                        5 => 'mautic.ip_lookup',
                                    ),
                                    'alias' => 'coreconfig',
                                ),
                                'mautic.form.type.coreconfig.iplookup_download_data_store_button' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\IpLookupDownloadDataStoreButtonType',
                                    'alias' => 'iplookup_download_data_store_button',
                                    'arguments' => array(
                                        0 => 'mautic.helper.template.date',
                                        1 => 'translator',
                                    ),
                                ),
                                'mautic.form.type.theme_list' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\ThemeListType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'theme_list',
                                ),
                                'mautic.form.type.daterange' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\DateRangeType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'daterange',
                                ),
                                'mautic.form.type.builder.section' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\BuilderSectionType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'builder_section',
                                ),
                                'mautic.form.type.slot' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotType',
                                    'alias' => 'slot',
                                ),
                                'mautic.form.type.slot.button' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotButtonType',
                                    'alias' => 'slot_button',
                                ),
                                'mautic.form.type.slot.image' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotImageType',
                                    'alias' => 'slot_image',
                                ),
                                'mautic.form.type.slot.separator' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotSeparatorType',
                                    'alias' => 'slot_separator',
                                ),
                                'mautic.form.type.slot.imagecard' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotImageCardType',
                                    'alias' => 'slot_imagecard',
                                ),
                                'mautic.form.type.slot.imagecaption' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotImageCaptionType',
                                    'alias' => 'slot_imagecaption',
                                ),
                                'mautic.form.type.slot.socialshare' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotSocialShareType',
                                    'alias' => 'slot_socialshare',
                                ),
                                'mautic.form.type.slot.socialfollow' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotSocialFollowType',
                                    'alias' => 'slot_socialfollow',
                                ),
                                'mautic.form.type.slot.codemode' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\SlotCodeModeType',
                                    'alias' => 'slot_codemode',
                                ),
                                'mautic.form.type.theme.upload' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\ThemeUploadType',
                                    'alias' => 'theme_upload',
                                ),
                                'mautic.form.type.dynamic_content_filter' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\DynamicContentFilterType',
                                    'alias' => 'dynamic_content_filter',
                                ),
                                'mautic.form.type.dynamic_content_filter_entry' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\DynamicContentFilterEntryType',
                                    'alias' => 'dynamic_content_filter_entry',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.list',
                                        1 => 'mautic.stage.model.stage',
                                    ),
                                ),
                                'mautic.form.type.dynamic_content_filter_entry_filters' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\DynamicContentFilterEntryFiltersType',
                                    'alias' => 'dynamic_content_filter_entry_filters',
                                    'arguments' => array(
                                        0 => 'translator',
                                    ),
                                ),
                                'mautic.form.type.entity_lookup' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Type\\EntityLookupType',
                                    'arguments' => array(
                                        0 => 'mautic.model.factory',
                                        1 => 'translator',
                                        2 => 'database_connection',
                                        3 => 'router',
                                    ),
                                ),
                            ),
                            'helpers' => array(
                                'mautic.helper.template.menu' => array(
                                    'class' => 'Mautic\\CoreBundle\\Templating\\Helper\\MenuHelper',
                                    'arguments' => array(
                                        0 => 'knp_menu.helper',
                                    ),
                                    'alias' => 'menu',
                                ),
                                'mautic.helper.template.date' => array(
                                    'class' => 'Mautic\\CoreBundle\\Templating\\Helper\\DateHelper',
                                    'arguments' => array(
                                        0 => '%mautic.date_format_full%',
                                        1 => '%mautic.date_format_short%',
                                        2 => '%mautic.date_format_dateonly%',
                                        3 => '%mautic.date_format_timeonly%',
                                        4 => 'translator',
                                    ),
                                    'alias' => 'date',
                                ),
                                'mautic.helper.template.exception' => array(
                                    'class' => 'Mautic\\CoreBundle\\Templating\\Helper\\ExceptionHelper',
                                    'arguments' => '%kernel.root_dir%',
                                    'alias' => 'exception',
                                ),
                                'mautic.helper.template.gravatar' => array(
                                    'class' => 'Mautic\\CoreBundle\\Templating\\Helper\\GravatarHelper',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'gravatar',
                                ),
                                'mautic.helper.template.analytics' => array(
                                    'class' => 'Mautic\\CoreBundle\\Templating\\Helper\\AnalyticsHelper',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'analytics',
                                ),
                                'mautic.helper.template.mautibot' => array(
                                    'class' => 'Mautic\\CoreBundle\\Templating\\Helper\\MautibotHelper',
                                    'alias' => 'mautibot',
                                ),
                                'mautic.helper.template.canvas' => array(
                                    'class' => 'Mautic\\CoreBundle\\Templating\\Helper\\SidebarCanvasHelper',
                                    'arguments' => array(
                                        0 => 'event_dispatcher',
                                    ),
                                    'alias' => 'canvas',
                                ),
                                'mautic.helper.template.button' => array(
                                    'class' => 'Mautic\\CoreBundle\\Templating\\Helper\\ButtonHelper',
                                    'arguments' => array(
                                        0 => 'templating',
                                        1 => 'translator',
                                        2 => 'event_dispatcher',
                                    ),
                                    'alias' => 'buttons',
                                ),
                                'mautic.helper.template.content' => array(
                                    'class' => 'Mautic\\CoreBundle\\Templating\\Helper\\ContentHelper',
                                    'arguments' => array(
                                        0 => 'templating',
                                        1 => 'event_dispatcher',
                                    ),
                                    'alias' => 'content',
                                ),
                                'mautic.helper.template.formatter' => array(
                                    'class' => 'Mautic\\CoreBundle\\Templating\\Helper\\FormatterHelper',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'formatter',
                                ),
                                'mautic.helper.template.security' => array(
                                    'class' => 'Mautic\\CoreBundle\\Templating\\Helper\\SecurityHelper',
                                    'arguments' => array(
                                        0 => 'mautic.security',
                                        1 => 'request_stack',
                                        2 => 'event_dispatcher',
                                    ),
                                    'alias' => 'security',
                                ),
                                'mautic.helper.paths' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\PathsHelper',
                                    'arguments' => array(
                                        0 => 'mautic.helper.user',
                                        1 => 'mautic.helper.core_parameters',
                                    ),
                                ),
                                'mautic.helper.ip_lookup' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\IpLookupHelper',
                                    'arguments' => array(
                                        0 => 'request_stack',
                                        1 => 'doctrine.orm.entity_manager',
                                        2 => 'mautic.helper.core_parameters',
                                        3 => 'mautic.ip_lookup',
                                    ),
                                ),
                                'mautic.helper.user' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\UserHelper',
                                    'arguments' => array(
                                        0 => 'security.token_storage',
                                    ),
                                ),
                                'mautic.helper.core_parameters' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\CoreParametersHelper',
                                    'arguments' => array(
                                        0 => 'kernel',
                                    ),
                                    'serviceAlias' => 'mautic.config',
                                ),
                                'mautic.helper.bundle' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\BundleHelper',
                                    'arguments' => array(
                                        0 => 'mautic.helper.core_parameters',
                                        1 => 'kernel',
                                    ),
                                ),
                                'mautic.helper.phone_number' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\PhoneNumberHelper',
                                ),
                            ),
                            'menus' => array(
                                'mautic.menu.main' => array(
                                    'alias' => 'main',
                                ),
                                'mautic.menu.admin' => array(
                                    'alias' => 'admin',
                                    'options' => array(
                                        'template' => 'MauticCoreBundle:Menu:admin.html.php',
                                    ),
                                ),
                                'mautic.menu.extra' => array(
                                    'alias' => 'extra',
                                    'options' => array(
                                        'template' => 'MauticCoreBundle:Menu:extra.html.php',
                                    ),
                                ),
                                'mautic.menu.profile' => array(
                                    'alias' => 'profile',
                                    'options' => array(
                                        'template' => 'MauticCoreBundle:Menu:profile_inline.html.php',
                                    ),
                                ),
                            ),
                            'other' => array(
                                'mautic.core.errorhandler.subscriber' => array(
                                    'class' => 'Mautic\\CoreBundle\\EventListener\\ErrorHandlingListener',
                                    'arguments' => array(
                                        0 => 'monolog.logger.mautic',
                                        1 => 'monolog.logger',
                                        2 => '@=container.has(\'monolog.logger.chrome\') ? container.get(\'monolog.logger.chrome\') : null',
                                    ),
                                    'tag' => 'kernel.event_subscriber',
                                ),
                                'mautic.configurator' => array(
                                    'class' => 'Mautic\\CoreBundle\\Configurator\\Configurator',
                                    'arguments' => array(
                                        0 => 'mautic.helper.paths',
                                    ),
                                ),
                                'templating.helper.assets.class' => 'Mautic\\CoreBundle\\Templating\\Helper\\AssetsHelper',
                                'templating.helper.slots.class' => 'Mautic\\CoreBundle\\Templating\\Helper\\SlotsHelper',
                                'templating.name_parser.class' => 'Mautic\\CoreBundle\\Templating\\TemplateNameParser',
                                'templating.helper.form.class' => 'Mautic\\CoreBundle\\Templating\\Helper\\FormHelper',
                                'templating.engine.php.class' => 'Mautic\\CoreBundle\\Templating\\Engine\\PhpEngine',
                                'debug.templating.engine.php.class' => 'Mautic\\CoreBundle\\Templating\\Engine\\PhpEngine',
                                'translator.class' => 'Mautic\\CoreBundle\\Translation\\Translator',
                                'templating.helper.translator.class' => 'Mautic\\CoreBundle\\Templating\\Helper\\TranslatorHelper',
                                'mautic.factory' => array(
                                    'class' => 'Mautic\\CoreBundle\\Factory\\MauticFactory',
                                    'arguments' => 'service_container',
                                ),
                                'mautic.model.factory' => array(
                                    'class' => 'Mautic\\CoreBundle\\Factory\\ModelFactory',
                                    'arguments' => 'service_container',
                                ),
                                'mautic.templating.name_parser' => array(
                                    'class' => 'Mautic\\CoreBundle\\Templating\\TemplateNameParser',
                                    'arguments' => 'kernel',
                                ),
                                'mautic.route_loader' => array(
                                    'class' => 'Mautic\\CoreBundle\\Loader\\RouteLoader',
                                    'arguments' => array(
                                        0 => 'event_dispatcher',
                                        1 => 'mautic.helper.core_parameters',
                                    ),
                                    'tag' => 'routing.loader',
                                ),
                                'mautic.security' => array(
                                    'class' => 'Mautic\\CoreBundle\\Security\\Permissions\\CorePermissions',
                                    'arguments' => array(
                                        0 => 'mautic.helper.user',
                                        1 => 'translator',
                                        2 => '%mautic.parameters%',
                                        3 => '%mautic.bundles%',
                                        4 => '%mautic.plugin.bundles%',
                                    ),
                                ),
                                'mautic.translation.loader' => array(
                                    'class' => 'Mautic\\CoreBundle\\Loader\\TranslationLoader',
                                    'arguments' => 'mautic.factory',
                                    'tag' => 'translation.loader',
                                    'alias' => 'mautic',
                                ),
                                'mautic.tblprefix_subscriber' => array(
                                    'class' => 'Mautic\\CoreBundle\\EventListener\\DoctrineEventsSubscriber',
                                    'tag' => 'doctrine.event_subscriber',
                                    'arguments' => '%mautic.db_table_prefix%',
                                ),
                                'mautic.exception.listener' => array(
                                    'class' => 'Mautic\\CoreBundle\\EventListener\\ExceptionListener',
                                    'arguments' => array(
                                        0 => 'router',
                                        1 => '"MauticCoreBundle:Exception:show"',
                                        2 => 'monolog.logger.mautic',
                                    ),
                                    'tag' => 'kernel.event_listener',
                                    'tagArguments' => array(
                                        'event' => 'kernel.exception',
                                        'method' => 'onKernelException',
                                        'priority' => '255',
                                    ),
                                ),
                                'transifex' => array(
                                    'class' => 'BabDev\\Transifex\\Transifex',
                                    'arguments' => array(
                                        0 => array(
                                            'api.username' => '%mautic.transifex_username%',
                                            'api.password' => '%mautic.transifex_password%',
                                        ),
                                    ),
                                ),
                                'mautic.helper.assetgeneration' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\AssetGenerationHelper',
                                    'arguments' => 'mautic.factory',
                                ),
                                'mautic.helper.cookie' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\CookieHelper',
                                    'arguments' => array(
                                        0 => '%mautic.cookie_path%',
                                        1 => '%mautic.cookie_domain%',
                                        2 => '%mautic.cookie_secure%',
                                        3 => '%mautic.cookie_httponly%',
                                        4 => 'request_stack',
                                    ),
                                ),
                                'mautic.helper.cache_storage' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\CacheStorageHelper',
                                    'arguments' => array(
                                        0 => '"db"',
                                        1 => '%mautic.db_table_prefix%',
                                        2 => 'doctrine.dbal.default_connection',
                                        3 => '%kernel.cache_dir%',
                                    ),
                                ),
                                'mautic.helper.update' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\UpdateHelper',
                                    'arguments' => 'mautic.factory',
                                ),
                                'mautic.helper.cache' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\CacheHelper',
                                    'arguments' => array(
                                        0 => 'kernel',
                                    ),
                                ),
                                'mautic.helper.templating' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\TemplatingHelper',
                                    'arguments' => array(
                                        0 => 'kernel',
                                    ),
                                ),
                                'mautic.helper.theme' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\ThemeHelper',
                                    'arguments' => array(
                                        0 => 'mautic.helper.paths',
                                        1 => 'mautic.helper.templating',
                                        2 => 'translator',
                                    ),
                                    'methodCalls' => array(
                                        'setDefaultTheme' => array(
                                            0 => '%mautic.theme%',
                                        ),
                                    ),
                                ),
                                'mautic.helper.encryption' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\EncryptionHelper',
                                    'arguments' => 'mautic.factory',
                                ),
                                'mautic.helper.language' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\LanguageHelper',
                                    'arguments' => 'mautic.factory',
                                ),
                                'mautic.helper.url' => array(
                                    'class' => 'Mautic\\CoreBundle\\Helper\\UrlHelper',
                                    'arguments' => array(
                                        0 => 'mautic.http.connector',
                                        1 => '%mautic.link_shortener_url%',
                                        2 => 'monolog.logger.mautic',
                                    ),
                                ),
                                'mautic.helper.menu' => array(
                                    'class' => 'Mautic\\CoreBundle\\Menu\\MenuHelper',
                                    'arguments' => array(
                                        0 => 'mautic.security',
                                        1 => 'request_stack',
                                        2 => '%mautic.parameters%',
                                    ),
                                ),
                                'mautic.menu_renderer' => array(
                                    'class' => 'Mautic\\CoreBundle\\Menu\\MenuRenderer',
                                    'arguments' => array(
                                        0 => 'knp_menu.matcher',
                                        1 => 'mautic.factory',
                                        2 => '%kernel.charset%',
                                    ),
                                    'tag' => 'knp_menu.renderer',
                                    'alias' => 'mautic',
                                ),
                                'mautic.menu.builder' => array(
                                    'class' => 'Mautic\\CoreBundle\\Menu\\MenuBuilder',
                                    'arguments' => array(
                                        0 => 'knp_menu.factory',
                                        1 => 'knp_menu.matcher',
                                        2 => 'event_dispatcher',
                                        3 => 'mautic.helper.menu',
                                    ),
                                ),
                                'mautic.ip_lookup.factory' => array(
                                    'class' => 'Mautic\\CoreBundle\\Factory\\IpLookupFactory',
                                    'arguments' => array(
                                        0 => '%mautic.ip_lookup_services%',
                                        1 => 'monolog.logger.mautic',
                                        2 => 'mautic.http.connector',
                                        3 => '%kernel.cache_dir%',
                                    ),
                                ),
                                'mautic.ip_lookup' => array(
                                    'class' => 'Mautic\\CoreBundle\\IpLookup\\AbstractLookup',
                                    'factory' => array(
                                        0 => '@mautic.ip_lookup.factory',
                                        1 => 'getService',
                                    ),
                                    'arguments' => array(
                                        0 => '%mautic.ip_lookup_service%',
                                        1 => '%mautic.ip_lookup_auth%',
                                        2 => '%mautic.ip_lookup_config%',
                                        3 => 'mautic.http.connector',
                                    ),
                                ),
                                'mautic.http.connector' => array(
                                    'class' => 'Joomla\\Http\\Http',
                                    'factory' => array(
                                        0 => 'Joomla\\Http\\HttpFactory',
                                        1 => 'getHttp',
                                    ),
                                ),
                                'twig.controller.exception.class' => 'Mautic\\CoreBundle\\Controller\\ExceptionController',
                                'monolog.handler.stream.class' => 'Mautic\\CoreBundle\\Monolog\\Handler\\PhpHandler',
                                'mautic.form.extension.custom' => array(
                                    'class' => 'Mautic\\CoreBundle\\Form\\Extension\\CustomFormExtension',
                                    'arguments' => array(
                                        0 => 'event_dispatcher',
                                    ),
                                    'tag' => 'form.type_extension',
                                    'tagArguments' => array(
                                        'alias' => 'form',
                                    ),
                                ),
                                'templating.twig.extension.slot' => array(
                                    'class' => 'Mautic\\CoreBundle\\Templating\\Twig\\Extension\\SlotExtension',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                    'tag' => 'twig.extension',
                                ),
                                'templating.twig.extension.asset' => array(
                                    'class' => 'Mautic\\CoreBundle\\Templating\\Twig\\Extension\\AssetExtension',
                                    'arguments' => array(
                                        0 => 'templating.helper.assets',
                                    ),
                                    'tag' => 'twig.extension',
                                ),
                                'mautic.schema.helper.factory' => array(
                                    'class' => 'Mautic\\CoreBundle\\Doctrine\\Helper\\SchemaHelperFactory',
                                    'arguments' => array(
                                        0 => 'mautic.schema.helper.table',
                                        1 => 'mautic.schema.helper.index',
                                        2 => 'mautic.schema.helper.column',
                                    ),
                                ),
                                'mautic.schema.helper.column' => array(
                                    'class' => 'Mautic\\CoreBundle\\Doctrine\\Helper\\ColumnSchemaHelper',
                                    'arguments' => array(
                                        0 => 'database_connection',
                                        1 => '%mautic.db_table_prefix%',
                                    ),
                                ),
                                'mautic.schema.helper.index' => array(
                                    'class' => 'Mautic\\CoreBundle\\Doctrine\\Helper\\IndexSchemaHelper',
                                    'arguments' => array(
                                        0 => 'database_connection',
                                        1 => '%mautic.db_table_prefix%',
                                    ),
                                ),
                                'mautic.schema.helper.table' => array(
                                    'class' => 'Mautic\\CoreBundle\\Doctrine\\Helper\\TableSchemaHelper',
                                    'arguments' => array(
                                        0 => 'database_connection',
                                        1 => '%mautic.db_table_prefix%',
                                        2 => 'mautic.schema.helper.column',
                                    ),
                                ),
                            ),
                            'models' => array(
                                'mautic.core.model.auditlog' => array(
                                    'class' => 'Mautic\\CoreBundle\\Model\\AuditLogModel',
                                ),
                                'mautic.core.model.notification' => array(
                                    'class' => 'Mautic\\CoreBundle\\Model\\NotificationModel',
                                    'arguments' => array(
                                        0 => 'mautic.helper.paths',
                                        1 => 'mautic.helper.update',
                                        2 => 'debril.reader',
                                        3 => 'mautic.helper.core_parameters',
                                    ),
                                    'methodCalls' => array(
                                        'setDisableUpdates' => array(
                                            0 => '%mautic.security.disableUpdates%',
                                        ),
                                    ),
                                ),
                                'mautic.core.model.form' => array(
                                    'class' => 'Mautic\\CoreBundle\\Model\\FormModel',
                                ),
                                'mautic.core.model.messagequeue' => array(
                                    'class' => 'Mautic\\CoreBundle\\Model\\MessageQueueModel',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.lead',
                                        1 => 'mautic.lead.model.company',
                                        2 => 'mautic.helper.core_parameters',
                                    ),
                                ),
                            ),
                        ),
                        'ip_lookup_services' => array(
                            'freegeoip' => array(
                                'display_name' => 'Freegeoip.net',
                                'class' => 'Mautic\\CoreBundle\\IpLookup\\FreegeoipLookup',
                            ),
                            'geobytes' => array(
                                'display_name' => 'Geobytes',
                                'class' => 'Mautic\\CoreBundle\\IpLookup\\GeobytesLookup',
                            ),
                            'geoips' => array(
                                'display_name' => 'GeoIPs',
                                'class' => 'Mautic\\CoreBundle\\IpLookup\\GeoipsLookup',
                            ),
                            'ipinfodb' => array(
                                'display_name' => 'IPInfoDB',
                                'class' => 'Mautic\\CoreBundle\\IpLookup\\IpinfodbLookup',
                            ),
                            'maxmind_country' => array(
                                'display_name' => 'MaxMind - Country Geolocation',
                                'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindCountryLookup',
                            ),
                            'maxmind_omni' => array(
                                'display_name' => 'MaxMind - Insights (formerly Omni]',
                                'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindOmniLookup',
                            ),
                            'maxmind_precision' => array(
                                'display_name' => 'MaxMind - GeoIP2 Precision',
                                'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindPrecisionLookup',
                            ),
                            'maxmind_download' => array(
                                'display_name' => 'MaxMind - GeoLite2 City Download',
                                'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindDownloadLookup',
                            ),
                            'telize' => array(
                                'display_name' => 'Telize',
                                'class' => 'Mautic\\CoreBundle\\IpLookup\\TelizeLookup',
                            ),
                            'ip2loctionlocal' => array(
                                'display_name' => 'IP2Location Local Bin File',
                                'class' => 'Mautic\\CoreBundle\\IpLookup\\IP2LocationBinLookup',
                            ),
                            'ip2loctionapi' => array(
                                'display_name' => 'IP2Location Web Service',
                                'class' => 'Mautic\\CoreBundle\\IpLookup\\IP2LocationAPILookup',
                            ),
                        ),
                        'parameters' => array(
                            'site_url' => '',
                            'webroot' => '',
                            'cache_path' => $this->targetDirs[1],
                            'log_path' => ($this->targetDirs[2].'/logs'),
                            'image_path' => 'media/images',
                            'tmp_path' => $this->targetDirs[1],
                            'theme' => 'Mauve',
                            'db_driver' => 'pdo_mysql',
                            'db_host' => '127.0.0.1',
                            'db_port' => 3306,
                            'db_name' => '',
                            'db_user' => '',
                            'db_password' => '',
                            'db_table_prefix' => '',
                            'db_server_version' => '5.5',
                            'locale' => 'en_US',
                            'secret_key' => '',
                            'dev_hosts' => NULL,
                            'trusted_hosts' => NULL,
                            'trusted_proxies' => NULL,
                            'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52',
                            'rememberme_lifetime' => 31536000,
                            'rememberme_path' => '/',
                            'rememberme_domain' => '',
                            'default_pagelimit' => 30,
                            'default_timezone' => 'UTC',
                            'date_format_full' => 'F j, Y g:i a T',
                            'date_format_short' => 'D, M d',
                            'date_format_dateonly' => 'F j, Y',
                            'date_format_timeonly' => 'g:i a',
                            'ip_lookup_service' => 'maxmind_download',
                            'ip_lookup_auth' => '',
                            'ip_lookup_config' => array(

                            ),
                            'transifex_username' => '',
                            'transifex_password' => '',
                            'update_stability' => 'stable',
                            'cookie_path' => '/',
                            'cookie_domain' => '',
                            'cookie_secure' => NULL,
                            'cookie_httponly' => false,
                            'do_not_track_ips' => array(

                            ),
                            'do_not_track_bots' => array(
                                0 => 'MSNBOT',
                                1 => 'msnbot-media',
                                2 => 'bingbot',
                                3 => 'Googlebot',
                                4 => 'Google Web Preview',
                                5 => 'Mediapartners-Google',
                                6 => 'Baiduspider',
                                7 => 'Ezooms',
                                8 => 'YahooSeeker',
                                9 => 'Slurp',
                                10 => 'AltaVista',
                                11 => 'AVSearch',
                                12 => 'Mercator',
                                13 => 'Scooter',
                                14 => 'InfoSeek',
                                15 => 'Ultraseek',
                                16 => 'Lycos',
                                17 => 'Wget',
                                18 => 'YandexBot',
                                19 => 'Java/1.4.1_04',
                                20 => 'SiteBot',
                                21 => 'Exabot',
                                22 => 'AhrefsBot',
                                23 => 'MJ12bot',
                                24 => 'NetSeer crawler',
                                25 => 'TurnitinBot',
                                26 => 'magpie-crawler',
                                27 => 'Nutch Crawler',
                                28 => 'CMS Crawler',
                                29 => 'rogerbot',
                                30 => 'Domnutch',
                                31 => 'ssearch_bot',
                                32 => 'XoviBot',
                                33 => 'digincore',
                                34 => 'fr-crawler',
                                35 => 'SeznamBot',
                                36 => 'Seznam screenshot-generator',
                                37 => 'Facebot',
                                38 => 'facebookexternalhit',
                            ),
                            'do_not_track_internal_ips' => array(

                            ),
                            'link_shortener_url' => NULL,
                            'cached_data_timeout' => 10,
                            'batch_sleep_time' => 1,
                            'batch_campaign_sleep_time' => false,
                            'cors_restrict_domains' => true,
                            'cors_valid_domains' => array(

                            ),
                            'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification',
                        ),
                    ),
                ),
                'MauticApiBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Api',
                    'bundle' => 'ApiBundle',
                    'namespace' => 'Mautic\\ApiBundle',
                    'symfonyBundleName' => 'MauticApiBundle',
                    'bundleClass' => 'Mautic\\ApiBundle\\MauticApiBundle',
                    'permissionClasses' => array(
                        'api' => '\\Mautic\\ApiBundle\\Security\\Permissions\\ApiPermissions',
                    ),
                    'relative' => 'app/bundles/ApiBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/ApiBundle'),
                    'config' => array(
                        'routes' => array(
                            'public' => array(
                                'bazinga_oauth_server_requesttoken' => array(
                                    'path' => '/oauth/v1/request_token',
                                    'controller' => 'bazinga.oauth.controller.server:requestTokenAction',
                                    'method' => 'GET|POST',
                                ),
                                'bazinga_oauth_login_allow' => array(
                                    'path' => '/oauth/v1/authorize',
                                    'controller' => 'MauticApiBundle:oAuth1/Authorize:allow',
                                    'method' => 'GET',
                                ),
                                'bazinga_oauth_server_authorize' => array(
                                    'path' => '/oauth/v1/authorize',
                                    'controller' => 'bazinga.oauth.controller.server:authorizeAction',
                                    'method' => 'POST',
                                ),
                                'mautic_oauth1_server_auth_login' => array(
                                    'path' => '/oauth/v1/authorize_login',
                                    'controller' => 'MauticApiBundle:oAuth1/Security:login',
                                    'method' => 'GET|POST',
                                ),
                                'mautic_oauth1_server_auth_login_check' => array(
                                    'path' => '/oauth/v1/authorize_login_check',
                                    'controller' => 'MauticApiBundle:oAuth1/Security:loginCheck',
                                    'method' => 'GET|POST',
                                ),
                                'bazinga_oauth_server_accesstoken' => array(
                                    'path' => '/oauth/v1/access_token',
                                    'controller' => 'bazinga.oauth.controller.server:accessTokenAction',
                                    'method' => 'GET|POST',
                                ),
                                'fos_oauth_server_token' => array(
                                    'path' => '/oauth/v2/token',
                                    'controller' => 'fos_oauth_server.controller.token:tokenAction',
                                    'method' => 'GET|POST',
                                ),
                                'fos_oauth_server_authorize' => array(
                                    'path' => '/oauth/v2/authorize',
                                    'controller' => 'MauticApiBundle:oAuth2/Authorize:authorize',
                                    'method' => 'GET|POST',
                                ),
                                'mautic_oauth2_server_auth_login' => array(
                                    'path' => '/oauth/v2/authorize_login',
                                    'controller' => 'MauticApiBundle:oAuth2/Security:login',
                                    'method' => 'GET|POST',
                                ),
                                'mautic_oauth2_server_auth_login_check' => array(
                                    'path' => '/oauth/v2/authorize_login_check',
                                    'controller' => 'MauticApiBundle:oAuth2/Security:loginCheck',
                                    'method' => 'GET|POST',
                                ),
                            ),
                            'main' => array(
                                'mautic_client_index' => array(
                                    'path' => '/credentials/{page}',
                                    'controller' => 'MauticApiBundle:Client:index',
                                ),
                                'mautic_client_action' => array(
                                    'path' => '/credentials/{objectAction}/{objectId}',
                                    'controller' => 'MauticApiBundle:Client:execute',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'admin' => array(
                                'items' => array(
                                    'mautic.api.client.menu.index' => array(
                                        'route' => 'mautic_client_index',
                                        'iconClass' => 'fa-puzzle-piece',
                                        'access' => 'api:clients:view',
                                        'checks' => array(
                                            'parameters' => array(
                                                'api_enabled' => true,
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.api.subscriber' => array(
                                    'class' => 'Mautic\\ApiBundle\\EventListener\\ApiSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.helper.core_parameters',
                                        2 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                                'mautic.api.configbundle.subscriber' => array(
                                    'class' => 'Mautic\\ApiBundle\\EventListener\\ConfigSubscriber',
                                ),
                                'mautic.api.search.subscriber' => array(
                                    'class' => 'Mautic\\ApiBundle\\EventListener\\SearchSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.api.model.client',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.apiclients' => array(
                                    'class' => 'Mautic\\ApiBundle\\Form\\Type\\ClientType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'client',
                                ),
                                'mautic.form.type.apiconfig' => array(
                                    'class' => 'Mautic\\ApiBundle\\Form\\Type\\ConfigType',
                                    'alias' => 'apiconfig',
                                ),
                            ),
                            'other' => array(
                                'mautic.api.oauth.event_listener' => array(
                                    'class' => 'Mautic\\ApiBundle\\EventListener\\OAuthEventListener',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                        1 => 'mautic.security',
                                        2 => 'translator',
                                    ),
                                    'tags' => array(
                                        0 => 'kernel.event_listener',
                                        1 => 'kernel.event_listener',
                                    ),
                                    'tagArguments' => array(
                                        0 => array(
                                            'event' => 'fos_oauth_server.pre_authorization_process',
                                            'method' => 'onPreAuthorizationProcess',
                                        ),
                                        1 => array(
                                            'event' => 'fos_oauth_server.post_authorization_process',
                                            'method' => 'onPostAuthorizationProcess',
                                        ),
                                    ),
                                ),
                                'mautic.api.oauth1.nonce_provider' => array(
                                    'class' => 'Mautic\\ApiBundle\\Provider\\NonceProvider',
                                    'arguments' => 'doctrine.orm.entity_manager',
                                ),
                                'bazinga.oauth.security.authentication.provider.class' => 'Mautic\\ApiBundle\\Security\\OAuth1\\Authentication\\Provider\\OAuthProvider',
                                'bazinga.oauth.security.authentication.listener.class' => 'Mautic\\ApiBundle\\Security\\OAuth1\\Firewall\\OAuthListener',
                                'bazinga.oauth.event_listener.request.class' => 'Mautic\\ApiBundle\\EventListener\\OAuth1\\OAuthRequestListener',
                                'fos_oauth_server.security.authentication.listener.class' => 'Mautic\\ApiBundle\\Security\\OAuth2\\Firewall\\OAuthListener',
                                'jms_serializer.metadata.annotation_driver.class' => 'Mautic\\ApiBundle\\Serializer\\Driver\\AnnotationDriver',
                                'jms_serializer.metadata.php_driver.class' => 'Mautic\\ApiBundle\\Serializer\\Driver\\ApiMetadataDriver',
                                'mautic.validator.oauthcallback' => array(
                                    'class' => 'Mautic\\ApiBundle\\Form\\Validator\\Constraints\\OAuthCallbackValidator',
                                    'tag' => 'validator.constraint_validator',
                                    'alias' => 'oauth_callback',
                                ),
                            ),
                            'models' => array(
                                'mautic.api.model.client' => array(
                                    'class' => 'Mautic\\ApiBundle\\Model\\ClientModel',
                                    'arguments' => array(
                                        0 => 'request_stack',
                                    ),
                                ),
                            ),
                        ),
                        'parameters' => array(
                            'api_enabled' => false,
                            'api_enable_basic_auth' => false,
                            'api_oauth2_access_token_lifetime' => 60,
                            'api_oauth2_refresh_token_lifetime' => 14,
                            'api_batch_max_limit' => 200,
                        ),
                    ),
                ),
                'MauticAssetBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Asset',
                    'bundle' => 'AssetBundle',
                    'namespace' => 'Mautic\\AssetBundle',
                    'symfonyBundleName' => 'MauticAssetBundle',
                    'bundleClass' => 'Mautic\\AssetBundle\\MauticAssetBundle',
                    'permissionClasses' => array(
                        'asset' => '\\Mautic\\AssetBundle\\Security\\Permissions\\AssetPermissions',
                    ),
                    'relative' => 'app/bundles/AssetBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/AssetBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_asset_index' => array(
                                    'path' => '/assets/{page}',
                                    'controller' => 'MauticAssetBundle:Asset:index',
                                ),
                                'mautic_asset_remote' => array(
                                    'path' => '/assets/remote',
                                    'controller' => 'MauticAssetBundle:Asset:remote',
                                ),
                                'mautic_asset_action' => array(
                                    'path' => '/assets/{objectAction}/{objectId}',
                                    'controller' => 'MauticAssetBundle:Asset:execute',
                                ),
                            ),
                            'api' => array(
                                'mautic_api_assetsstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'assets',
                                    'path' => '/assets',
                                    'controller' => 'MauticAssetBundle:Api\\AssetApi',
                                ),
                            ),
                            'public' => array(
                                'mautic_asset_download' => array(
                                    'path' => '/asset/{slug}',
                                    'controller' => 'MauticAssetBundle:Public:download',
                                    'defaults' => array(
                                        'slug' => '',
                                    ),
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'items' => array(
                                    'mautic.asset.assets' => array(
                                        'route' => 'mautic_asset_index',
                                        'access' => array(
                                            0 => 'asset:assets:viewown',
                                            1 => 'asset:assets:viewother',
                                        ),
                                        'parent' => 'mautic.core.components',
                                        'priority' => 300,
                                    ),
                                ),
                            ),
                        ),
                        'categories' => array(
                            'asset' => NULL,
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.asset.subscriber' => array(
                                    'class' => 'Mautic\\AssetBundle\\EventListener\\AssetSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                                'mautic.asset.pointbundle.subscriber' => array(
                                    'class' => 'Mautic\\AssetBundle\\EventListener\\PointSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.point.model.point',
                                    ),
                                ),
                                'mautic.asset.formbundle.subscriber' => array(
                                    'class' => 'Mautic\\AssetBundle\\EventListener\\FormSubscriber',
                                ),
                                'mautic.asset.campaignbundle.subscriber' => array(
                                    'class' => 'Mautic\\AssetBundle\\EventListener\\CampaignSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.campaign.model.event',
                                    ),
                                ),
                                'mautic.asset.reportbundle.subscriber' => array(
                                    'class' => 'Mautic\\AssetBundle\\EventListener\\ReportSubscriber',
                                ),
                                'mautic.asset.builder.subscriber' => array(
                                    'class' => 'Mautic\\AssetBundle\\EventListener\\BuilderSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.asset.helper.token',
                                        1 => 'mautic.lead.model.lead',
                                    ),
                                ),
                                'mautic.asset.leadbundle.subscriber' => array(
                                    'class' => 'Mautic\\AssetBundle\\EventListener\\LeadSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.asset.model.asset',
                                    ),
                                ),
                                'mautic.asset.pagebundle.subscriber' => array(
                                    'class' => 'Mautic\\AssetBundle\\EventListener\\PageSubscriber',
                                ),
                                'mautic.asset.emailbundle.subscriber' => array(
                                    'class' => 'Mautic\\AssetBundle\\EventListener\\EmailSubscriber',
                                ),
                                'mautic.asset.configbundle.subscriber' => array(
                                    'class' => 'Mautic\\AssetBundle\\EventListener\\ConfigSubscriber',
                                ),
                                'mautic.asset.search.subscriber' => array(
                                    'class' => 'Mautic\\AssetBundle\\EventListener\\SearchSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.asset.model.asset',
                                    ),
                                ),
                                'mautic.asset.stats.subscriber' => array(
                                    'class' => 'Mautic\\AssetBundle\\EventListener\\StatsSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                ),
                                'oneup_uploader.pre_upload' => array(
                                    'class' => 'Mautic\\AssetBundle\\EventListener\\UploadSubscriber',
                                    'arguments' => array(
                                        0 => 'translator',
                                        1 => 'mautic.helper.core_parameters',
                                        2 => 'mautic.asset.model.asset',
                                    ),
                                ),
                                'mautic.asset.dashboard.subscriber' => array(
                                    'class' => 'Mautic\\AssetBundle\\EventListener\\DashboardSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.asset.model.asset',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.asset' => array(
                                    'class' => 'Mautic\\AssetBundle\\Form\\Type\\AssetType',
                                    'arguments' => array(
                                        0 => 'translator',
                                        1 => 'mautic.helper.theme',
                                        2 => 'mautic.asset.model.asset',
                                    ),
                                    'alias' => 'asset',
                                ),
                                'mautic.form.type.pointaction_assetdownload' => array(
                                    'class' => 'Mautic\\AssetBundle\\Form\\Type\\PointActionAssetDownloadType',
                                    'alias' => 'pointaction_assetdownload',
                                ),
                                'mautic.form.type.campaignevent_assetdownload' => array(
                                    'class' => 'Mautic\\AssetBundle\\Form\\Type\\CampaignEventAssetDownloadType',
                                    'alias' => 'campaignevent_assetdownload',
                                ),
                                'mautic.form.type.formsubmit_assetdownload' => array(
                                    'class' => 'Mautic\\AssetBundle\\Form\\Type\\FormSubmitActionDownloadFileType',
                                    'alias' => 'asset_submitaction_downloadfile',
                                ),
                                'mautic.form.type.assetlist' => array(
                                    'class' => 'Mautic\\AssetBundle\\Form\\Type\\AssetListType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'asset_list',
                                ),
                                'mautic.form.type.assetconfig' => array(
                                    'class' => 'Mautic\\AssetBundle\\Form\\Type\\ConfigType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'assetconfig',
                                ),
                                'mautic.form.type.asset_dashboard_downloads_in_time_widget' => array(
                                    'class' => 'Mautic\\AssetBundle\\Form\\Type\\DashboardDownloadsInTimeWidgetType',
                                    'alias' => 'asset_dashboard_downloads_in_time_widget',
                                ),
                            ),
                            'others' => array(
                                'mautic.asset.upload.error.handler' => array(
                                    'class' => 'Mautic\\AssetBundle\\ErrorHandler\\DropzoneErrorHandler',
                                    'arguments' => 'mautic.factory',
                                ),
                                'oneup_uploader.controller.dropzone.class' => 'Mautic\\AssetBundle\\Controller\\UploadController',
                                'mautic.asset.helper.token' => array(
                                    'class' => 'Mautic\\AssetBundle\\Helper\\TokenHelper',
                                    'arguments' => 'mautic.asset.model.asset',
                                ),
                            ),
                            'models' => array(
                                'mautic.asset.model.asset' => array(
                                    'class' => 'Mautic\\AssetBundle\\Model\\AssetModel',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.lead',
                                        1 => 'mautic.category.model.category',
                                        2 => 'request_stack',
                                        3 => 'mautic.helper.ip_lookup',
                                        4 => 'mautic.helper.core_parameters',
                                    ),
                                ),
                            ),
                        ),
                        'parameters' => array(
                            'upload_dir' => ($this->targetDirs[2].'/../media/files'),
                            'max_size' => '6',
                            'allowed_extensions' => array(
                                0 => 'csv',
                                1 => 'doc',
                                2 => 'docx',
                                3 => 'epub',
                                4 => 'gif',
                                5 => 'jpg',
                                6 => 'jpeg',
                                7 => 'mpg',
                                8 => 'mpeg',
                                9 => 'mp3',
                                10 => 'odt',
                                11 => 'odp',
                                12 => 'ods',
                                13 => 'pdf',
                                14 => 'png',
                                15 => 'ppt',
                                16 => 'pptx',
                                17 => 'tif',
                                18 => 'tiff',
                                19 => 'txt',
                                20 => 'xls',
                                21 => 'xlsx',
                                22 => 'wav',
                            ),
                        ),
                    ),
                ),
                'MauticCalendarBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Calendar',
                    'bundle' => 'CalendarBundle',
                    'namespace' => 'Mautic\\CalendarBundle',
                    'symfonyBundleName' => 'MauticCalendarBundle',
                    'bundleClass' => 'Mautic\\CalendarBundle\\MauticCalendarBundle',
                    'permissionClasses' => array(

                    ),
                    'relative' => 'app/bundles/CalendarBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/CalendarBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_calendar_index' => array(
                                    'path' => '/calendar',
                                    'controller' => 'MauticCalendarBundle:Default:index',
                                ),
                                'mautic_calendar_action' => array(
                                    'path' => '/calendar/{objectAction}',
                                    'controller' => 'MauticCalendarBundle:Default:execute',
                                ),
                            ),
                        ),
                        'services' => array(
                            'models' => array(
                                'mautic.calendar.model.calendar' => array(
                                    'class' => 'Mautic\\CalendarBundle\\Model\\CalendarModel',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'priority' => 90,
                                'items' => array(
                                    'mautic.calendar.menu.index' => array(
                                        'route' => 'mautic_calendar_index',
                                        'iconClass' => 'fa-calendar',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticCampaignBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Campaign',
                    'bundle' => 'CampaignBundle',
                    'namespace' => 'Mautic\\CampaignBundle',
                    'symfonyBundleName' => 'MauticCampaignBundle',
                    'bundleClass' => 'Mautic\\CampaignBundle\\MauticCampaignBundle',
                    'permissionClasses' => array(
                        'campaign' => '\\Mautic\\CampaignBundle\\Security\\Permissions\\CampaignPermissions',
                    ),
                    'relative' => 'app/bundles/CampaignBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/CampaignBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_campaignevent_action' => array(
                                    'path' => '/campaigns/events/{objectAction}/{objectId}',
                                    'controller' => 'MauticCampaignBundle:Event:execute',
                                ),
                                'mautic_campaignsource_action' => array(
                                    'path' => '/campaigns/sources/{objectAction}/{objectId}',
                                    'controller' => 'MauticCampaignBundle:Source:execute',
                                ),
                                'mautic_campaign_index' => array(
                                    'path' => '/campaigns/{page}',
                                    'controller' => 'MauticCampaignBundle:Campaign:index',
                                ),
                                'mautic_campaign_action' => array(
                                    'path' => '/campaigns/{objectAction}/{objectId}',
                                    'controller' => 'MauticCampaignBundle:Campaign:execute',
                                ),
                                'mautic_campaign_contacts' => array(
                                    'path' => '/campaigns/view/{objectId}/contact/{page}',
                                    'controller' => 'MauticCampaignBundle:Campaign:contacts',
                                ),
                                'mautic_campaign_preview' => array(
                                    'path' => '/campaign/preview/{objectId}',
                                    'controller' => 'MauticEmailBundle:Public:preview',
                                ),
                            ),
                            'api' => array(
                                'mautic_api_campaignsstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'campaigns',
                                    'path' => '/campaigns',
                                    'controller' => 'MauticCampaignBundle:Api\\CampaignApi',
                                ),
                                'mautic_api_campaigneventsstandard' => array(
                                    'standard_entity' => true,
                                    'supported_endpoints' => array(
                                        0 => 'getone',
                                        1 => 'getall',
                                    ),
                                    'name' => 'events',
                                    'path' => '/campaigns/events',
                                    'controller' => 'MauticCampaignBundle:Api\\EventApi',
                                ),
                                'mautic_api_campaigns_events_contact' => array(
                                    'path' => '/campaigns/events/contact/{contactId}',
                                    'controller' => 'MauticCampaignBundle:Api\\EventLogApi:getContactEvents',
                                    'method' => 'GET',
                                ),
                                'mautic_api_campaigns_edit_contact_event' => array(
                                    'path' => '/campaigns/events/{eventId}/contact/{contactId}/edit',
                                    'controller' => 'MauticCampaignBundle:Api\\EventLogApi:editContactEvent',
                                    'method' => 'PUT',
                                ),
                                'mautic_api_campaigns_batchedit_events' => array(
                                    'path' => '/campaigns/events/batch/edit',
                                    'controller' => 'MauticCampaignBundle:Api\\EventLogApi:editEvents',
                                    'method' => 'PUT',
                                ),
                                'mautic_api_campaign_contact_events' => array(
                                    'path' => '/campaigns/{campaignId}/events/contact/{contactId}',
                                    'controller' => 'MauticCampaignBundle:Api\\EventLogApi:getContactEvents',
                                    'method' => 'GET',
                                ),
                                'mautic_api_campaigngetcontacts' => array(
                                    'path' => '/campaigns/{id}/contacts',
                                    'controller' => 'MauticCampaignBundle:Api\\CampaignApi:getContacts',
                                ),
                                'mautic_api_campaignaddcontact' => array(
                                    'path' => '/campaigns/{id}/contact/{leadId}/add',
                                    'controller' => 'MauticCampaignBundle:Api\\CampaignApi:addLead',
                                    'method' => 'POST',
                                ),
                                'mautic_api_campaignremovecontact' => array(
                                    'path' => '/campaigns/{id}/contact/{leadId}/remove',
                                    'controller' => 'MauticCampaignBundle:Api\\CampaignApi:removeLead',
                                    'method' => 'POST',
                                ),
                                'bc_mautic_api_campaignaddcontact' => array(
                                    'path' => '/campaigns/{id}/contact/add/{leadId}',
                                    'controller' => 'MauticCampaignBundle:Api\\CampaignApi:addLead',
                                    'method' => 'POST',
                                ),
                                'bc_mautic_api_campaignremovecontact' => array(
                                    'path' => '/campaigns/{id}/contact/remove/{leadId}',
                                    'controller' => 'MauticCampaignBundle:Api\\CampaignApi:removeLead',
                                    'method' => 'POST',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'mautic.campaign.menu.index' => array(
                                    'iconClass' => 'fa-clock-o',
                                    'route' => 'mautic_campaign_index',
                                    'access' => 'campaign:campaigns:view',
                                    'priority' => 50,
                                ),
                            ),
                        ),
                        'categories' => array(
                            'campaign' => NULL,
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.campaign.subscriber' => array(
                                    'class' => 'Mautic\\CampaignBundle\\EventListener\\CampaignSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                                'mautic.campaign.leadbundle.subscriber' => array(
                                    'class' => 'Mautic\\CampaignBundle\\EventListener\\LeadSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.campaign.model.campaign',
                                        1 => 'mautic.lead.model.lead',
                                    ),
                                ),
                                'mautic.campaign.calendarbundle.subscriber' => array(
                                    'class' => 'Mautic\\CampaignBundle\\EventListener\\CalendarSubscriber',
                                ),
                                'mautic.campaign.pointbundle.subscriber' => array(
                                    'class' => 'Mautic\\CampaignBundle\\EventListener\\PointSubscriber',
                                ),
                                'mautic.campaign.search.subscriber' => array(
                                    'class' => 'Mautic\\CampaignBundle\\EventListener\\SearchSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.campaign.model.campaign',
                                    ),
                                ),
                                'mautic.campaign.dashboard.subscriber' => array(
                                    'class' => 'Mautic\\CampaignBundle\\EventListener\\DashboardSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.campaign.model.campaign',
                                        1 => 'mautic.campaign.model.event',
                                    ),
                                ),
                                'mautic.campaignconfigbundle.subscriber' => array(
                                    'class' => 'Mautic\\CampaignBundle\\EventListener\\ConfigSubscriber',
                                ),
                                'mautic.campaign.stats.subscriber' => array(
                                    'class' => 'Mautic\\CampaignBundle\\EventListener\\StatsSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                ),
                                'mautic.campaign.report.subscriber' => array(
                                    'class' => 'Mautic\\CampaignBundle\\EventListener\\ReportSubscriber',
                                ),
                            ),
                            'forms' => array(
                                'mautic.campaign.type.form' => array(
                                    'class' => 'Mautic\\CampaignBundle\\Form\\Type\\CampaignType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'campaign',
                                ),
                                'mautic.campaignrange.type.action' => array(
                                    'class' => 'Mautic\\CampaignBundle\\Form\\Type\\EventType',
                                    'alias' => 'campaignevent',
                                ),
                                'mautic.campaign.type.campaignlist' => array(
                                    'class' => 'Mautic\\CampaignBundle\\Form\\Type\\CampaignListType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'campaign_list',
                                ),
                                'mautic.campaign.type.trigger.leadchange' => array(
                                    'class' => 'Mautic\\CampaignBundle\\Form\\Type\\CampaignEventLeadChangeType',
                                    'alias' => 'campaignevent_leadchange',
                                ),
                                'mautic.campaign.type.action.addremovelead' => array(
                                    'class' => 'Mautic\\CampaignBundle\\Form\\Type\\CampaignEventAddRemoveLeadType',
                                    'alias' => 'campaignevent_addremovelead',
                                ),
                                'mautic.campaign.type.canvassettings' => array(
                                    'class' => 'Mautic\\CampaignBundle\\Form\\Type\\EventCanvasSettingsType',
                                    'alias' => 'campaignevent_canvassettings',
                                ),
                                'mautic.campaign.type.leadsource' => array(
                                    'class' => 'Mautic\\CampaignBundle\\Form\\Type\\CampaignLeadSourceType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'campaign_leadsource',
                                ),
                                'mautic.form.type.campaignconfig' => array(
                                    'class' => 'Mautic\\CampaignBundle\\Form\\Type\\ConfigType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'campaignconfig',
                                ),
                            ),
                            'models' => array(
                                'mautic.campaign.model.campaign' => array(
                                    'class' => 'Mautic\\CampaignBundle\\Model\\CampaignModel',
                                    'arguments' => array(
                                        0 => 'mautic.helper.core_parameters',
                                        1 => 'mautic.lead.model.lead',
                                        2 => 'mautic.lead.model.list',
                                        3 => 'mautic.form.model.form',
                                    ),
                                ),
                                'mautic.campaign.model.event' => array(
                                    'class' => 'Mautic\\CampaignBundle\\Model\\EventModel',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.helper.core_parameters',
                                        2 => 'mautic.lead.model.lead',
                                        3 => 'mautic.campaign.model.campaign',
                                        4 => 'mautic.user.model.user',
                                        5 => 'mautic.core.model.notification',
                                        6 => 'mautic.factory',
                                    ),
                                ),
                                'mautic.campaign.model.event_log' => array(
                                    'class' => 'Mautic\\CampaignBundle\\Model\\EventLogModel',
                                    'arguments' => array(
                                        0 => 'mautic.campaign.model.event',
                                        1 => 'mautic.campaign.model.campaign',
                                    ),
                                ),
                            ),
                        ),
                        'parameters' => array(
                            'campaign_time_wait_on_event_false' => 'PT1H',
                        ),
                    ),
                ),
                'MauticCategoryBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Category',
                    'bundle' => 'CategoryBundle',
                    'namespace' => 'Mautic\\CategoryBundle',
                    'symfonyBundleName' => 'MauticCategoryBundle',
                    'bundleClass' => 'Mautic\\CategoryBundle\\MauticCategoryBundle',
                    'permissionClasses' => array(
                        'category' => '\\Mautic\\CategoryBundle\\Security\\Permissions\\CategoryPermissions',
                    ),
                    'relative' => 'app/bundles/CategoryBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/CategoryBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_category_index' => array(
                                    'path' => '/categories/{bundle}/{page}',
                                    'controller' => 'MauticCategoryBundle:Category:index',
                                    'defaults' => array(
                                        'bundle' => 'category',
                                    ),
                                ),
                                'mautic_category_action' => array(
                                    'path' => '/categories/{bundle}/{objectAction}/{objectId}',
                                    'controller' => 'MauticCategoryBundle:Category:executeCategory',
                                    'defaults' => array(
                                        'bundle' => 'category',
                                    ),
                                ),
                            ),
                            'api' => array(
                                'mautic_api_categoriesstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'categories',
                                    'path' => '/categories',
                                    'controller' => 'MauticCategoryBundle:Api\\CategoryApi',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'admin' => array(
                                'mautic.category.menu.index' => array(
                                    'route' => 'mautic_category_index',
                                    'access' => 'category:categories:view',
                                    'iconClass' => 'fa-folder',
                                    'id' => 'mautic_category_index',
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.category.subscriber' => array(
                                    'class' => 'Mautic\\CategoryBundle\\EventListener\\CategorySubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.bundle',
                                        1 => 'mautic.helper.ip_lookup',
                                        2 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.category' => array(
                                    'class' => 'Mautic\\CategoryBundle\\Form\\Type\\CategoryListType',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                        1 => 'translator',
                                        2 => 'mautic.category.model.category',
                                        3 => 'router',
                                    ),
                                    'alias' => 'category',
                                ),
                                'mautic.form.type.category_form' => array(
                                    'class' => 'Mautic\\CategoryBundle\\Form\\Type\\CategoryType',
                                    'alias' => 'category_form',
                                    'arguments' => array(
                                        0 => 'translator',
                                        1 => 'session',
                                    ),
                                ),
                                'mautic.form.type.category_bundles_form' => array(
                                    'class' => 'Mautic\\CategoryBundle\\Form\\Type\\CategoryBundlesType',
                                    'arguments' => array(
                                        0 => 'event_dispatcher',
                                    ),
                                    'alias' => 'category_bundles_form',
                                ),
                            ),
                            'models' => array(
                                'mautic.category.model.category' => array(
                                    'class' => 'Mautic\\CategoryBundle\\Model\\CategoryModel',
                                    'arguments' => array(
                                        0 => 'request_stack',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticChannelBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Channel',
                    'bundle' => 'ChannelBundle',
                    'namespace' => 'Mautic\\ChannelBundle',
                    'symfonyBundleName' => 'MauticChannelBundle',
                    'bundleClass' => 'Mautic\\ChannelBundle\\MauticChannelBundle',
                    'permissionClasses' => array(
                        'channel' => '\\Mautic\\ChannelBundle\\Security\\Permissions\\ChannelPermissions',
                    ),
                    'relative' => 'app/bundles/ChannelBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/ChannelBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_message_index' => array(
                                    'path' => '/messages/{page}',
                                    'controller' => 'MauticChannelBundle:Message:index',
                                ),
                                'mautic_message_contacts' => array(
                                    'path' => '/messages/contacts/{objectId}/{channel}/{page}',
                                    'controller' => 'MauticChannelBundle:Message:contacts',
                                ),
                                'mautic_message_action' => array(
                                    'path' => '/messages/{objectAction}/{objectId}',
                                    'controller' => 'MauticChannelBundle:Message:execute',
                                ),
                            ),
                            'api' => array(
                                'mautic_api_messagetandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'messages',
                                    'path' => '/messages',
                                    'controller' => 'MauticChannelBundle:Api\\MessageApi',
                                ),
                            ),
                            'public' => array(

                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'mautic.channel.messages' => array(
                                    'route' => 'mautic_message_index',
                                    'access' => array(
                                        0 => 'channel:messages:viewown',
                                        1 => 'channel:messages:viewother',
                                    ),
                                    'parent' => 'mautic.core.channels',
                                    'priority' => 110,
                                ),
                            ),
                            'admin' => array(

                            ),
                            'profile' => array(

                            ),
                            'extra' => array(

                            ),
                        ),
                        'categories' => array(
                            0 => 'messages',
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.channel.campaignbundle.subscriber' => array(
                                    'class' => 'Mautic\\ChannelBundle\\EventListener\\CampaignSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.channel.model.message',
                                        1 => 'mautic.campaign.model.campaign',
                                        2 => 'mautic.campaign.model.event',
                                    ),
                                ),
                                'mautic.channel.channelbundle.subscriber' => array(
                                    'class' => 'Mautic\\ChannelBundle\\EventListener\\MessageSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'Mautic\\ChannelBundle\\Form\\Type\\MessageType' => array(
                                    'class' => 'Mautic\\ChannelBundle\\Form\\Type\\MessageType',
                                    'methodCalls' => array(
                                        'setSecurity' => array(
                                            0 => 'mautic.security',
                                        ),
                                    ),
                                    'arguments' => array(
                                        0 => 'mautic.channel.model.message',
                                    ),
                                ),
                                'mautic.form.type.message_list' => array(
                                    'class' => 'Mautic\\ChannelBundle\\Form\\Type\\MessageListType',
                                    'alias' => 'message_list',
                                ),
                                'mautic.form.type.message_send' => array(
                                    'class' => 'Mautic\\ChannelBundle\\Form\\Type\\MessageSendType',
                                    'arguments' => array(
                                        0 => 'router',
                                        1 => 'mautic.channel.model.message',
                                    ),
                                    'alias' => 'message_send',
                                ),
                            ),
                            'helpers' => array(
                                'mautic.channel.helper.channel_list' => array(
                                    'class' => 'Mautic\\ChannelBundle\\Helper\\ChannelListHelper',
                                    'arguments' => array(
                                        0 => 'event_dispatcher',
                                        1 => 'translator',
                                    ),
                                    'alias' => 'channel',
                                ),
                            ),
                            'models' => array(
                                'mautic.channel.model.message' => array(
                                    'class' => 'Mautic\\ChannelBundle\\Model\\MessageModel',
                                    'arguments' => array(
                                        0 => 'mautic.channel.helper.channel_list',
                                        1 => 'mautic.campaign.model.campaign',
                                    ),
                                ),
                                'mautic.channel.model.queue' => array(
                                    'class' => 'Mautic\\ChannelBundle\\Model\\MessageQueueModel',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.lead',
                                        1 => 'mautic.lead.model.company',
                                        2 => 'mautic.helper.core_parameters',
                                    ),
                                ),
                            ),
                        ),
                        'parameters' => array(

                        ),
                    ),
                ),
                'MauticConfigBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Config',
                    'bundle' => 'ConfigBundle',
                    'namespace' => 'Mautic\\ConfigBundle',
                    'symfonyBundleName' => 'MauticConfigBundle',
                    'bundleClass' => 'Mautic\\ConfigBundle\\MauticConfigBundle',
                    'permissionClasses' => array(

                    ),
                    'relative' => 'app/bundles/ConfigBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/ConfigBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_config_action' => array(
                                    'path' => '/config/{objectAction}/{objectId}',
                                    'controller' => 'MauticConfigBundle:Config:execute',
                                ),
                                'mautic_sysinfo_index' => array(
                                    'path' => '/sysinfo',
                                    'controller' => 'MauticConfigBundle:Sysinfo:index',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'admin' => array(
                                'mautic.config.menu.index' => array(
                                    'route' => 'mautic_config_action',
                                    'routeParameters' => array(
                                        'objectAction' => 'edit',
                                    ),
                                    'iconClass' => 'fa-cogs',
                                    'id' => 'mautic_config_index',
                                    'access' => 'admin',
                                ),
                                'mautic.sysinfo.menu.index' => array(
                                    'route' => 'mautic_sysinfo_index',
                                    'iconClass' => 'fa-life-ring',
                                    'id' => 'mautic_sysinfo_index',
                                    'access' => 'admin',
                                    'checks' => array(
                                        'parameters' => array(
                                            'sysinfo_disabled' => false,
                                        ),
                                    ),
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.config.subscriber' => array(
                                    'class' => 'Mautic\\ConfigBundle\\EventListener\\ConfigSubscriber',
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.config' => array(
                                    'class' => 'Mautic\\ConfigBundle\\Form\\Type\\ConfigType',
                                    'arguments' => 'translator',
                                    'alias' => 'config',
                                ),
                            ),
                            'models' => array(
                                'mautic.config.model.config' => array(
                                    'class' => 'Mautic\\ConfigBundle\\Model\\ConfigModel',
                                ),
                                'mautic.config.model.sysinfo' => array(
                                    'class' => 'Mautic\\ConfigBundle\\Model\\SysinfoModel',
                                    'arguments' => array(
                                        0 => 'mautic.helper.paths',
                                        1 => 'mautic.helper.core_parameters',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticDashboardBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Dashboard',
                    'bundle' => 'DashboardBundle',
                    'namespace' => 'Mautic\\DashboardBundle',
                    'symfonyBundleName' => 'MauticDashboardBundle',
                    'bundleClass' => 'Mautic\\DashboardBundle\\MauticDashboardBundle',
                    'permissionClasses' => array(

                    ),
                    'relative' => 'app/bundles/DashboardBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/DashboardBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_dashboard_index' => array(
                                    'path' => '/dashboard',
                                    'controller' => 'MauticDashboardBundle:Dashboard:index',
                                ),
                                'mautic_dashboard_action' => array(
                                    'path' => '/dashboard/{objectAction}/{objectId}',
                                    'controller' => 'MauticDashboardBundle:Dashboard:execute',
                                ),
                            ),
                            'api' => array(
                                'mautic_widget_types' => array(
                                    'path' => '/data',
                                    'controller' => 'MauticDashboardBundle:Api\\WidgetApi:getTypes',
                                ),
                                'mautic_widget_data' => array(
                                    'path' => '/data/{type}',
                                    'controller' => 'MauticDashboardBundle:Api\\WidgetApi:getData',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'priority' => 100,
                                'items' => array(
                                    'mautic.dashboard.menu.index' => array(
                                        'route' => 'mautic_dashboard_index',
                                        'iconClass' => 'fa-th-large',
                                    ),
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(

                            ),
                            'forms' => array(
                                'mautic.dashboard.form.type.widget' => array(
                                    'class' => 'Mautic\\DashboardBundle\\Form\\Type\\WidgetType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'widget',
                                ),
                                'mautic.dashboard.form.uplload' => array(
                                    'class' => 'Mautic\\DashboardBundle\\Form\\Type\\UploadType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'dashboard_upload',
                                ),
                                'mautic.dashboard.form.filter' => array(
                                    'class' => 'Mautic\\DashboardBundle\\Form\\Type\\FilterType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'dashboard_filter',
                                ),
                            ),
                            'models' => array(
                                'mautic.dashboard.model.dashboard' => array(
                                    'class' => 'Mautic\\DashboardBundle\\Model\\DashboardModel',
                                    'arguments' => array(
                                        0 => 'mautic.helper.core_parameters',
                                        1 => 'mautic.helper.paths',
                                    ),
                                ),
                            ),
                        ),
                        'parameters' => array(
                            'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'),
                            'dashboard_import_user_dir' => NULL,
                        ),
                    ),
                ),
                'MauticDynamicContentBundle' => array(
                    'isPlugin' => false,
                    'base' => 'DynamicContent',
                    'bundle' => 'DynamicContentBundle',
                    'namespace' => 'Mautic\\DynamicContentBundle',
                    'symfonyBundleName' => 'MauticDynamicContentBundle',
                    'bundleClass' => 'Mautic\\DynamicContentBundle\\MauticDynamicContentBundle',
                    'permissionClasses' => array(
                        'dynamiccontent' => '\\Mautic\\DynamicContentBundle\\Security\\Permissions\\DynamicContentPermissions',
                    ),
                    'relative' => 'app/bundles/DynamicContentBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/DynamicContentBundle'),
                    'config' => array(
                        'menu' => array(
                            'main' => array(
                                'items' => array(
                                    'mautic.dynamicContent.dynamicContent' => array(
                                        'route' => 'mautic_dynamicContent_index',
                                        'access' => array(
                                            0 => 'dynamiccontent:dynamiccontents:viewown',
                                            1 => 'dynamiccontent:dynamiccontents:viewother',
                                        ),
                                        'parent' => 'mautic.core.components',
                                        'priority' => 90,
                                    ),
                                ),
                            ),
                        ),
                        'routes' => array(
                            'main' => array(
                                'mautic_dynamicContent_index' => array(
                                    'path' => '/dwc/{page}',
                                    'controller' => 'MauticDynamicContentBundle:DynamicContent:index',
                                ),
                                'mautic_dynamicContent_action' => array(
                                    'path' => '/dwc/{objectAction}/{objectId}',
                                    'controller' => 'MauticDynamicContentBundle:DynamicContent:execute',
                                ),
                            ),
                            'public' => array(
                                'mautic_api_dynamicContent_index' => array(
                                    'path' => '/dwc',
                                    'controller' => 'MauticDynamicContentBundle:DynamicContentApi:getEntities',
                                ),
                                'mautic_api_dynamicContent_action' => array(
                                    'path' => '/dwc/{objectAlias}',
                                    'controller' => 'MauticDynamicContentBundle:DynamicContentApi:process',
                                ),
                            ),
                            'api' => array(
                                'mautic_api_dynamicContent_standard' => array(
                                    'standard_entity' => true,
                                    'name' => 'dynamicContents',
                                    'path' => '/dynamiccontents',
                                    'controller' => 'MauticDynamicContentBundle:Api\\DynamicContentApi',
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.dynamicContent.campaignbundle.subscriber' => array(
                                    'class' => 'Mautic\\DynamicContentBundle\\EventListener\\CampaignSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.lead',
                                        1 => 'mautic.dynamicContent.model.dynamicContent',
                                        2 => 'session',
                                    ),
                                ),
                                'mautic.dynamicContent.js.subscriber' => array(
                                    'class' => 'Mautic\\DynamicContentBundle\\EventListener\\BuildJsSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.form.model.form',
                                        1 => 'templating.helper.assets',
                                    ),
                                ),
                                'mautic.dynamicContent.subscriber' => array(
                                    'class' => 'Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.page.model.trackable',
                                        1 => 'mautic.page.helper.token',
                                        2 => 'mautic.asset.helper.token',
                                        3 => 'mautic.form.helper.token',
                                        4 => 'mautic.focus.helper.token',
                                        5 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                                'mautic.dynamicContent.subscriber.channel' => array(
                                    'class' => 'Mautic\\DynamicContentBundle\\EventListener\\ChannelSubscriber',
                                ),
                                'mautic.dynamicContent.stats.subscriber' => array(
                                    'class' => 'Mautic\\DynamicContentBundle\\EventListener\\StatsSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.dwc' => array(
                                    'class' => 'Mautic\\DynamicContentBundle\\Form\\Type\\DynamicContentType',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                    'alias' => 'dwc',
                                ),
                                'mautic.form.type.dwcsend_list' => array(
                                    'class' => 'Mautic\\DynamicContentBundle\\Form\\Type\\DynamicContentSendType',
                                    'arguments' => array(
                                        0 => 'router',
                                    ),
                                    'alias' => 'dwcsend_list',
                                ),
                                'mautic.form.type.dwcdecision_list' => array(
                                    'class' => 'Mautic\\DynamicContentBundle\\Form\\Type\\DynamicContentDecisionType',
                                    'arguments' => array(
                                        0 => 'router',
                                    ),
                                    'alias' => 'dwcdecision_list',
                                ),
                                'mautic.form.type.dwc_list' => array(
                                    'class' => 'Mautic\\DynamicContentBundle\\Form\\Type\\DynamicContentListType',
                                    'alias' => 'dwc_list',
                                ),
                            ),
                            'models' => array(
                                'mautic.dynamicContent.model.dynamicContent' => array(
                                    'class' => 'Mautic\\DynamicContentBundle\\Model\\DynamicContentModel',
                                    'arguments' => array(

                                    ),
                                ),
                            ),
                            'other' => array(
                                'mautic.helper.dynamicContent' => array(
                                    'class' => 'Mautic\\DynamicContentBundle\\Helper\\DynamicContentHelper',
                                    'arguments' => array(
                                        0 => 'mautic.dynamicContent.model.dynamicContent',
                                        1 => 'mautic.campaign.model.event',
                                        2 => 'event_dispatcher',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticEmailBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Email',
                    'bundle' => 'EmailBundle',
                    'namespace' => 'Mautic\\EmailBundle',
                    'symfonyBundleName' => 'MauticEmailBundle',
                    'bundleClass' => 'Mautic\\EmailBundle\\MauticEmailBundle',
                    'permissionClasses' => array(
                        'email' => '\\Mautic\\EmailBundle\\Security\\Permissions\\EmailPermissions',
                    ),
                    'relative' => 'app/bundles/EmailBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/EmailBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_email_index' => array(
                                    'path' => '/emails/{page}',
                                    'controller' => 'MauticEmailBundle:Email:index',
                                ),
                                'mautic_email_action' => array(
                                    'path' => '/emails/{objectAction}/{objectId}',
                                    'controller' => 'MauticEmailBundle:Email:execute',
                                ),
                            ),
                            'api' => array(
                                'mautic_api_emailstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'emails',
                                    'path' => '/emails',
                                    'controller' => 'MauticEmailBundle:Api\\EmailApi',
                                ),
                                'mautic_api_sendemail' => array(
                                    'path' => '/emails/{id}/send',
                                    'controller' => 'MauticEmailBundle:Api\\EmailApi:send',
                                    'method' => 'POST',
                                ),
                                'mautic_api_sendcontactemail' => array(
                                    'path' => '/emails/{id}/contact/{leadId}/send',
                                    'controller' => 'MauticEmailBundle:Api\\EmailApi:sendLead',
                                    'method' => 'POST',
                                ),
                                'bc_mautic_api_sendcontactemail' => array(
                                    'path' => '/emails/{id}/send/contact/{leadId}',
                                    'controller' => 'MauticEmailBundle:Api\\EmailApi:sendLead',
                                    'method' => 'POST',
                                ),
                            ),
                            'public' => array(
                                'mautic_plugin_tracker' => array(
                                    'path' => '/plugin/{integration}/tracking.gif',
                                    'controller' => 'MauticEmailBundle:Public:pluginTrackingGif',
                                    'requirements' => array(
                                        'integration' => '.+',
                                    ),
                                ),
                                'mautic_email_tracker' => array(
                                    'path' => '/email/{idHash}.gif',
                                    'controller' => 'MauticEmailBundle:Public:trackingImage',
                                ),
                                'mautic_email_webview' => array(
                                    'path' => '/email/view/{idHash}',
                                    'controller' => 'MauticEmailBundle:Public:index',
                                ),
                                'mautic_email_unsubscribe' => array(
                                    'path' => '/email/unsubscribe/{idHash}',
                                    'controller' => 'MauticEmailBundle:Public:unsubscribe',
                                ),
                                'mautic_email_resubscribe' => array(
                                    'path' => '/email/resubscribe/{idHash}',
                                    'controller' => 'MauticEmailBundle:Public:resubscribe',
                                ),
                                'mautic_mailer_transport_callback' => array(
                                    'path' => '/mailer/{transport}/callback',
                                    'controller' => 'MauticEmailBundle:Public:mailerCallback',
                                ),
                                'mautic_email_preview' => array(
                                    'path' => '/email/preview/{objectId}',
                                    'controller' => 'MauticEmailBundle:Public:preview',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'items' => array(
                                    'mautic.email.emails' => array(
                                        'route' => 'mautic_email_index',
                                        'access' => array(
                                            0 => 'email:emails:viewown',
                                            1 => 'email:emails:viewother',
                                        ),
                                        'parent' => 'mautic.core.channels',
                                        'priority' => 100,
                                    ),
                                ),
                            ),
                        ),
                        'categories' => array(
                            'email' => NULL,
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.email.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\EmailSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.core.model.auditlog',
                                        2 => 'mautic.email.model.email',
                                    ),
                                ),
                                'mautic.emailbuilder.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\BuilderSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.core_parameters',
                                        1 => 'mautic.email.model.email',
                                        2 => 'mautic.page.model.trackable',
                                        3 => 'mautic.page.model.redirect',
                                    ),
                                ),
                                'mautic.emailtoken.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\TokenSubscriber',
                                ),
                                'mautic.email.campaignbundle.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\CampaignSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.lead',
                                        1 => 'mautic.email.model.email',
                                        2 => 'mautic.campaign.model.event',
                                        3 => 'mautic.channel.model.queue',
                                    ),
                                ),
                                'mautic.email.formbundle.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\FormSubscriber',
                                ),
                                'mautic.email.reportbundle.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\ReportSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.dbal.default_connection',
                                    ),
                                ),
                                'mautic.email.leadbundle.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\LeadSubscriber',
                                ),
                                'mautic.email.pointbundle.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\PointSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.point.model.point',
                                    ),
                                ),
                                'mautic.email.calendarbundle.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\CalendarSubscriber',
                                ),
                                'mautic.email.search.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\SearchSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.user',
                                        1 => 'mautic.email.model.email',
                                    ),
                                ),
                                'mautic.email.webhook.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\WebhookSubscriber',
                                    'methodCalls' => array(
                                        'setWebhookModel' => array(
                                            0 => 'mautic.webhook.model.webhook',
                                        ),
                                    ),
                                ),
                                'mautic.email.configbundle.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\ConfigSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.core_parameters',
                                    ),
                                ),
                                'mautic.email.pagebundle.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\PageSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.email.model.email',
                                    ),
                                ),
                                'mautic.email.dashboard.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\DashboardSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.email.model.email',
                                    ),
                                ),
                                'mautic.email.broadcast.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\BroadcastSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.email.model.email',
                                        1 => 'doctrine.orm.entity_manager',
                                        2 => 'translator',
                                        3 => 'mautic.lead.model.lead',
                                        4 => 'mautic.email.model.email',
                                    ),
                                ),
                                'mautic.email.messagequeue.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\MessageQueueSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.email.model.email',
                                    ),
                                ),
                                'mautic.email.channel.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\ChannelSubscriber',
                                ),
                                'mautic.email.stats.subscriber' => array(
                                    'class' => 'Mautic\\EmailBundle\\EventListener\\StatsSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.email' => array(
                                    'class' => 'Mautic\\EmailBundle\\Form\\Type\\EmailType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'emailform',
                                ),
                                'mautic.form.type.emailvariant' => array(
                                    'class' => 'Mautic\\EmailBundle\\Form\\Type\\VariantType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'emailvariant',
                                ),
                                'mautic.form.type.email_list' => array(
                                    'class' => 'Mautic\\EmailBundle\\Form\\Type\\EmailListType',
                                    'alias' => 'email_list',
                                ),
                                'mautic.form.type.emailopen_list' => array(
                                    'class' => 'Mautic\\EmailBundle\\Form\\Type\\EmailOpenType',
                                    'alias' => 'emailopen_list',
                                ),
                                'mautic.form.type.emailsend_list' => array(
                                    'class' => 'Mautic\\EmailBundle\\Form\\Type\\EmailSendType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'emailsend_list',
                                ),
                                'mautic.form.type.formsubmit_sendemail_admin' => array(
                                    'class' => 'Mautic\\EmailBundle\\Form\\Type\\FormSubmitActionUserEmailType',
                                    'alias' => 'email_submitaction_useremail',
                                ),
                                'mautic.email.type.email_abtest_settings' => array(
                                    'class' => 'Mautic\\EmailBundle\\Form\\Type\\AbTestPropertiesType',
                                    'alias' => 'email_abtest_settings',
                                ),
                                'mautic.email.type.batch_send' => array(
                                    'class' => 'Mautic\\EmailBundle\\Form\\Type\\BatchSendType',
                                    'alias' => 'batch_send',
                                ),
                                'mautic.form.type.emailconfig' => array(
                                    'class' => 'Mautic\\EmailBundle\\Form\\Type\\ConfigType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'emailconfig',
                                ),
                                'mautic.form.type.coreconfig_monitored_mailboxes' => array(
                                    'class' => 'Mautic\\EmailBundle\\Form\\Type\\ConfigMonitoredMailboxesType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'monitored_mailboxes',
                                ),
                                'mautic.form.type.coreconfig_monitored_email' => array(
                                    'class' => 'Mautic\\EmailBundle\\Form\\Type\\ConfigMonitoredEmailType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'monitored_email',
                                ),
                                'mautic.form.type.email_dashboard_emails_in_time_widget' => array(
                                    'class' => 'Mautic\\EmailBundle\\Form\\Type\\DashboardEmailsInTimeWidgetType',
                                    'alias' => 'email_dashboard_emails_in_time_widget',
                                ),
                            ),
                            'other' => array(
                                'mautic.validator.leadlistaccess' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Validator\\Constraints\\LeadListAccessValidator',
                                    'arguments' => 'mautic.factory',
                                    'tag' => 'validator.constraint_validator',
                                    'alias' => 'leadlist_access',
                                ),
                                'mautic.helper.mailbox' => array(
                                    'class' => 'Mautic\\EmailBundle\\MonitoredEmail\\Mailbox',
                                    'arguments' => array(
                                        0 => 'mautic.helper.core_parameters',
                                        1 => 'mautic.helper.paths',
                                    ),
                                ),
                                'mautic.helper.message' => array(
                                    'class' => 'Mautic\\EmailBundle\\Helper\\MessageHelper',
                                    'arguments' => 'mautic.factory',
                                ),
                                'mautic.helper.mailer' => array(
                                    'class' => 'Mautic\\EmailBundle\\Helper\\MailHelper',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                        1 => 'mailer',
                                    ),
                                ),
                                'mautic.transport.amazon' => array(
                                    'class' => 'Mautic\\EmailBundle\\Swiftmailer\\Transport\\AmazonTransport',
                                    'serviceAlias' => 'swiftmailer.mailer.transport.%s',
                                    'arguments' => array(
                                        0 => '%mautic.mailer_amazon_region%',
                                        1 => 'mautic.http.connector',
                                    ),
                                    'methodCalls' => array(
                                        'setUsername' => array(
                                            0 => '%mautic.mailer_user%',
                                        ),
                                        'setPassword' => array(
                                            0 => '%mautic.mailer_password%',
                                        ),
                                    ),
                                ),
                                'mautic.transport.mandrill' => array(
                                    'class' => 'Mautic\\EmailBundle\\Swiftmailer\\Transport\\MandrillTransport',
                                    'serviceAlias' => 'swiftmailer.mailer.transport.%s',
                                    'methodCalls' => array(
                                        'setUsername' => array(
                                            0 => '%mautic.mailer_user%',
                                        ),
                                        'setPassword' => array(
                                            0 => '%mautic.mailer_password%',
                                        ),
                                        'setMauticFactory' => array(
                                            0 => 'mautic.factory',
                                        ),
                                    ),
                                ),
                                'mautic.transport.mailjet' => array(
                                    'class' => 'Mautic\\EmailBundle\\Swiftmailer\\Transport\\MailjetTransport',
                                    'serviceAlias' => 'swiftmailer.mailer.transport.%s',
                                    'arguments' => array(
                                        0 => '',
                                        1 => '',
                                        2 => '',
                                        3 => '%mautic.mailer_mailjet_sandbox%',
                                        4 => '%mautic.mailer_mailjet_sandbox_default_mail%',
                                    ),
                                    'methodCalls' => array(
                                        'setUsername' => array(
                                            0 => '%mautic.mailer_user%',
                                        ),
                                        'setPassword' => array(
                                            0 => '%mautic.mailer_password%',
                                        ),
                                    ),
                                ),
                                'mautic.transport.sendgrid' => array(
                                    'class' => 'Mautic\\EmailBundle\\Swiftmailer\\Transport\\SendgridTransport',
                                    'serviceAlias' => 'swiftmailer.mailer.transport.%s',
                                    'methodCalls' => array(
                                        'setUsername' => array(
                                            0 => '%mautic.mailer_user%',
                                        ),
                                        'setPassword' => array(
                                            0 => '%mautic.mailer_password%',
                                        ),
                                    ),
                                ),
                                'mautic.transport.elasticemail' => array(
                                    'class' => 'Mautic\\EmailBundle\\Swiftmailer\\Transport\\ElasticemailTransport',
                                    'serviceAlias' => 'swiftmailer.mailer.transport.%s',
                                    'methodCalls' => array(
                                        'setUsername' => array(
                                            0 => '%mautic.mailer_user%',
                                        ),
                                        'setPassword' => array(
                                            0 => '%mautic.mailer_password%',
                                        ),
                                    ),
                                ),
                                'mautic.transport.postmark' => array(
                                    'class' => 'Mautic\\EmailBundle\\Swiftmailer\\Transport\\PostmarkTransport',
                                    'serviceAlias' => 'swiftmailer.mailer.transport.%s',
                                    'methodCalls' => array(
                                        'setUsername' => array(
                                            0 => '%mautic.mailer_user%',
                                        ),
                                        'setPassword' => array(
                                            0 => '%mautic.mailer_password%',
                                        ),
                                    ),
                                ),
                                'mautic.transport.sparkpost' => array(
                                    'class' => 'Mautic\\EmailBundle\\Swiftmailer\\Transport\\SparkpostTransport',
                                    'serviceAlias' => 'swiftmailer.mailer.transport.%s',
                                    'arguments' => array(
                                        0 => '%mautic.mailer_api_key%',
                                        1 => 'translator',
                                    ),
                                    'methodCalls' => array(
                                        'setMauticFactory' => array(
                                            0 => 'mautic.factory',
                                        ),
                                    ),
                                ),
                            ),
                            'models' => array(
                                'mautic.email.model.email' => array(
                                    'class' => 'Mautic\\EmailBundle\\Model\\EmailModel',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.helper.theme',
                                        2 => 'mautic.helper.mailbox',
                                        3 => 'mautic.helper.mailer',
                                        4 => 'mautic.lead.model.lead',
                                        5 => 'mautic.lead.model.company',
                                        6 => 'mautic.page.model.trackable',
                                        7 => 'mautic.user.model.user',
                                        8 => 'mautic.channel.model.queue',
                                    ),
                                ),
                            ),
                        ),
                        'parameters' => array(
                            'mailer_api_key' => NULL,
                            'mailer_from_name' => 'Mautic',
                            'mailer_from_email' => 'email@yoursite.com',
                            'mailer_return_path' => NULL,
                            'mailer_transport' => 'mail',
                            'mailer_append_tracking_pixel' => true,
                            'mailer_convert_embed_images' => false,
                            'mailer_host' => '',
                            'mailer_port' => NULL,
                            'mailer_user' => NULL,
                            'mailer_password' => NULL,
                            'mailer_encryption' => NULL,
                            'mailer_auth_mode' => NULL,
                            'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com',
                            'mailer_spool_type' => 'memory',
                            'mailer_spool_path' => ($this->targetDirs[2].'/spool'),
                            'mailer_spool_msg_limit' => NULL,
                            'mailer_spool_time_limit' => NULL,
                            'mailer_spool_recover_timeout' => 900,
                            'mailer_spool_clear_timeout' => 1800,
                            'unsubscribe_text' => NULL,
                            'webview_text' => NULL,
                            'unsubscribe_message' => NULL,
                            'resubscribe_message' => NULL,
                            'monitored_email' => array(

                            ),
                            'mailer_is_owner' => false,
                            'default_signature_text' => NULL,
                            'email_frequency_number' => NULL,
                            'email_frequency_time' => NULL,
                            'show_contact_preferences' => false,
                            'show_contact_frequency' => false,
                            'show_contact_pause_dates' => false,
                            'show_contact_preferred_channels' => false,
                            'show_contact_categories' => false,
                            'show_contact_segments' => false,
                            'mailer_mailjet_sandbox' => false,
                            'mailer_mailjet_sandbox_default_mail' => NULL,
                        ),
                    ),
                ),
                'MauticFormBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Form',
                    'bundle' => 'FormBundle',
                    'namespace' => 'Mautic\\FormBundle',
                    'symfonyBundleName' => 'MauticFormBundle',
                    'bundleClass' => 'Mautic\\FormBundle\\MauticFormBundle',
                    'permissionClasses' => array(
                        'form' => '\\Mautic\\FormBundle\\Security\\Permissions\\FormPermissions',
                    ),
                    'relative' => 'app/bundles/FormBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/FormBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_formaction_action' => array(
                                    'path' => '/forms/action/{objectAction}/{objectId}',
                                    'controller' => 'MauticFormBundle:Action:execute',
                                ),
                                'mautic_formfield_action' => array(
                                    'path' => '/forms/field/{objectAction}/{objectId}',
                                    'controller' => 'MauticFormBundle:Field:execute',
                                ),
                                'mautic_form_index' => array(
                                    'path' => '/forms/{page}',
                                    'controller' => 'MauticFormBundle:Form:index',
                                ),
                                'mautic_form_results' => array(
                                    'path' => '/forms/results/{objectId}/{page}',
                                    'controller' => 'MauticFormBundle:Result:index',
                                ),
                                'mautic_form_export' => array(
                                    'path' => '/forms/results/{objectId}/export/{format}',
                                    'controller' => 'MauticFormBundle:Result:export',
                                    'defaults' => array(
                                        'format' => 'csv',
                                    ),
                                ),
                                'mautic_form_results_action' => array(
                                    'path' => '/forms/results/{formId}/{objectAction}/{objectId}',
                                    'controller' => 'MauticFormBundle:Result:execute',
                                    'defaults' => array(
                                        'objectId' => 0,
                                    ),
                                ),
                                'mautic_form_action' => array(
                                    'path' => '/forms/{objectAction}/{objectId}',
                                    'controller' => 'MauticFormBundle:Form:execute',
                                ),
                            ),
                            'api' => array(
                                'mautic_api_formstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'forms',
                                    'path' => '/forms',
                                    'controller' => 'MauticFormBundle:Api\\FormApi',
                                ),
                                'mautic_api_formdeletefields' => array(
                                    'path' => '/forms/{formId}/fields/delete',
                                    'controller' => 'MauticFormBundle:Api\\FormApi:deleteFields',
                                    'method' => 'DELETE',
                                ),
                                'mautic_api_formdeleteactions' => array(
                                    'path' => '/forms/{formId}/actions/delete',
                                    'controller' => 'MauticFormBundle:Api\\FormApi:deleteActions',
                                    'method' => 'DELETE',
                                ),
                            ),
                            'public' => array(
                                'mautic_form_postresults' => array(
                                    'path' => '/form/submit',
                                    'controller' => 'MauticFormBundle:Public:submit',
                                ),
                                'mautic_form_generateform' => array(
                                    'path' => '/form/generate.js',
                                    'controller' => 'MauticFormBundle:Public:generate',
                                ),
                                'mautic_form_postmessage' => array(
                                    'path' => '/form/message',
                                    'controller' => 'MauticFormBundle:Public:message',
                                ),
                                'mautic_form_preview' => array(
                                    'path' => '/form/{id}',
                                    'controller' => 'MauticFormBundle:Public:preview',
                                    'defaults' => array(
                                        'id' => '0',
                                    ),
                                ),
                                'mautic_form_embed' => array(
                                    'path' => '/form/embed/{id}',
                                    'controller' => 'MauticFormBundle:Public:embed',
                                ),
                                'mautic_form_postresults_ajax' => array(
                                    'path' => '/form/submit/ajax',
                                    'controller' => 'MauticFormBundle:Ajax:submit',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'items' => array(
                                    'mautic.form.forms' => array(
                                        'route' => 'mautic_form_index',
                                        'access' => array(
                                            0 => 'form:forms:viewown',
                                            1 => 'form:forms:viewother',
                                        ),
                                        'parent' => 'mautic.core.components',
                                        'priority' => 200,
                                    ),
                                ),
                            ),
                        ),
                        'categories' => array(
                            'form' => NULL,
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.form.subscriber' => array(
                                    'class' => 'Mautic\\FormBundle\\EventListener\\FormSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.core.model.auditlog',
                                        2 => 'mautic.helper.mailer',
                                    ),
                                ),
                                'mautic.form.pagebundle.subscriber' => array(
                                    'class' => 'Mautic\\FormBundle\\EventListener\\PageSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.form.model.form',
                                    ),
                                ),
                                'mautic.form.pointbundle.subscriber' => array(
                                    'class' => 'Mautic\\FormBundle\\EventListener\\PointSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.point.model.point',
                                    ),
                                ),
                                'mautic.form.reportbundle.subscriber' => array(
                                    'class' => 'Mautic\\FormBundle\\EventListener\\ReportSubscriber',
                                ),
                                'mautic.form.campaignbundle.subscriber' => array(
                                    'class' => 'Mautic\\FormBundle\\EventListener\\CampaignSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.form.model.form',
                                        1 => 'mautic.form.model.submission',
                                        2 => 'mautic.campaign.model.event',
                                    ),
                                ),
                                'mautic.form.calendarbundle.subscriber' => array(
                                    'class' => 'Mautic\\FormBundle\\EventListener\\CalendarSubscriber',
                                ),
                                'mautic.form.leadbundle.subscriber' => array(
                                    'class' => 'Mautic\\FormBundle\\EventListener\\LeadSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.form.model.form',
                                        1 => 'mautic.page.model.page',
                                    ),
                                ),
                                'mautic.form.emailbundle.subscriber' => array(
                                    'class' => 'Mautic\\FormBundle\\EventListener\\EmailSubscriber',
                                ),
                                'mautic.form.search.subscriber' => array(
                                    'class' => 'Mautic\\FormBundle\\EventListener\\SearchSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.user',
                                        1 => 'mautic.form.model.form',
                                    ),
                                ),
                                'mautic.form.webhook.subscriber' => array(
                                    'class' => 'Mautic\\FormBundle\\EventListener\\WebhookSubscriber',
                                    'methodCalls' => array(
                                        'setWebhookModel' => array(
                                            0 => 'mautic.webhook.model.webhook',
                                        ),
                                    ),
                                ),
                                'mautic.form.dashboard.subscriber' => array(
                                    'class' => 'Mautic\\FormBundle\\EventListener\\DashboardSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.form.model.submission',
                                        1 => 'mautic.form.model.form',
                                    ),
                                ),
                                'mautic.form.stats.subscriber' => array(
                                    'class' => 'Mautic\\FormBundle\\EventListener\\StatsSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.form' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\FormType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'mauticform',
                                ),
                                'mautic.form.type.field' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\FieldType',
                                    'alias' => 'formfield',
                                    'methodCalls' => array(
                                        'setFieldModel' => array(
                                            0 => 'mautic.form.model.field',
                                        ),
                                        'setFormModel' => array(
                                            0 => 'mautic.form.model.form',
                                        ),
                                    ),
                                ),
                                'mautic.form.type.action' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\ActionType',
                                    'alias' => 'formaction',
                                ),
                                'mautic.form.type.field_propertytext' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\FormFieldTextType',
                                    'alias' => 'formfield_text',
                                ),
                                'mautic.form.type.field_propertyplaceholder' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\FormFieldPlaceholderType',
                                    'alias' => 'formfield_placeholder',
                                ),
                                'mautic.form.type.field_propertyselect' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\FormFieldSelectType',
                                    'alias' => 'formfield_select',
                                ),
                                'mautic.form.type.field_propertycaptcha' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\FormFieldCaptchaType',
                                    'alias' => 'formfield_captcha',
                                ),
                                'muatic.form.type.field_propertypagebreak' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\FormFieldPageBreakType',
                                    'arguments' => array(
                                        0 => 'translator',
                                    ),
                                ),
                                'mautic.form.type.field_propertygroup' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\FormFieldGroupType',
                                    'alias' => 'formfield_group',
                                ),
                                'mautic.form.type.pointaction_formsubmit' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\PointActionFormSubmitType',
                                    'alias' => 'pointaction_formsubmit',
                                ),
                                'mautic.form.type.form_list' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\FormListType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'form_list',
                                ),
                                'mautic.form.type.campaignevent_formsubmit' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\CampaignEventFormSubmitType',
                                    'alias' => 'campaignevent_formsubmit',
                                ),
                                'mautic.form.type.campaignevent_form_field_value' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\CampaignEventFormFieldValueType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'campaignevent_form_field_value',
                                ),
                                'mautic.form.type.form_submitaction_sendemail' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\SubmitActionEmailType',
                                    'arguments' => 'translator',
                                    'alias' => 'form_submitaction_sendemail',
                                    'methodCalls' => array(
                                        'setFieldModel' => array(
                                            0 => 'mautic.form.model.field',
                                        ),
                                        'setFormModel' => array(
                                            0 => 'mautic.form.model.form',
                                        ),
                                    ),
                                ),
                                'mautic.form.type.form_submitaction_repost' => array(
                                    'class' => 'Mautic\\FormBundle\\Form\\Type\\SubmitActionRepostType',
                                    'methodCalls' => array(
                                        'setFieldModel' => array(
                                            0 => 'mautic.form.model.field',
                                        ),
                                        'setFormModel' => array(
                                            0 => 'mautic.form.model.form',
                                        ),
                                    ),
                                ),
                            ),
                            'models' => array(
                                'mautic.form.model.action' => array(
                                    'class' => 'Mautic\\FormBundle\\Model\\ActionModel',
                                ),
                                'mautic.form.model.field' => array(
                                    'class' => 'Mautic\\FormBundle\\Model\\FieldModel',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.field',
                                    ),
                                ),
                                'mautic.form.model.form' => array(
                                    'class' => 'Mautic\\FormBundle\\Model\\FormModel',
                                    'arguments' => array(
                                        0 => 'request_stack',
                                        1 => 'mautic.helper.templating',
                                        2 => 'mautic.helper.theme',
                                        3 => 'mautic.schema.helper.factory',
                                        4 => 'mautic.form.model.action',
                                        5 => 'mautic.form.model.field',
                                        6 => 'mautic.lead.model.lead',
                                        7 => 'mautic.helper.form.field_helper',
                                        8 => 'mautic.lead.model.field',
                                    ),
                                ),
                                'mautic.form.model.submission' => array(
                                    'class' => 'Mautic\\FormBundle\\Model\\SubmissionModel',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.helper.templating',
                                        2 => 'mautic.form.model.form',
                                        3 => 'mautic.page.model.page',
                                        4 => 'mautic.lead.model.lead',
                                        5 => 'mautic.campaign.model.campaign',
                                        6 => 'mautic.lead.model.field',
                                        7 => 'mautic.lead.model.company',
                                        8 => 'mautic.helper.form.field_helper',
                                    ),
                                ),
                            ),
                            'other' => array(
                                'mautic.helper.form.field_helper' => array(
                                    'class' => 'Mautic\\FormBundle\\Helper\\FormFieldHelper',
                                    'arguments' => array(
                                        0 => 'translator',
                                        1 => 'validator',
                                    ),
                                ),
                                'mautic.form.helper.token' => array(
                                    'class' => 'Mautic\\FormBundle\\Helper\\TokenHelper',
                                    'arguments' => array(
                                        0 => 'mautic.form.model.form',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticInstallBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Install',
                    'bundle' => 'InstallBundle',
                    'namespace' => 'Mautic\\InstallBundle',
                    'symfonyBundleName' => 'MauticInstallBundle',
                    'bundleClass' => 'Mautic\\InstallBundle\\MauticInstallBundle',
                    'permissionClasses' => array(

                    ),
                    'relative' => 'app/bundles/InstallBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/InstallBundle'),
                    'config' => array(
                        'routes' => array(
                            'public' => array(
                                'mautic_installer_home' => array(
                                    'path' => '/installer',
                                    'controller' => 'MauticInstallBundle:Install:step',
                                ),
                                'mautic_installer_remove_slash' => array(
                                    'path' => '/installer/',
                                    'controller' => 'MauticCoreBundle:Common:removeTrailingSlash',
                                ),
                                'mautic_installer_step' => array(
                                    'path' => '/installer/step/{index}',
                                    'controller' => 'MauticInstallBundle:Install:step',
                                ),
                                'mautic_installer_final' => array(
                                    'path' => '/installer/final',
                                    'controller' => 'MauticInstallBundle:Install:final',
                                ),
                                'mautic_installer_catchcall' => array(
                                    'path' => '/installer/{noerror}',
                                    'controller' => 'MauticInstallBundle:Install:step',
                                    'requirements' => array(
                                        'noerror' => '^(?).+',
                                    ),
                                ),
                            ),
                        ),
                        'services' => array(
                            'other' => array(
                                'mautic.install.configurator.step.check' => array(
                                    'class' => 'Mautic\\InstallBundle\\Configurator\\Step\\CheckStep',
                                    'arguments' => array(
                                        0 => 'mautic.configurator',
                                        1 => '%kernel.root_dir%',
                                        2 => 'request_stack',
                                    ),
                                    'tag' => 'mautic.configurator.step',
                                    'tagArguments' => array(
                                        'priority' => '0',
                                    ),
                                ),
                                'mautic.install.configurator.step.doctrine' => array(
                                    'class' => 'Mautic\\InstallBundle\\Configurator\\Step\\DoctrineStep',
                                    'arguments' => array(
                                        0 => 'mautic.configurator',
                                    ),
                                    'tag' => 'mautic.configurator.step',
                                    'tagArguments' => array(
                                        'priority' => '1',
                                    ),
                                ),
                                'mautic.install.configurator.step.email' => array(
                                    'class' => 'Mautic\\InstallBundle\\Configurator\\Step\\EmailStep',
                                    'arguments' => array(
                                        0 => 'session',
                                    ),
                                    'tag' => 'mautic.configurator.step',
                                    'tagArguments' => array(
                                        'priority' => '3',
                                    ),
                                ),
                                'mautic.install.configurator.step.user' => array(
                                    'class' => 'Mautic\\InstallBundle\\Configurator\\Step\\UserStep',
                                    'arguments' => array(
                                        0 => 'session',
                                    ),
                                    'tag' => 'mautic.configurator.step',
                                    'tagArguments' => array(
                                        'priority' => '2',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticLeadBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Lead',
                    'bundle' => 'LeadBundle',
                    'namespace' => 'Mautic\\LeadBundle',
                    'symfonyBundleName' => 'MauticLeadBundle',
                    'bundleClass' => 'Mautic\\LeadBundle\\MauticLeadBundle',
                    'permissionClasses' => array(
                        'lead' => '\\Mautic\\LeadBundle\\Security\\Permissions\\LeadPermissions',
                    ),
                    'relative' => 'app/bundles/LeadBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/LeadBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_plugin_timeline_index' => array(
                                    'path' => '/plugin/{integration}/timeline/{page}',
                                    'controller' => 'MauticLeadBundle:Timeline:pluginIndex',
                                    'requirements' => array(
                                        'integration' => '.+',
                                    ),
                                ),
                                'mautic_plugin_timeline_view' => array(
                                    'path' => '/plugin/{integration}/timeline/view/{leadId}/{page}',
                                    'controller' => 'MauticLeadBundle:Timeline:pluginView',
                                    'requirements' => array(
                                        'integration' => '.+',
                                        'leadId' => '\\d+',
                                    ),
                                ),
                                'mautic_segment_index' => array(
                                    'path' => '/segments/{page}',
                                    'controller' => 'MauticLeadBundle:List:index',
                                ),
                                'mautic_segment_action' => array(
                                    'path' => '/segments/{objectAction}/{objectId}',
                                    'controller' => 'MauticLeadBundle:List:execute',
                                ),
                                'mautic_contactfield_index' => array(
                                    'path' => '/contacts/fields/{page}',
                                    'controller' => 'MauticLeadBundle:Field:index',
                                ),
                                'mautic_contactfield_action' => array(
                                    'path' => '/contacts/fields/{objectAction}/{objectId}',
                                    'controller' => 'MauticLeadBundle:Field:execute',
                                ),
                                'mautic_contact_index' => array(
                                    'path' => '/contacts/{page}',
                                    'controller' => 'MauticLeadBundle:Lead:index',
                                ),
                                'mautic_contactnote_index' => array(
                                    'path' => '/contacts/notes/{leadId}/{page}',
                                    'controller' => 'MauticLeadBundle:Note:index',
                                    'defaults' => array(
                                        'leadId' => 0,
                                    ),
                                    'requirements' => array(
                                        'leadId' => '\\d+',
                                    ),
                                ),
                                'mautic_contactnote_action' => array(
                                    'path' => '/contacts/notes/{leadId}/{objectAction}/{objectId}',
                                    'controller' => 'MauticLeadBundle:Note:executeNote',
                                    'requirements' => array(
                                        'leadId' => '\\d+',
                                    ),
                                ),
                                'mautic_contacttimeline_action' => array(
                                    'path' => '/contacts/timeline/{leadId}/{page}',
                                    'controller' => 'MauticLeadBundle:Timeline:index',
                                    'requirements' => array(
                                        'leadId' => '\\d+',
                                    ),
                                ),
                                'mautic_contact_timeline_export_action' => array(
                                    'path' => '/contacts/timeline/batchExport/{leadId}',
                                    'controller' => 'MauticLeadBundle:Timeline:batchExport',
                                    'requirements' => array(
                                        'leadId' => '\\d+',
                                    ),
                                ),
                                'mautic_contact_action' => array(
                                    'path' => '/contacts/{objectAction}/{objectId}',
                                    'controller' => 'MauticLeadBundle:Lead:execute',
                                ),
                                'mautic_company_index' => array(
                                    'path' => '/companies/{page}',
                                    'controller' => 'MauticLeadBundle:Company:index',
                                ),
                                'mautic_company_action' => array(
                                    'path' => '/companies/{objectAction}/{objectId}',
                                    'controller' => 'MauticLeadBundle:Company:execute',
                                ),
                            ),
                            'api' => array(
                                'mautic_api_contactsstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'contacts',
                                    'path' => '/contacts',
                                    'controller' => 'MauticLeadBundle:Api\\LeadApi',
                                ),
                                'mautic_api_dncaddcontact' => array(
                                    'path' => '/contacts/{id}/dnc/{channel}/add',
                                    'controller' => 'MauticLeadBundle:Api\\LeadApi:addDnc',
                                    'method' => 'POST',
                                    'defaults' => array(
                                        'channel' => 'email',
                                    ),
                                ),
                                'mautic_api_dncremovecontact' => array(
                                    'path' => '/contacts/{id}/dnc/{channel}/remove',
                                    'controller' => 'MauticLeadBundle:Api\\LeadApi:removeDnc',
                                    'method' => 'POST',
                                ),
                                'mautic_api_getcontactevents' => array(
                                    'path' => '/contacts/{id}/events',
                                    'controller' => 'MauticLeadBundle:Api\\LeadApi:getEvents',
                                ),
                                'mautic_api_getcontactnotes' => array(
                                    'path' => '/contacts/{id}/notes',
                                    'controller' => 'MauticLeadBundle:Api\\LeadApi:getNotes',
                                ),
                                'mautic_api_getcontactdevices' => array(
                                    'path' => '/contacts/{id}/devices',
                                    'controller' => 'MauticLeadBundle:Api\\LeadApi:getDevices',
                                ),
                                'mautic_api_getcontactcampaigns' => array(
                                    'path' => '/contacts/{id}/campaigns',
                                    'controller' => 'MauticLeadBundle:Api\\LeadApi:getCampaigns',
                                ),
                                'mautic_api_getcontactssegments' => array(
                                    'path' => '/contacts/{id}/segments',
                                    'controller' => 'MauticLeadBundle:Api\\LeadApi:getLists',
                                ),
                                'mautic_api_getcontactscompanies' => array(
                                    'path' => '/contacts/{id}/companies',
                                    'controller' => 'MauticLeadBundle:Api\\LeadApi:getCompanies',
                                ),
                                'mautic_api_getcontactowners' => array(
                                    'path' => '/contacts/list/owners',
                                    'controller' => 'MauticLeadBundle:Api\\LeadApi:getOwners',
                                ),
                                'mautic_api_getcontactfields' => array(
                                    'path' => '/contacts/list/fields',
                                    'controller' => 'MauticLeadBundle:Api\\LeadApi:getFields',
                                ),
                                'mautic_api_getcontactsegments' => array(
                                    'path' => '/contacts/list/segments',
                                    'controller' => 'MauticLeadBundle:Api\\ListApi:getLists',
                                ),
                                'mautic_api_segmentsstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'lists',
                                    'path' => '/segments',
                                    'controller' => 'MauticLeadBundle:Api\\ListApi',
                                ),
                                'mautic_api_segmentaddcontact' => array(
                                    'path' => '/segments/{id}/contact/{leadId}/add',
                                    'controller' => 'MauticLeadBundle:Api\\ListApi:addLead',
                                    'method' => 'POST',
                                ),
                                'mautic_api_segmentremovecontact' => array(
                                    'path' => '/segments/{id}/contact/{leadId}/remove',
                                    'controller' => 'MauticLeadBundle:Api\\ListApi:removeLead',
                                    'method' => 'POST',
                                ),
                                'mautic_api_companiesstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'companies',
                                    'path' => '/companies',
                                    'controller' => 'MauticLeadBundle:Api\\CompanyApi',
                                ),
                                'mautic_api_companyaddcontact' => array(
                                    'path' => '/companies/{companyId}/contact/{contactId}/add',
                                    'controller' => 'MauticLeadBundle:Api\\CompanyApi:addContact',
                                    'method' => 'POST',
                                ),
                                'mautic_api_companyremovecontact' => array(
                                    'path' => '/companies/{companyId}/contact/{contactId}/remove',
                                    'controller' => 'MauticLeadBundle:Api\\CompanyApi:removeContact',
                                    'method' => 'POST',
                                ),
                                'mautic_api_fieldsstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'fields',
                                    'path' => '/fields/{object}',
                                    'controller' => 'MauticLeadBundle:Api\\FieldApi',
                                    'defaults' => array(
                                        'object' => 'contact',
                                    ),
                                ),
                                'mautic_api_notesstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'notes',
                                    'path' => '/notes',
                                    'controller' => 'MauticLeadBundle:Api\\NoteApi',
                                ),
                                'mautic_api_devicesstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'devices',
                                    'path' => '/devices',
                                    'controller' => 'MauticLeadBundle:Api\\DeviceApi',
                                ),
                                'bc_mautic_api_segmentaddcontact' => array(
                                    'path' => '/segments/{id}/contact/add/{leadId}',
                                    'controller' => 'MauticLeadBundle:Api\\ListApi:addLead',
                                    'method' => 'POST',
                                ),
                                'bc_mautic_api_segmentremovecontact' => array(
                                    'path' => '/segments/{id}/contact/remove/{leadId}',
                                    'controller' => 'MauticLeadBundle:Api\\ListApi:removeLead',
                                    'method' => 'POST',
                                ),
                                'bc_mautic_api_companyaddcontact' => array(
                                    'path' => '/companies/{companyId}/contact/add/{contactId}',
                                    'controller' => 'MauticLeadBundle:Api\\CompanyApi:addContact',
                                    'method' => 'POST',
                                ),
                                'bc_mautic_api_companyremovecontact' => array(
                                    'path' => '/companies/{companyId}/contact/remove/{contactId}',
                                    'controller' => 'MauticLeadBundle:Api\\CompanyApi:removeContact',
                                    'method' => 'POST',
                                ),
                                'bc_mautic_api_dncaddcontact' => array(
                                    'path' => '/contacts/{id}/dnc/add/{channel}',
                                    'controller' => 'MauticLeadBundle:Api\\LeadApi:addDnc',
                                    'method' => 'POST',
                                    'defaults' => array(
                                        'channel' => 'email',
                                    ),
                                ),
                                'bc_mautic_api_dncremovecontact' => array(
                                    'path' => '/contacts/{id}/dnc/remove/{channel}',
                                    'controller' => 'MauticLeadBundle:Api\\LeadApi:removeDnc',
                                    'method' => 'POST',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'items' => array(
                                    'mautic.lead.leads' => array(
                                        'iconClass' => 'fa-user',
                                        'access' => array(
                                            0 => 'lead:leads:viewown',
                                            1 => 'lead:leads:viewother',
                                        ),
                                        'route' => 'mautic_contact_index',
                                        'priority' => 80,
                                    ),
                                    'mautic.companies.menu.index' => array(
                                        'route' => 'mautic_company_index',
                                        'iconClass' => 'fa-building-o',
                                        'access' => array(
                                            0 => 'lead:leads:viewother',
                                        ),
                                        'priority' => 75,
                                    ),
                                    'mautic.lead.list.menu.index' => array(
                                        'iconClass' => 'fa-pie-chart',
                                        'access' => array(
                                            0 => 'lead:leads:viewown',
                                            1 => 'lead:leads:viewother',
                                        ),
                                        'route' => 'mautic_segment_index',
                                        'priority' => 70,
                                    ),
                                ),
                            ),
                            'admin' => array(
                                'priority' => 50,
                                'items' => array(
                                    'mautic.lead.field.menu.index' => array(
                                        'id' => 'mautic_lead_field',
                                        'iconClass' => 'fa-list',
                                        'route' => 'mautic_contactfield_index',
                                        'access' => 'lead:fields:full',
                                    ),
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.lead.subscriber' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\LeadSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.core.model.auditlog',
                                    ),
                                    'methodCalls' => array(
                                        'setModelFactory' => array(
                                            0 => 'mautic.model.factory',
                                        ),
                                    ),
                                ),
                                'mautic.lead.subscriber.company' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\CompanySubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                                'mautic.lead.emailbundle.subscriber' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\EmailSubscriber',
                                ),
                                'mautic.lead.formbundle.subscriber' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\FormSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.email.model.email',
                                    ),
                                ),
                                'mautic.lead.campaignbundle.subscriber' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\CampaignSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.lead.model.lead',
                                        2 => 'mautic.lead.model.field',
                                    ),
                                ),
                                'mautic.lead.reportbundle.subscriber' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\ReportSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.list',
                                        1 => 'mautic.lead.model.field',
                                        2 => 'mautic.lead.model.lead',
                                        3 => 'mautic.stage.model.stage',
                                        4 => 'mautic.campaign.model.campaign',
                                        5 => 'mautic.user.model.user',
                                        6 => 'mautic.lead.model.company',
                                    ),
                                ),
                                'mautic.lead.calendarbundle.subscriber' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\CalendarSubscriber',
                                ),
                                'mautic.lead.pointbundle.subscriber' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\PointSubscriber',
                                ),
                                'mautic.lead.search.subscriber' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\SearchSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.lead',
                                    ),
                                ),
                                'mautic.webhook.subscriber' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\WebhookSubscriber',
                                    'methodCalls' => array(
                                        'setWebhookModel' => array(
                                            0 => 'mautic.webhook.model.webhook',
                                        ),
                                    ),
                                ),
                                'mautic.lead.dashboard.subscriber' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\DashboardSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.lead',
                                        1 => 'mautic.lead.model.list',
                                    ),
                                ),
                                'mautic.lead.maintenance.subscriber' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\MaintenanceSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.dbal.default_connection',
                                    ),
                                ),
                                'mautic.lead.stats.subscriber' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\StatsSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                ),
                                'mautic.lead.button.subscriber' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\ButtonSubscriber',
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.lead' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\LeadType',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                        1 => 'mautic.lead.model.company',
                                    ),
                                    'alias' => 'lead',
                                ),
                                'mautic.form.type.leadlist' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\ListType',
                                    'arguments' => array(
                                        0 => 'translator',
                                        1 => 'mautic.lead.model.list',
                                        2 => 'mautic.email.model.email',
                                        3 => 'mautic.security',
                                        4 => 'mautic.lead.model.lead',
                                        5 => 'mautic.stage.model.stage',
                                        6 => 'mautic.category.model.category',
                                        7 => 'mautic.helper.user',
                                    ),
                                    'alias' => 'leadlist',
                                ),
                                'mautic.form.type.leadlist_choices' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\LeadListType',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                    'alias' => 'leadlist_choices',
                                ),
                                'mautic.form.type.leadlist_filter' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\FilterType',
                                    'alias' => 'leadlist_filter',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                ),
                                'mautic.form.type.leadfield' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\FieldType',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                    'alias' => 'leadfield',
                                ),
                                'mautic.form.type.lead.submitaction.pointschange' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\FormSubmitActionPointsChangeType',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                    'alias' => 'lead_submitaction_pointschange',
                                ),
                                'mautic.form.type.lead.submitaction.addutmtags' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\ActionAddUtmTagsType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'lead_action_addutmtags',
                                ),
                                'mautic.form.type.lead.submitaction.removedonotcontact' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\ActionRemoveDoNotContact',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'lead_action_removedonotcontact',
                                ),
                                'mautic.form.type.lead.submitaction.changelist' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\EventListType',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                    'alias' => 'leadlist_action_type',
                                ),
                                'mautic.form.type.leadpoints_trigger' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\PointTriggerType',
                                    'alias' => 'leadpoints_trigger',
                                ),
                                'mautic.form.type.leadpoints_action' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\PointActionType',
                                    'alias' => 'leadpoints_action',
                                ),
                                'mautic.form.type.leadlist_trigger' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\ListTriggerType',
                                    'alias' => 'leadlist_trigger',
                                ),
                                'mautic.form.type.leadlist_action' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\ListActionType',
                                    'alias' => 'leadlist_action',
                                ),
                                'mautic.form.type.updatelead_action' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\UpdateLeadActionType',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                    'alias' => 'updatelead_action',
                                ),
                                'mautic.form.type.leadnote' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\NoteType',
                                    'alias' => 'leadnote',
                                ),
                                'mautic.form.type.leaddevice' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\DeviceType',
                                    'alias' => 'leaddevice',
                                ),
                                'mautic.form.type.lead_import' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\LeadImportType',
                                    'alias' => 'lead_import',
                                ),
                                'mautic.form.type.lead_field_import' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\LeadImportFieldType',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                    'alias' => 'lead_field_import',
                                ),
                                'mautic.form.type.lead_quickemail' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\EmailType',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                    'alias' => 'lead_quickemail',
                                ),
                                'mautic.form.type.lead_tags' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\TagListType',
                                    'alias' => 'lead_tags',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                ),
                                'mautic.form.type.lead_tag' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\TagType',
                                    'alias' => 'lead_tag',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                ),
                                'mautic.form.type.modify_lead_tags' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\ModifyLeadTagsType',
                                    'alias' => 'modify_lead_tags',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                ),
                                'mautic.form.type.lead_batch' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\BatchType',
                                    'alias' => 'lead_batch',
                                ),
                                'mautic.form.type.lead_batch_dnc' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\DncType',
                                    'alias' => 'lead_batch_dnc',
                                ),
                                'mautic.form.type.lead_batch_stage' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\StageType',
                                    'alias' => 'lead_batch_stage',
                                ),
                                'mautic.form.type.lead_merge' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\MergeType',
                                    'alias' => 'lead_merge',
                                ),
                                'mautic.form.type.lead_contact_frequency_rules' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\ContactFrequencyType',
                                    'arguments' => array(
                                        0 => 'mautic.helper.core_parameters',
                                    ),
                                    'alias' => 'lead_contact_frequency_rules',
                                ),
                                'mautic.form.type.campaignevent_lead_field_value' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\CampaignEventLeadFieldValueType',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                    'alias' => 'campaignevent_lead_field_value',
                                ),
                                'mautic.form.type.lead_fields' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\LeadFieldsType',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                    'alias' => 'leadfields_choices',
                                ),
                                'mautic.form.type.lead_dashboard_leads_in_time_widget' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\DashboardLeadsInTimeWidgetType',
                                    'alias' => 'lead_dashboard_leads_in_time_widget',
                                ),
                                'mautic.form.type.lead_dashboard_leads_lifetime_widget' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\DashboardLeadsLifetimeWidgetType',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                    'alias' => 'lead_dashboard_leads_lifetime_widget',
                                ),
                                'mautic.company.type.form' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\CompanyType',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                        1 => 'mautic.security',
                                        2 => 'router',
                                        3 => 'translator',
                                    ),
                                    'alias' => 'company',
                                ),
                                'mautic.company.campaign.action.type.form' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\AddToCompanyActionType',
                                    'arguments' => array(
                                        0 => 'router',
                                    ),
                                    'alias' => 'addtocompany_action',
                                ),
                                'mautic.company.list.type.form' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\CompanyListType',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.company',
                                        1 => 'mautic.helper.user',
                                        2 => 'translator',
                                        3 => 'router',
                                        4 => 'database_connection',
                                    ),
                                    'alias' => 'company_list',
                                ),
                                'mautic.form.type.lead_categories' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\LeadCategoryType',
                                    'arguments' => array(
                                        0 => 'mautic.category.model.category',
                                    ),
                                    'alias' => 'leadcategory_choices',
                                ),
                                'mautic.company.merge.type.form' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\CompanyMergeType',
                                    'alias' => 'company_merge',
                                ),
                                'mautic.form.type.company_change_score' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Type\\CompanyChangeScoreActionType',
                                    'alias' => 'scorecontactscompanies_action',
                                ),
                            ),
                            'other' => array(
                                'mautic.lead.doctrine.subscriber' => array(
                                    'class' => 'Mautic\\LeadBundle\\EventListener\\DoctrineSubscriber',
                                    'tag' => 'doctrine.event_subscriber',
                                    'arguments' => array(
                                        0 => 'monolog.logger.mautic',
                                    ),
                                ),
                                'mautic.validator.leadlistaccess' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Validator\\Constraints\\LeadListAccessValidator',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                    'tag' => 'validator.constraint_validator',
                                    'alias' => 'leadlist_access',
                                ),
                                'mautic.lead.constraint.alias' => array(
                                    'class' => 'Mautic\\LeadBundle\\Form\\Validator\\Constraints\\UniqueUserAliasValidator',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                    'tag' => 'validator.constraint_validator',
                                    'alias' => 'uniqueleadlist',
                                ),
                            ),
                            'helpers' => array(
                                'mautic.helper.template.avatar' => array(
                                    'class' => 'Mautic\\LeadBundle\\Templating\\Helper\\AvatarHelper',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                    ),
                                    'alias' => 'lead_avatar',
                                ),
                            ),
                            'models' => array(
                                'mautic.lead.model.lead' => array(
                                    'class' => 'Mautic\\LeadBundle\\Model\\LeadModel',
                                    'arguments' => array(
                                        0 => 'request_stack',
                                        1 => 'mautic.helper.cookie',
                                        2 => 'mautic.helper.ip_lookup',
                                        3 => 'mautic.helper.paths',
                                        4 => 'mautic.helper.integration',
                                        5 => 'mautic.lead.model.field',
                                        6 => 'mautic.lead.model.list',
                                        7 => 'form.factory',
                                        8 => 'mautic.lead.model.company',
                                        9 => 'mautic.category.model.category',
                                        10 => 'mautic.channel.helper.channel_list',
                                        11 => '%mautic.track_contact_by_ip%',
                                    ),
                                ),
                                'mautic.lead.model.field' => array(
                                    'class' => 'Mautic\\LeadBundle\\Model\\FieldModel',
                                    'arguments' => array(
                                        0 => 'mautic.schema.helper.factory',
                                    ),
                                ),
                                'mautic.lead.model.list' => array(
                                    'class' => 'Mautic\\LeadBundle\\Model\\ListModel',
                                    'arguments' => array(
                                        0 => 'mautic.helper.core_parameters',
                                    ),
                                ),
                                'mautic.lead.model.note' => array(
                                    'class' => 'Mautic\\LeadBundle\\Model\\NoteModel',
                                ),
                                'mautic.lead.model.device' => array(
                                    'class' => 'Mautic\\LeadBundle\\Model\\DeviceModel',
                                ),
                                'mautic.lead.model.company' => array(
                                    'class' => 'Mautic\\LeadBundle\\Model\\CompanyModel',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.field',
                                        1 => 'session',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticNotificationBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Notification',
                    'bundle' => 'NotificationBundle',
                    'namespace' => 'Mautic\\NotificationBundle',
                    'symfonyBundleName' => 'MauticNotificationBundle',
                    'bundleClass' => 'Mautic\\NotificationBundle\\MauticNotificationBundle',
                    'permissionClasses' => array(
                        'notification' => '\\Mautic\\NotificationBundle\\Security\\Permissions\\NotificationPermissions',
                    ),
                    'relative' => 'app/bundles/NotificationBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/NotificationBundle'),
                    'config' => array(
                        'services' => array(
                            'events' => array(
                                'mautic.notification.campaignbundle.subscriber' => array(
                                    'class' => 'Mautic\\NotificationBundle\\EventListener\\CampaignSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.core_parameters',
                                        1 => 'mautic.lead.model.lead',
                                        2 => 'mautic.notification.model.notification',
                                        3 => 'mautic.notification.api',
                                    ),
                                ),
                                'mautic.notification.configbundle.subscriber' => array(
                                    'class' => 'Mautic\\NotificationBundle\\EventListener\\ConfigSubscriber',
                                ),
                                'mautic.notification.pagebundle.subscriber' => array(
                                    'class' => 'Mautic\\NotificationBundle\\EventListener\\PageSubscriber',
                                    'arguments' => array(
                                        0 => 'templating.helper.assets',
                                        1 => 'mautic.helper.core_parameters',
                                    ),
                                ),
                                'mautic.core.js.subscriber' => array(
                                    'class' => 'Mautic\\NotificationBundle\\EventListener\\BuildJsSubscriber',
                                ),
                                'mautic.notification.notificationbundle.subscriber' => array(
                                    'class' => 'Mautic\\NotificationBundle\\EventListener\\NotificationSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.core.model.auditlog',
                                        1 => 'mautic.page.model.trackable',
                                        2 => 'mautic.page.helper.token',
                                        3 => 'mautic.asset.helper.token',
                                    ),
                                ),
                                'mautic.notification.subscriber.channel' => array(
                                    'class' => 'Mautic\\NotificationBundle\\EventListener\\ChannelSubscriber',
                                ),
                                'mautic.notification.stats.subscriber' => array(
                                    'class' => 'Mautic\\NotificationBundle\\EventListener\\StatsSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.notification' => array(
                                    'class' => 'Mautic\\NotificationBundle\\Form\\Type\\NotificationType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'notification',
                                ),
                                'mautic.form.type.notificationconfig' => array(
                                    'class' => 'Mautic\\NotificationBundle\\Form\\Type\\ConfigType',
                                    'alias' => 'notificationconfig',
                                ),
                                'mautic.form.type.notificationsend_list' => array(
                                    'class' => 'Mautic\\NotificationBundle\\Form\\Type\\NotificationSendType',
                                    'arguments' => 'router',
                                    'alias' => 'notificationsend_list',
                                ),
                                'mautic.form.type.notification_list' => array(
                                    'class' => 'Mautic\\NotificationBundle\\Form\\Type\\NotificationListType',
                                    'alias' => 'notification_list',
                                ),
                            ),
                            'helpers' => array(
                                'mautic.helper.notification' => array(
                                    'class' => 'Mautic\\NotificationBundle\\Helper\\NotificationHelper',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'notification_helper',
                                ),
                            ),
                            'other' => array(
                                'mautic.notification.api' => array(
                                    'class' => 'Mautic\\NotificationBundle\\Api\\OneSignalApi',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                        1 => 'mautic.http.connector',
                                    ),
                                    'alias' => 'notification_api',
                                ),
                            ),
                            'models' => array(
                                'mautic.notification.model.notification' => array(
                                    'class' => 'Mautic\\NotificationBundle\\Model\\NotificationModel',
                                    'arguments' => array(
                                        0 => 'mautic.page.model.trackable',
                                    ),
                                ),
                            ),
                        ),
                        'routes' => array(
                            'main' => array(
                                'mautic_notification_index' => array(
                                    'path' => '/notifications/{page}',
                                    'controller' => 'MauticNotificationBundle:Notification:index',
                                ),
                                'mautic_notification_action' => array(
                                    'path' => '/notifications/{objectAction}/{objectId}',
                                    'controller' => 'MauticNotificationBundle:Notification:execute',
                                ),
                                'mautic_notification_contacts' => array(
                                    'path' => '/notifications/view/{objectId}/contact/{page}',
                                    'controller' => 'MauticNotificationBundle:Notification:contacts',
                                ),
                            ),
                            'public' => array(
                                'mautic_receive_notification' => array(
                                    'path' => '/notification/receive',
                                    'controller' => 'MauticNotificationBundle:Api\\NotificationApi:receive',
                                ),
                                'mautic_subscribe_notification' => array(
                                    'path' => '/notification/subscribe',
                                    'controller' => 'MauticNotificationBundle:Api\\NotificationApi:subscribe',
                                ),
                                'mautic_notification_popup' => array(
                                    'path' => '/notification',
                                    'controller' => 'MauticNotificationBundle:Popup:index',
                                ),
                                'mautic_onesignal_worker' => array(
                                    'path' => '/OneSignalSDKWorker.js',
                                    'controller' => 'MauticNotificationBundle:Js:worker',
                                ),
                                'mautic_onesignal_updater' => array(
                                    'path' => '/OneSignalSDKUpdaterWorker.js',
                                    'controller' => 'MauticNotificationBundle:Js:updater',
                                ),
                                'mautic_onesignal_manifest' => array(
                                    'path' => '/manifest.json',
                                    'controller' => 'MauticNotificationBundle:Js:manifest',
                                ),
                            ),
                            'api' => array(
                                'mautic_api_notificationsstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'notifications',
                                    'path' => '/notifications',
                                    'controller' => 'MauticNotificationBundle:Api\\NotificationApi',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'items' => array(
                                    'mautic.notification.notifications' => array(
                                        'route' => 'mautic_notification_index',
                                        'access' => array(
                                            0 => 'notification:notifications:viewown',
                                            1 => 'notification:notifications:viewother',
                                        ),
                                        'checks' => array(
                                            'parameters' => array(
                                                'notification_enabled' => true,
                                            ),
                                        ),
                                        'parent' => 'mautic.core.channels',
                                        'priority' => 80,
                                    ),
                                ),
                            ),
                        ),
                        'parameters' => array(
                            'notification_enabled' => false,
                            'notification_landing_page_enabled' => true,
                            'notification_app_id' => NULL,
                            'notification_rest_api_key' => NULL,
                            'notification_safari_web_id' => NULL,
                            'gcm_sender_id' => '482941778795',
                            'welcomenotification_enabled' => true,
                        ),
                    ),
                ),
                'MauticPageBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Page',
                    'bundle' => 'PageBundle',
                    'namespace' => 'Mautic\\PageBundle',
                    'symfonyBundleName' => 'MauticPageBundle',
                    'bundleClass' => 'Mautic\\PageBundle\\MauticPageBundle',
                    'permissionClasses' => array(
                        'page' => '\\Mautic\\PageBundle\\Security\\Permissions\\PagePermissions',
                    ),
                    'relative' => 'app/bundles/PageBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/PageBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_page_index' => array(
                                    'path' => '/pages/{page}',
                                    'controller' => 'MauticPageBundle:Page:index',
                                ),
                                'mautic_page_action' => array(
                                    'path' => '/pages/{objectAction}/{objectId}',
                                    'controller' => 'MauticPageBundle:Page:execute',
                                ),
                            ),
                            'public' => array(
                                'mautic_page_tracker' => array(
                                    'path' => '/mtracking.gif',
                                    'controller' => 'MauticPageBundle:Public:trackingImage',
                                ),
                                'mautic_page_tracker_cors' => array(
                                    'path' => '/mtc/event',
                                    'controller' => 'MauticPageBundle:Public:tracking',
                                ),
                                'mautic_page_tracker_getcontact' => array(
                                    'path' => '/mtc',
                                    'controller' => 'MauticPageBundle:Public:getContactId',
                                ),
                                'mautic_url_redirect' => array(
                                    'path' => '/r/{redirectId}',
                                    'controller' => 'MauticPageBundle:Public:redirect',
                                ),
                                'mautic_page_redirect' => array(
                                    'path' => '/redirect/{redirectId}',
                                    'controller' => 'MauticPageBundle:Public:redirect',
                                ),
                                'mautic_page_preview' => array(
                                    'path' => '/page/preview/{id}',
                                    'controller' => 'MauticPageBundle:Public:preview',
                                ),
                                'mautic_gated_video_hit' => array(
                                    'path' => '/video/hit',
                                    'controller' => 'MauticPageBundle:Public:hitVideo',
                                ),
                            ),
                            'api' => array(
                                'mautic_api_pagesstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'pages',
                                    'path' => '/pages',
                                    'controller' => 'MauticPageBundle:Api\\PageApi',
                                ),
                            ),
                            'catchall' => array(
                                'mautic_page_public' => array(
                                    'path' => '/{slug}',
                                    'controller' => 'MauticPageBundle:Public:index',
                                    'requirements' => array(
                                        'slug' => '^(?!(_(profiler|wdt)|css|images|js|favicon.ico|apps/bundles/|plugins/)).+',
                                    ),
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'items' => array(
                                    'mautic.page.pages' => array(
                                        'route' => 'mautic_page_index',
                                        'access' => array(
                                            0 => 'page:pages:viewown',
                                            1 => 'page:pages:viewother',
                                        ),
                                        'parent' => 'mautic.core.components',
                                        'priority' => 100,
                                    ),
                                ),
                            ),
                        ),
                        'categories' => array(
                            'page' => NULL,
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.page.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\PageSubscriber',
                                    'arguments' => array(
                                        0 => 'templating.helper.assets',
                                        1 => 'mautic.helper.ip_lookup',
                                        2 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                                'mautic.pagebuilder.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\BuilderSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.page.helper.token',
                                        1 => 'mautic.helper.integration',
                                        2 => 'mautic.page.model.page',
                                    ),
                                ),
                                'mautic.pagetoken.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\TokenSubscriber',
                                ),
                                'mautic.page.pointbundle.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\PointSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.point.model.point',
                                    ),
                                ),
                                'mautic.page.reportbundle.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\ReportSubscriber',
                                ),
                                'mautic.page.campaignbundle.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\CampaignSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.page.model.page',
                                        1 => 'mautic.campaign.model.event',
                                    ),
                                ),
                                'mautic.page.leadbundle.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\LeadSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.page.model.page',
                                        1 => 'mautic.page.model.video',
                                    ),
                                    'methodCalls' => array(
                                        'setModelFactory' => array(
                                            0 => 'mautic.model.factory',
                                        ),
                                    ),
                                ),
                                'mautic.page.calendarbundle.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\CalendarSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.page.model.page',
                                    ),
                                ),
                                'mautic.page.configbundle.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\ConfigSubscriber',
                                ),
                                'mautic.page.search.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\SearchSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.user',
                                        1 => 'mautic.page.model.page',
                                    ),
                                ),
                                'mautic.page.webhook.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\WebhookSubscriber',
                                    'methodCalls' => array(
                                        'setWebhookModel' => array(
                                            0 => 'mautic.webhook.model.webhook',
                                        ),
                                    ),
                                ),
                                'mautic.page.dashboard.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\DashboardSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.page.model.page',
                                    ),
                                ),
                                'mautic.page.js.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\BuildJsSubscriber',
                                    'arguments' => array(
                                        0 => 'templating.helper.assets',
                                    ),
                                ),
                                'mautic.page.maintenance.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\MaintenanceSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.dbal.default_connection',
                                    ),
                                ),
                                'mautic.page.stats.subscriber' => array(
                                    'class' => 'Mautic\\PageBundle\\EventListener\\StatsSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.page' => array(
                                    'class' => 'Mautic\\PageBundle\\Form\\Type\\PageType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'page',
                                ),
                                'mautic.form.type.pagevariant' => array(
                                    'class' => 'Mautic\\PageBundle\\Form\\Type\\VariantType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'pagevariant',
                                ),
                                'mautic.form.type.pointaction_pointhit' => array(
                                    'class' => 'Mautic\\PageBundle\\Form\\Type\\PointActionPageHitType',
                                    'alias' => 'pointaction_pagehit',
                                ),
                                'mautic.form.type.pointaction_urlhit' => array(
                                    'class' => 'Mautic\\PageBundle\\Form\\Type\\PointActionUrlHitType',
                                    'alias' => 'pointaction_urlhit',
                                ),
                                'mautic.form.type.pagehit.campaign_trigger' => array(
                                    'class' => 'Mautic\\PageBundle\\Form\\Type\\CampaignEventPageHitType',
                                    'alias' => 'campaignevent_pagehit',
                                ),
                                'mautic.form.type.pagelist' => array(
                                    'class' => 'Mautic\\PageBundle\\Form\\Type\\PageListType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'page_list',
                                ),
                                'mautic.form.type.page_abtest_settings' => array(
                                    'class' => 'Mautic\\PageBundle\\Form\\Type\\AbTestPropertiesType',
                                    'alias' => 'page_abtest_settings',
                                ),
                                'mautic.form.type.page_publish_dates' => array(
                                    'class' => 'Mautic\\PageBundle\\Form\\Type\\PagePublishDatesType',
                                    'alias' => 'page_publish_dates',
                                ),
                                'mautic.form.type.pageconfig' => array(
                                    'class' => 'Mautic\\PageBundle\\Form\\Type\\ConfigType',
                                    'alias' => 'pageconfig',
                                ),
                                'mautic.form.type.slideshow_config' => array(
                                    'class' => 'Mautic\\PageBundle\\Form\\Type\\SlideshowGlobalConfigType',
                                    'alias' => 'slideshow_config',
                                ),
                                'mautic.form.type.slideshow_slide_config' => array(
                                    'class' => 'Mautic\\PageBundle\\Form\\Type\\SlideshowSlideConfigType',
                                    'alias' => 'slideshow_slide_config',
                                ),
                                'mautic.form.type.redirect_list' => array(
                                    'class' => 'Mautic\\PageBundle\\Form\\Type\\RedirectListType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'redirect_list',
                                ),
                                'mautic.form.type.page_dashboard_hits_in_time_widget' => array(
                                    'class' => 'Mautic\\PageBundle\\Form\\Type\\DashboardHitsInTimeWidgetType',
                                    'alias' => 'page_dashboard_hits_in_time_widget',
                                ),
                            ),
                            'models' => array(
                                'mautic.page.model.page' => array(
                                    'class' => 'Mautic\\PageBundle\\Model\\PageModel',
                                    'arguments' => array(
                                        0 => 'mautic.helper.cookie',
                                        1 => 'mautic.helper.ip_lookup',
                                        2 => 'mautic.lead.model.lead',
                                        3 => 'mautic.lead.model.field',
                                        4 => 'mautic.page.model.redirect',
                                        5 => 'mautic.page.model.trackable',
                                    ),
                                    'methodCalls' => array(
                                        'setCatInUrl' => array(
                                            0 => '%mautic.cat_in_page_url%',
                                        ),
                                    ),
                                ),
                                'mautic.page.model.redirect' => array(
                                    'class' => 'Mautic\\PageBundle\\Model\\RedirectModel',
                                    'arguments' => array(
                                        0 => 'mautic.helper.url',
                                    ),
                                ),
                                'mautic.page.model.trackable' => array(
                                    'class' => 'Mautic\\PageBundle\\Model\\TrackableModel',
                                    'arguments' => array(
                                        0 => 'mautic.page.model.redirect',
                                    ),
                                ),
                                'mautic.page.model.video' => array(
                                    'class' => 'Mautic\\PageBundle\\Model\\VideoModel',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.lead',
                                        1 => 'mautic.helper.ip_lookup',
                                    ),
                                ),
                            ),
                            'other' => array(
                                'mautic.page.helper.token' => array(
                                    'class' => 'Mautic\\PageBundle\\Helper\\TokenHelper',
                                    'arguments' => 'mautic.page.model.page',
                                ),
                            ),
                        ),
                        'parameters' => array(
                            'cat_in_page_url' => false,
                            'google_analytics' => false,
                            'track_contact_by_ip' => false,
                            'redirect_list_types' => array(
                                301 => 'mautic.page.form.redirecttype.permanent',
                                302 => 'mautic.page.form.redirecttype.temporary',
                            ),
                        ),
                    ),
                ),
                'MauticPluginBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Plugin',
                    'bundle' => 'PluginBundle',
                    'namespace' => 'Mautic\\PluginBundle',
                    'symfonyBundleName' => 'MauticPluginBundle',
                    'bundleClass' => 'Mautic\\PluginBundle\\MauticPluginBundle',
                    'permissionClasses' => array(
                        'plugin' => '\\Mautic\\PluginBundle\\Security\\Permissions\\PluginPermissions',
                    ),
                    'relative' => 'app/bundles/PluginBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/PluginBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_integration_auth_callback_secure' => array(
                                    'path' => '/plugins/integrations/authcallback/{integration}',
                                    'controller' => 'MauticPluginBundle:Auth:authCallback',
                                ),
                                'mautic_integration_auth_postauth_secure' => array(
                                    'path' => '/plugins/integrations/authstatus/{integration}',
                                    'controller' => 'MauticPluginBundle:Auth:authStatus',
                                ),
                                'mautic_plugin_index' => array(
                                    'path' => '/plugins',
                                    'controller' => 'MauticPluginBundle:Plugin:index',
                                ),
                                'mautic_plugin_config' => array(
                                    'path' => '/plugins/config/{name}/{page}',
                                    'controller' => 'MauticPluginBundle:Plugin:config',
                                ),
                                'mautic_plugin_info' => array(
                                    'path' => '/plugins/info/{name}',
                                    'controller' => 'MauticPluginBundle:Plugin:info',
                                ),
                                'mautic_plugin_reload' => array(
                                    'path' => '/plugins/reload',
                                    'controller' => 'MauticPluginBundle:Plugin:reload',
                                ),
                            ),
                            'public' => array(
                                'mautic_integration_auth_user' => array(
                                    'path' => '/plugins/integrations/authuser/{integration}',
                                    'controller' => 'MauticPluginBundle:Auth:authUser',
                                ),
                                'mautic_integration_auth_callback' => array(
                                    'path' => '/plugins/integrations/authcallback/{integration}',
                                    'controller' => 'MauticPluginBundle:Auth:authCallback',
                                ),
                                'mautic_integration_auth_postauth' => array(
                                    'path' => '/plugins/integrations/authstatus/{integration}',
                                    'controller' => 'MauticPluginBundle:Auth:authStatus',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'admin' => array(
                                'priority' => 50,
                                'items' => array(
                                    'mautic.plugin.plugins' => array(
                                        'id' => 'mautic_plugin_root',
                                        'iconClass' => 'fa-plus-circle',
                                        'access' => 'plugin:plugins:manage',
                                        'route' => 'mautic_plugin_index',
                                    ),
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.plugin.pointbundle.subscriber' => array(
                                    'class' => 'Mautic\\PluginBundle\\EventListener\\PointSubscriber',
                                ),
                                'mautic.plugin.formbundle.subscriber' => array(
                                    'class' => 'Mautic\\PluginBundle\\EventListener\\FormSubscriber',
                                ),
                                'mautic.plugin.campaignbundle.subscriber' => array(
                                    'class' => 'Mautic\\PluginBundle\\EventListener\\CampaignSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.integration',
                                    ),
                                ),
                                'mautic.plugin.leadbundle.subscriber' => array(
                                    'class' => 'Mautic\\PluginBundle\\EventListener\\LeadSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.plugin.model.plugin',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.integration.details' => array(
                                    'class' => 'Mautic\\PluginBundle\\Form\\Type\\DetailsType',
                                    'alias' => 'integration_details',
                                ),
                                'mautic.form.type.integration.settings' => array(
                                    'class' => 'Mautic\\PluginBundle\\Form\\Type\\FeatureSettingsType',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                        1 => 'session',
                                        2 => 'mautic.helper.core_parameters',
                                        3 => 'translator',
                                    ),
                                    'alias' => 'integration_featuresettings',
                                ),
                                'mautic.form.type.integration.fields' => array(
                                    'class' => 'Mautic\\PluginBundle\\Form\\Type\\FieldsType',
                                    'alias' => 'integration_fields',
                                ),
                                'mautic.form.type.integration.company.fields' => array(
                                    'class' => 'Mautic\\PluginBundle\\Form\\Type\\CompanyFieldsType',
                                    'alias' => 'integration_company_fields',
                                ),
                                'mautic.form.type.integration.keys' => array(
                                    'class' => 'Mautic\\PluginBundle\\Form\\Type\\KeysType',
                                    'alias' => 'integration_keys',
                                ),
                                'mautic.form.type.integration.list' => array(
                                    'class' => 'Mautic\\PluginBundle\\Form\\Type\\IntegrationsListType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'integration_list',
                                ),
                                'mautic.form.type.integration.config' => array(
                                    'class' => 'Mautic\\PluginBundle\\Form\\Type\\IntegrationConfigType',
                                    'alias' => 'integration_config',
                                ),
                            ),
                            'other' => array(
                                'mautic.helper.integration' => array(
                                    'class' => 'Mautic\\PluginBundle\\Helper\\IntegrationHelper',
                                    'arguments' => 'mautic.factory',
                                ),
                            ),
                            'models' => array(
                                'mautic.plugin.model.plugin' => array(
                                    'class' => 'Mautic\\PluginBundle\\Model\\PluginModel',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.field',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticPointBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Point',
                    'bundle' => 'PointBundle',
                    'namespace' => 'Mautic\\PointBundle',
                    'symfonyBundleName' => 'MauticPointBundle',
                    'bundleClass' => 'Mautic\\PointBundle\\MauticPointBundle',
                    'permissionClasses' => array(
                        'point' => '\\Mautic\\PointBundle\\Security\\Permissions\\PointPermissions',
                    ),
                    'relative' => 'app/bundles/PointBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/PointBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_pointtriggerevent_action' => array(
                                    'path' => '/points/triggers/events/{objectAction}/{objectId}',
                                    'controller' => 'MauticPointBundle:TriggerEvent:execute',
                                ),
                                'mautic_pointtrigger_index' => array(
                                    'path' => '/points/triggers/{page}',
                                    'controller' => 'MauticPointBundle:Trigger:index',
                                ),
                                'mautic_pointtrigger_action' => array(
                                    'path' => '/points/triggers/{objectAction}/{objectId}',
                                    'controller' => 'MauticPointBundle:Trigger:execute',
                                ),
                                'mautic_point_index' => array(
                                    'path' => '/points/{page}',
                                    'controller' => 'MauticPointBundle:Point:index',
                                ),
                                'mautic_point_action' => array(
                                    'path' => '/points/{objectAction}/{objectId}',
                                    'controller' => 'MauticPointBundle:Point:execute',
                                ),
                            ),
                            'api' => array(
                                'mautic_api_pointactionsstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'points',
                                    'path' => '/points',
                                    'controller' => 'MauticPointBundle:Api\\PointApi',
                                ),
                                'mautic_api_getpointactiontypes' => array(
                                    'path' => '/points/actions/types',
                                    'controller' => 'MauticPointBundle:Api\\PointApi:getPointActionTypes',
                                ),
                                'mautic_api_pointtriggersstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'triggers',
                                    'path' => '/points/triggers',
                                    'controller' => 'MauticPointBundle:Api\\TriggerApi',
                                ),
                                'mautic_api_getpointtriggereventtypes' => array(
                                    'path' => '/points/triggers/events/types',
                                    'controller' => 'MauticPointBundle:Api\\TriggerApi:getPointTriggerEventTypes',
                                ),
                                'mautic_api_pointtriggerdeleteevents' => array(
                                    'path' => '/points/triggers/{triggerId}/events/delete',
                                    'controller' => 'MauticPointBundle:Api\\TriggerApi:deletePointTriggerEvents',
                                    'method' => 'DELETE',
                                ),
                                'mautic_api_adjustcontactpoints' => array(
                                    'path' => '/contacts/{leadId}/points/{operator}/{delta}',
                                    'controller' => 'MauticPointBundle:Api\\PointApi:adjustPoints',
                                    'method' => 'POST',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'mautic.points.menu.root' => array(
                                    'id' => 'mautic_points_root',
                                    'iconClass' => 'fa-calculator',
                                    'access' => array(
                                        0 => 'point:points:view',
                                        1 => 'point:triggers:view',
                                    ),
                                    'priority' => 30,
                                    'children' => array(
                                        'mautic.point.menu.index' => array(
                                            'route' => 'mautic_point_index',
                                            'access' => 'point:points:view',
                                        ),
                                        'mautic.point.trigger.menu.index' => array(
                                            'route' => 'mautic_pointtrigger_index',
                                            'access' => 'point:triggers:view',
                                        ),
                                    ),
                                ),
                            ),
                        ),
                        'categories' => array(
                            'point' => NULL,
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.point.subscriber' => array(
                                    'class' => 'Mautic\\PointBundle\\EventListener\\PointSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                                'mautic.point.leadbundle.subscriber' => array(
                                    'class' => 'Mautic\\PointBundle\\EventListener\\LeadSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.point.model.trigger',
                                    ),
                                ),
                                'mautic.point.search.subscriber' => array(
                                    'class' => 'Mautic\\PointBundle\\EventListener\\SearchSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.point.model.point',
                                        1 => 'mautic.point.model.trigger',
                                    ),
                                ),
                                'mautic.point.dashboard.subscriber' => array(
                                    'class' => 'Mautic\\PointBundle\\EventListener\\DashboardSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.point.model.point',
                                    ),
                                ),
                                'mautic.point.stats.subscriber' => array(
                                    'class' => 'Mautic\\PointBundle\\EventListener\\StatsSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.point.type.form' => array(
                                    'class' => 'Mautic\\PointBundle\\Form\\Type\\PointType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'point',
                                ),
                                'mautic.point.type.action' => array(
                                    'class' => 'Mautic\\PointBundle\\Form\\Type\\PointActionType',
                                    'alias' => 'pointaction',
                                ),
                                'mautic.pointtrigger.type.form' => array(
                                    'class' => 'Mautic\\PointBundle\\Form\\Type\\TriggerType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'pointtrigger',
                                ),
                                'mautic.pointtrigger.type.action' => array(
                                    'class' => 'Mautic\\PointBundle\\Form\\Type\\TriggerEventType',
                                    'alias' => 'pointtriggerevent',
                                ),
                                'mautic.point.type.genericpoint_settings' => array(
                                    'class' => 'Mautic\\PointBundle\\Form\\Type\\GenericPointSettingsType',
                                    'alias' => 'genericpoint_settings',
                                ),
                            ),
                            'models' => array(
                                'mautic.point.model.point' => array(
                                    'class' => 'Mautic\\PointBundle\\Model\\PointModel',
                                    'arguments' => array(
                                        0 => 'session',
                                        1 => 'mautic.helper.ip_lookup',
                                        2 => 'mautic.lead.model.lead',
                                    ),
                                ),
                                'mautic.point.model.triggerevent' => array(
                                    'class' => 'Mautic\\PointBundle\\Model\\TriggerEventModel',
                                ),
                                'mautic.point.model.trigger' => array(
                                    'class' => 'Mautic\\PointBundle\\Model\\TriggerModel',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.lead.model.lead',
                                        2 => 'mautic.point.model.triggerevent',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticReportBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Report',
                    'bundle' => 'ReportBundle',
                    'namespace' => 'Mautic\\ReportBundle',
                    'symfonyBundleName' => 'MauticReportBundle',
                    'bundleClass' => 'Mautic\\ReportBundle\\MauticReportBundle',
                    'permissionClasses' => array(
                        'report' => '\\Mautic\\ReportBundle\\Security\\Permissions\\ReportPermissions',
                    ),
                    'relative' => 'app/bundles/ReportBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/ReportBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_report_index' => array(
                                    'path' => '/reports/{page}',
                                    'controller' => 'MauticReportBundle:Report:index',
                                ),
                                'mautic_report_export' => array(
                                    'path' => '/reports/view/{objectId}/export/{format}',
                                    'controller' => 'MauticReportBundle:Report:export',
                                    'defaults' => array(
                                        'format' => 'csv',
                                    ),
                                ),
                                'mautic_report_view' => array(
                                    'path' => '/reports/view/{objectId}/{reportPage}',
                                    'controller' => 'MauticReportBundle:Report:view',
                                    'defaults' => array(
                                        'reportPage' => 1,
                                    ),
                                    'requirements' => array(
                                        'reportPage' => '\\d+',
                                    ),
                                ),
                                'mautic_report_action' => array(
                                    'path' => '/reports/{objectAction}/{objectId}',
                                    'controller' => 'MauticReportBundle:Report:execute',
                                ),
                            ),
                            'api' => array(
                                'mautic_api_getreports' => array(
                                    'path' => '/reports',
                                    'controller' => 'MauticReportBundle:Api\\ReportApi:getEntities',
                                ),
                                'mautic_api_getreport' => array(
                                    'path' => '/reports/{id}',
                                    'controller' => 'MauticReportBundle:Api\\ReportApi:getReport',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'mautic.report.reports' => array(
                                    'route' => 'mautic_report_index',
                                    'iconClass' => 'fa-line-chart',
                                    'access' => array(
                                        0 => 'report:reports:viewown',
                                        1 => 'report:reports:viewother',
                                    ),
                                    'priority' => 20,
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.report.search.subscriber' => array(
                                    'class' => 'Mautic\\ReportBundle\\EventListener\\SearchSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.user',
                                        1 => 'mautic.report.model.report',
                                    ),
                                ),
                                'mautic.report.report.subscriber' => array(
                                    'class' => 'Mautic\\ReportBundle\\EventListener\\ReportSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                                'mautic.report.dashboard.subscriber' => array(
                                    'class' => 'Mautic\\ReportBundle\\EventListener\\DashboardSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.report.model.report',
                                        1 => 'mautic.security',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.report' => array(
                                    'class' => 'Mautic\\ReportBundle\\Form\\Type\\ReportType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'report',
                                ),
                                'mautic.form.type.filter_selector' => array(
                                    'class' => 'Mautic\\ReportBundle\\Form\\Type\\FilterSelectorType',
                                    'alias' => 'filter_selector',
                                ),
                                'mautic.form.type.table_order' => array(
                                    'class' => 'Mautic\\ReportBundle\\Form\\Type\\TableOrderType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'table_order',
                                ),
                                'mautic.form.type.report_filters' => array(
                                    'class' => 'Mautic\\ReportBundle\\Form\\Type\\ReportFiltersType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'report_filters',
                                ),
                                'mautic.form.type.report_dynamic_filters' => array(
                                    'class' => 'Mautic\\ReportBundle\\Form\\Type\\DynamicFiltersType',
                                    'alias' => 'report_dynamicfilters',
                                ),
                                'mautic.form.type.report_widget' => array(
                                    'class' => 'Mautic\\ReportBundle\\Form\\Type\\ReportWidgetType',
                                    'alias' => 'report_widget',
                                    'arguments' => 'mautic.report.model.report',
                                ),
                            ),
                            'models' => array(
                                'mautic.report.model.report' => array(
                                    'class' => 'Mautic\\ReportBundle\\Model\\ReportModel',
                                    'arguments' => array(
                                        0 => 'mautic.helper.core_parameters',
                                        1 => 'mautic.helper.template.formatter',
                                        2 => 'mautic.helper.templating',
                                        3 => 'mautic.channel.helper.channel_list',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticSmsBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Sms',
                    'bundle' => 'SmsBundle',
                    'namespace' => 'Mautic\\SmsBundle',
                    'symfonyBundleName' => 'MauticSmsBundle',
                    'bundleClass' => 'Mautic\\SmsBundle\\MauticSmsBundle',
                    'permissionClasses' => array(
                        'sms' => '\\Mautic\\SmsBundle\\Security\\Permissions\\SmsPermissions',
                    ),
                    'relative' => 'app/bundles/SmsBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/SmsBundle'),
                    'config' => array(
                        'services' => array(
                            'events' => array(
                                'mautic.sms.campaignbundle.subscriber' => array(
                                    'class' => 'Mautic\\SmsBundle\\EventListener\\CampaignSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.core_parameters',
                                        1 => 'mautic.sms.model.sms',
                                    ),
                                ),
                                'mautic.sms.configbundle.subscriber' => array(
                                    'class' => 'Mautic\\SmsBundle\\EventListener\\ConfigSubscriber',
                                ),
                                'mautic.sms.smsbundle.subscriber' => array(
                                    'class' => 'Mautic\\SmsBundle\\EventListener\\SmsSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.core.model.auditlog',
                                        1 => 'mautic.page.model.trackable',
                                        2 => 'mautic.page.helper.token',
                                        3 => 'mautic.asset.helper.token',
                                    ),
                                ),
                                'mautic.sms.channel.subscriber' => array(
                                    'class' => 'Mautic\\SmsBundle\\EventListener\\ChannelSubscriber',
                                ),
                                'mautic.sms.message_queue.subscriber' => array(
                                    'class' => 'Mautic\\SmsBundle\\EventListener\\MessageQueueSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.sms.model.sms',
                                    ),
                                ),
                                'mautic.sms.stats.subscriber' => array(
                                    'class' => 'Mautic\\SmsBundle\\EventListener\\StatsSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.sms' => array(
                                    'class' => 'Mautic\\SmsBundle\\Form\\Type\\SmsType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'sms',
                                ),
                                'mautic.form.type.smsconfig' => array(
                                    'class' => 'Mautic\\SmsBundle\\Form\\Type\\ConfigType',
                                    'alias' => 'smsconfig',
                                ),
                                'mautic.form.type.smssend_list' => array(
                                    'class' => 'Mautic\\SmsBundle\\Form\\Type\\SmsSendType',
                                    'arguments' => 'router',
                                    'alias' => 'smssend_list',
                                ),
                                'mautic.form.type.sms_list' => array(
                                    'class' => 'Mautic\\SmsBundle\\Form\\Type\\SmsListType',
                                    'alias' => 'sms_list',
                                ),
                            ),
                            'helpers' => array(
                                'mautic.helper.sms' => array(
                                    'class' => 'Mautic\\SmsBundle\\Helper\\SmsHelper',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                        1 => 'mautic.lead.model.lead',
                                        2 => 'mautic.helper.phone_number',
                                        3 => 'mautic.sms.model.sms',
                                        4 => '%mautic.sms_frequency_number%',
                                    ),
                                    'alias' => 'sms_helper',
                                ),
                            ),
                            'other' => array(
                                'mautic.sms.api' => array(
                                    'class' => 'Mautic\\SmsBundle\\Api\\TwilioApi',
                                    'arguments' => array(
                                        0 => 'mautic.page.model.trackable',
                                        1 => 'mautic.twilio.service',
                                        2 => 'mautic.helper.phone_number',
                                        3 => '%mautic.sms_sending_phone_number%',
                                        4 => 'monolog.logger.mautic',
                                    ),
                                    'alias' => 'sms_api',
                                ),
                                'mautic.twilio.service' => array(
                                    'class' => 'Services_Twilio',
                                    'arguments' => array(
                                        0 => '%mautic.sms_username%',
                                        1 => '%mautic.sms_password%',
                                    ),
                                    'alias' => 'twilio_service',
                                ),
                            ),
                            'models' => array(
                                'mautic.sms.model.sms' => array(
                                    'class' => 'Mautic\\SmsBundle\\Model\\SmsModel',
                                    'arguments' => array(
                                        0 => 'mautic.page.model.trackable',
                                        1 => 'mautic.lead.model.lead',
                                        2 => 'mautic.channel.model.queue',
                                        3 => 'mautic.sms.api',
                                    ),
                                ),
                            ),
                        ),
                        'routes' => array(
                            'main' => array(
                                'mautic_sms_index' => array(
                                    'path' => '/sms/{page}',
                                    'controller' => 'MauticSmsBundle:Sms:index',
                                ),
                                'mautic_sms_action' => array(
                                    'path' => '/sms/{objectAction}/{objectId}',
                                    'controller' => 'MauticSmsBundle:Sms:execute',
                                ),
                                'mautic_sms_contacts' => array(
                                    'path' => '/sms/view/{objectId}/contact/{page}',
                                    'controller' => 'MauticSmsBundle:Sms:contacts',
                                ),
                            ),
                            'public' => array(
                                'mautic_receive_sms' => array(
                                    'path' => '/sms/receive',
                                    'controller' => 'MauticSmsBundle:Api\\SmsApi:receive',
                                ),
                            ),
                            'api' => array(
                                'mautic_api_smsesstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'smses',
                                    'path' => '/smses',
                                    'controller' => 'MauticSmsBundle:Api\\SmsApi',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'items' => array(
                                    'mautic.sms.smses' => array(
                                        'route' => 'mautic_sms_index',
                                        'access' => array(
                                            0 => 'sms:smses:viewown',
                                            1 => 'sms:smses:viewother',
                                        ),
                                        'parent' => 'mautic.core.channels',
                                        'checks' => array(
                                            'parameters' => array(
                                                'sms_enabled' => true,
                                            ),
                                        ),
                                        'priority' => 70,
                                    ),
                                ),
                            ),
                        ),
                        'parameters' => array(
                            'sms_enabled' => false,
                            'sms_username' => NULL,
                            'sms_password' => NULL,
                            'sms_sending_phone_number' => NULL,
                            'sms_frequency_number' => NULL,
                            'sms_frequency_time' => NULL,
                        ),
                    ),
                ),
                'MauticStageBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Stage',
                    'bundle' => 'StageBundle',
                    'namespace' => 'Mautic\\StageBundle',
                    'symfonyBundleName' => 'MauticStageBundle',
                    'bundleClass' => 'Mautic\\StageBundle\\MauticStageBundle',
                    'permissionClasses' => array(
                        'stage' => '\\Mautic\\StageBundle\\Security\\Permissions\\StagePermissions',
                    ),
                    'relative' => 'app/bundles/StageBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/StageBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_stage_index' => array(
                                    'path' => '/stages/{page}',
                                    'controller' => 'MauticStageBundle:Stage:index',
                                ),
                                'mautic_stage_action' => array(
                                    'path' => '/stages/{objectAction}/{objectId}',
                                    'controller' => 'MauticStageBundle:Stage:execute',
                                ),
                            ),
                            'api' => array(
                                'mautic_api_stagesstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'stages',
                                    'path' => '/stages',
                                    'controller' => 'MauticStageBundle:Api\\StageApi',
                                ),
                                'mautic_api_stageddcontact' => array(
                                    'path' => '/stages/{id}/contact/{contactId}/add',
                                    'controller' => 'MauticStageBundle:Api\\StageApi:addContact',
                                    'method' => 'POST',
                                ),
                                'mautic_api_stageremovecontact' => array(
                                    'path' => '/stages/{id}/contact/{contactId}/remove',
                                    'controller' => 'MauticStageBundle:Api\\StageApi:removeContact',
                                    'method' => 'POST',
                                ),
                                'bc_mautic_api_stageddcontact' => array(
                                    'path' => '/stages/{id}/contact/add/{contactId}',
                                    'controller' => 'MauticStageBundle:Api\\StageApi:addContact',
                                    'method' => 'POST',
                                ),
                                'bc_mautic_api_stageremovecontact' => array(
                                    'path' => '/stages/{id}/contact/remove/{contactId}',
                                    'controller' => 'MauticStageBundle:Api\\StageApi:removeContact',
                                    'method' => 'POST',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'mautic.stages.menu.index' => array(
                                    'route' => 'mautic_stage_index',
                                    'iconClass' => 'fa-tachometer',
                                    'access' => array(
                                        0 => 'stage:stages:view',
                                    ),
                                    'priority' => 25,
                                ),
                            ),
                        ),
                        'categories' => array(
                            'stage' => NULL,
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.stage.campaignbundle.subscriber' => array(
                                    'class' => 'Mautic\\StageBundle\\EventListener\\CampaignSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.lead',
                                        1 => 'mautic.stage.model.stage',
                                    ),
                                ),
                                'mautic.stage.subscriber' => array(
                                    'class' => 'Mautic\\StageBundle\\EventListener\\StageSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                                'mautic.stage.leadbundle.subscriber' => array(
                                    'class' => 'Mautic\\StageBundle\\EventListener\\LeadSubscriber',
                                ),
                                'mautic.stage.search.subscriber' => array(
                                    'class' => 'Mautic\\StageBundle\\EventListener\\SearchSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.stage.model.stage',
                                    ),
                                ),
                                'mautic.stage.dashboard.subscriber' => array(
                                    'class' => 'Mautic\\StageBundle\\EventListener\\DashboardSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.stage.model.stage',
                                    ),
                                ),
                                'mautic.stage.stats.subscriber' => array(
                                    'class' => 'Mautic\\StageBundle\\EventListener\\StatsSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.stage.type.form' => array(
                                    'class' => 'Mautic\\StageBundle\\Form\\Type\\StageType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'stage',
                                ),
                                'mautic.stage.type.action' => array(
                                    'class' => 'Mautic\\StageBundle\\Form\\Type\\StageActionType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'stageaction',
                                ),
                                'mautic.stage.type.action_list' => array(
                                    'class' => 'Mautic\\StageBundle\\Form\\Type\\StageActionListType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'stageaction_list',
                                ),
                                'mautic.stage.type.action_change' => array(
                                    'class' => 'Mautic\\StageBundle\\Form\\Type\\StageActionChangeType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'stageaction_change',
                                ),
                                'mautic.stage.type.stage_list' => array(
                                    'class' => 'Mautic\\StageBundle\\Form\\Type\\StageListType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'stage_list',
                                ),
                                'mautic.point.type.genericstage_settings' => array(
                                    'class' => 'Mautic\\StageBundle\\Form\\Type\\GenericStageSettingsType',
                                    'alias' => 'genericstage_settings',
                                ),
                            ),
                            'models' => array(
                                'mautic.stage.model.stage' => array(
                                    'class' => 'Mautic\\StageBundle\\Model\\StageModel',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.lead',
                                        1 => 'session',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticUserBundle' => array(
                    'isPlugin' => false,
                    'base' => 'User',
                    'bundle' => 'UserBundle',
                    'namespace' => 'Mautic\\UserBundle',
                    'symfonyBundleName' => 'MauticUserBundle',
                    'bundleClass' => 'Mautic\\UserBundle\\MauticUserBundle',
                    'permissionClasses' => array(
                        'user' => '\\Mautic\\UserBundle\\Security\\Permissions\\UserPermissions',
                    ),
                    'relative' => 'app/bundles/UserBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/UserBundle'),
                    'config' => array(
                        'menu' => array(
                            'admin' => array(
                                'mautic.user.users' => array(
                                    'access' => 'user:users:view',
                                    'route' => 'mautic_user_index',
                                    'iconClass' => 'fa-users',
                                ),
                                'mautic.user.roles' => array(
                                    'access' => 'user:roles:view',
                                    'route' => 'mautic_role_index',
                                    'iconClass' => 'fa-lock',
                                ),
                            ),
                        ),
                        'routes' => array(
                            'main' => array(
                                'login' => array(
                                    'path' => '/login',
                                    'controller' => 'MauticUserBundle:Security:login',
                                ),
                                'mautic_user_logincheck' => array(
                                    'path' => '/login_check',
                                    'controller' => 'MauticUserBundle:Security:loginCheck',
                                ),
                                'mautic_user_logout' => array(
                                    'path' => '/logout',
                                ),
                                'mautic_sso_login' => array(
                                    'path' => '/sso_login/{integration}',
                                    'controller' => 'MauticUserBundle:Security:ssoLogin',
                                ),
                                'mautic_sso_login_check' => array(
                                    'path' => '/sso_login_check/{integration}',
                                    'controller' => 'MauticUserBundle:Security:ssoLoginCheck',
                                ),
                                'lightsaml_sp.login' => array(
                                    'path' => '/saml/login',
                                    'controller' => 'LightSamlSpBundle:Default:login',
                                ),
                                'lightsaml_sp.login_check' => array(
                                    'path' => '/saml/login_check',
                                ),
                                'mautic_user_index' => array(
                                    'path' => '/users/{page}',
                                    'controller' => 'MauticUserBundle:User:index',
                                ),
                                'mautic_user_action' => array(
                                    'path' => '/users/{objectAction}/{objectId}',
                                    'controller' => 'MauticUserBundle:User:execute',
                                ),
                                'mautic_role_index' => array(
                                    'path' => '/roles/{page}',
                                    'controller' => 'MauticUserBundle:Role:index',
                                ),
                                'mautic_role_action' => array(
                                    'path' => '/roles/{objectAction}/{objectId}',
                                    'controller' => 'MauticUserBundle:Role:execute',
                                ),
                                'mautic_user_account' => array(
                                    'path' => '/account',
                                    'controller' => 'MauticUserBundle:Profile:index',
                                ),
                            ),
                            'api' => array(
                                'mautic_api_usersstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'users',
                                    'path' => '/users',
                                    'controller' => 'MauticUserBundle:Api\\UserApi',
                                ),
                                'mautic_api_getself' => array(
                                    'path' => '/users/self',
                                    'controller' => 'MauticUserBundle:Api\\UserApi:getSelf',
                                ),
                                'mautic_api_checkpermission' => array(
                                    'path' => '/users/{id}/permissioncheck',
                                    'controller' => 'MauticUserBundle:Api\\UserApi:isGranted',
                                    'method' => 'POST',
                                ),
                                'mautic_api_getuserroles' => array(
                                    'path' => '/users/list/roles',
                                    'controller' => 'MauticUserBundle:Api\\UserApi:getRoles',
                                ),
                                'mautic_api_rolesstandard' => array(
                                    'standard_entity' => true,
                                    'name' => 'roles',
                                    'path' => '/roles',
                                    'controller' => 'MauticUserBundle:Api\\RoleApi',
                                ),
                            ),
                            'public' => array(
                                'mautic_user_passwordreset' => array(
                                    'path' => '/passwordreset',
                                    'controller' => 'MauticUserBundle:Public:passwordReset',
                                ),
                                'mautic_user_passwordresetconfirm' => array(
                                    'path' => '/passwordresetconfirm',
                                    'controller' => 'MauticUserBundle:Public:passwordResetConfirm',
                                ),
                                'lightsaml_sp.metadata' => array(
                                    'path' => '/saml/metadata.xml',
                                    'controller' => 'LightSamlSpBundle:Default:metadata',
                                ),
                                'lightsaml_sp.discovery' => array(
                                    'path' => '/saml/discovery',
                                    'controller' => 'LightSamlSpBundle:Default:discovery',
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.user.subscriber' => array(
                                    'class' => 'Mautic\\UserBundle\\EventListener\\UserSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                                'mautic.user.search.subscriber' => array(
                                    'class' => 'Mautic\\UserBundle\\EventListener\\SearchSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.user.model.user',
                                        1 => 'mautic.user.model.role',
                                    ),
                                ),
                                'mautic.user.config.subscriber' => array(
                                    'class' => 'Mautic\\UserBundle\\EventListener\\ConfigSubscriber',
                                ),
                                'mautic.user.route.subscriber' => array(
                                    'class' => 'Mautic\\UserBundle\\EventListener\\RouteSubscriber',
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.user' => array(
                                    'class' => 'Mautic\\UserBundle\\Form\\Type\\UserType',
                                    'arguments' => array(
                                        0 => 'translator',
                                        1 => 'doctrine.orm.entity_manager',
                                        2 => 'mautic.user.model.user',
                                        3 => 'mautic.helper.language',
                                        4 => 'mautic.helper.core_parameters',
                                    ),
                                    'alias' => 'user',
                                ),
                                'mautic.form.type.role' => array(
                                    'class' => 'Mautic\\UserBundle\\Form\\Type\\RoleType',
                                    'alias' => 'role',
                                ),
                                'mautic.form.type.permissions' => array(
                                    'class' => 'Mautic\\UserBundle\\Form\\Type\\PermissionsType',
                                    'alias' => 'permissions',
                                ),
                                'mautic.form.type.permissionlist' => array(
                                    'class' => 'Mautic\\UserBundle\\Form\\Type\\PermissionListType',
                                    'alias' => 'permissionlist',
                                ),
                                'mautic.form.type.passwordreset' => array(
                                    'class' => 'Mautic\\UserBundle\\Form\\Type\\PasswordResetType',
                                    'alias' => 'passwordreset',
                                ),
                                'mautic.form.type.passwordresetconfirm' => array(
                                    'class' => 'Mautic\\UserBundle\\Form\\Type\\PasswordResetConfirmType',
                                    'alias' => 'passwordresetconfirm',
                                ),
                                'mautic.form.type.user_list' => array(
                                    'class' => 'Mautic\\UserBundle\\Form\\Type\\UserListType',
                                    'arguments' => 'mautic.user.model.user',
                                    'alias' => 'user_list',
                                ),
                                'mautic.form.type.role_list' => array(
                                    'class' => 'Mautic\\UserBundle\\Form\\Type\\RoleListType',
                                    'arguments' => 'mautic.user.model.role',
                                    'alias' => 'role_list',
                                ),
                                'mautic.form.type.userconfig' => array(
                                    'class' => 'Mautic\\UserBundle\\Form\\Type\\ConfigType',
                                    'alias' => 'userconfig',
                                    'arguments' => array(
                                        0 => 'mautic.helper.core_parameters',
                                    ),
                                ),
                            ),
                            'other' => array(
                                'mautic.user.manager' => array(
                                    'class' => 'Doctrine\\ORM\\EntityManager',
                                    'arguments' => 'Mautic\\UserBundle\\Entity\\User',
                                    'factory' => array(
                                        0 => '@doctrine',
                                        1 => 'getManagerForClass',
                                    ),
                                ),
                                'mautic.user.repository' => array(
                                    'class' => 'Mautic\\UserBundle\\Entity\\UserRepository',
                                    'arguments' => 'Mautic\\UserBundle\\Entity\\User',
                                    'factory' => array(
                                        0 => '@mautic.user.manager',
                                        1 => 'getRepository',
                                    ),
                                ),
                                'mautic.permission.manager' => array(
                                    'class' => 'Doctrine\\ORM\\EntityManager',
                                    'arguments' => 'Mautic\\UserBundle\\Entity\\Permission',
                                    'factory' => array(
                                        0 => '@doctrine',
                                        1 => 'getManagerForClass',
                                    ),
                                ),
                                'mautic.permission.repository' => array(
                                    'class' => 'Mautic\\UserBundle\\Entity\\PermissionRepository',
                                    'arguments' => 'Mautic\\UserBundle\\Entity\\Permission',
                                    'factory' => array(
                                        0 => '@mautic.permission.manager',
                                        1 => 'getRepository',
                                    ),
                                ),
                                'mautic.user.form_authenticator' => array(
                                    'class' => 'Mautic\\UserBundle\\Security\\Authenticator\\FormAuthenticator',
                                    'arguments' => array(
                                        0 => 'mautic.helper.integration',
                                        1 => 'security.password_encoder',
                                        2 => 'event_dispatcher',
                                        3 => 'request_stack',
                                    ),
                                ),
                                'mautic.user.preauth_authenticator' => array(
                                    'class' => 'Mautic\\UserBundle\\Security\\Authenticator\\PreAuthAuthenticator',
                                    'arguments' => array(
                                        0 => 'mautic.helper.integration',
                                        1 => 'event_dispatcher',
                                        2 => 'request_stack',
                                        3 => '',
                                        4 => '',
                                    ),
                                    'public' => '',
                                ),
                                'mautic.user.provider' => array(
                                    'class' => 'Mautic\\UserBundle\\Security\\Provider\\UserProvider',
                                    'arguments' => array(
                                        0 => 'mautic.user.repository',
                                        1 => 'mautic.permission.repository',
                                        2 => 'session',
                                        3 => 'event_dispatcher',
                                        4 => 'security.encoder_factory',
                                    ),
                                ),
                                'mautic.security.authentication_listener' => array(
                                    'class' => 'Mautic\\UserBundle\\Security\\Firewall\\AuthenticationListener',
                                    'arguments' => array(
                                        0 => 'mautic.security.authentication_handler',
                                        1 => 'security.token_storage',
                                        2 => 'security.authentication.manager',
                                        3 => 'monolog.logger',
                                        4 => 'event_dispatcher',
                                        5 => '',
                                    ),
                                    'public' => '',
                                ),
                                'mautic.security.authentication_handler' => array(
                                    'class' => 'Mautic\\UserBundle\\Security\\Authentication\\AuthenticationHandler',
                                    'arguments' => array(
                                        0 => 'router',
                                        1 => 'session',
                                    ),
                                ),
                                'mautic.security.logout_handler' => array(
                                    'class' => 'Mautic\\UserBundle\\Security\\Authentication\\LogoutHandler',
                                    'arguments' => array(
                                        0 => 'mautic.user.model.user',
                                        1 => 'event_dispatcher',
                                        2 => 'mautic.helper.user',
                                    ),
                                ),
                                'mautic.security.saml.id_store' => array(
                                    'class' => 'Mautic\\UserBundle\\Security\\Store\\IdStore',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                        1 => 'lightsaml.system.time_provider',
                                    ),
                                ),
                                'mautic.security.saml.user_creator' => array(
                                    'class' => 'Mautic\\UserBundle\\Security\\User\\UserCreator',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                        1 => 'lightsaml_sp.username_mapper.simple',
                                        2 => 'mautic.user.model.user',
                                        3 => 'security.encoder_factory',
                                        4 => '%mautic.saml_idp_default_role%',
                                    ),
                                ),
                            ),
                            'models' => array(
                                'mautic.user.model.role' => array(
                                    'class' => 'Mautic\\UserBundle\\Model\\RoleModel',
                                ),
                                'mautic.user.model.user' => array(
                                    'class' => 'Mautic\\UserBundle\\Model\\UserModel',
                                    'arguments' => array(
                                        0 => 'mautic.helper.mailer',
                                    ),
                                ),
                            ),
                        ),
                        'parameters' => array(
                            'saml_idp_metadata' => '',
                            'saml_idp_entity_id' => '',
                            'saml_idp_own_certificate' => '',
                            'saml_idp_own_private_key' => '',
                            'saml_idp_own_password' => '',
                            'saml_idp_email_attribute' => '',
                            'saml_idp_username_attribute' => '',
                            'saml_idp_firstname_attribute' => '',
                            'saml_idp_lastname_attribute' => '',
                            'saml_idp_default_role' => '',
                        ),
                    ),
                ),
                'MauticWebhookBundle' => array(
                    'isPlugin' => false,
                    'base' => 'Webhook',
                    'bundle' => 'WebhookBundle',
                    'namespace' => 'Mautic\\WebhookBundle',
                    'symfonyBundleName' => 'MauticWebhookBundle',
                    'bundleClass' => 'Mautic\\WebhookBundle\\MauticWebhookBundle',
                    'permissionClasses' => array(
                        'webhook' => '\\Mautic\\WebhookBundle\\Security\\Permissions\\WebhookPermissions',
                    ),
                    'relative' => 'app/bundles/WebhookBundle',
                    'directory' => ($this->targetDirs[2].'/bundles/WebhookBundle'),
                    'config' => array(
                        'routes' => array(
                            'main' => array(
                                'mautic_webhook_index' => array(
                                    'path' => '/webhooks/{page}',
                                    'controller' => 'MauticWebhookBundle:Webhook:index',
                                ),
                                'mautic_webhook_action' => array(
                                    'path' => '/webhooks/{objectAction}/{objectId}',
                                    'controller' => 'MauticWebhookBundle:Webhook:execute',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'admin' => array(
                                'items' => array(
                                    'mautic.webhook.webhooks' => array(
                                        'id' => 'mautic_webhook_root',
                                        'iconClass' => 'fa-exchange',
                                        'access' => array(
                                            0 => 'webhook:webhooks:viewown',
                                            1 => 'webhook:webhooks:viewother',
                                        ),
                                        'route' => 'mautic_webhook_index',
                                    ),
                                ),
                            ),
                        ),
                        'services' => array(
                            'forms' => array(
                                'mautic.form.type.webhook' => array(
                                    'class' => 'Mautic\\WebhookBundle\\Form\\Type\\WebhookType',
                                    'arguments' => 'translator',
                                    'alias' => 'webhook',
                                ),
                                'mautic.form.type.webhookconfig' => array(
                                    'class' => 'Mautic\\WebhookBundle\\Form\\Type\\ConfigType',
                                    'alias' => 'webhookconfig',
                                ),
                            ),
                            'events' => array(
                                'mautic.webhook.config.subscriber' => array(
                                    'class' => 'Mautic\\WebhookBundle\\EventListener\\ConfigSubscriber',
                                ),
                                'mautic.webhook.audit.subscriber' => array(
                                    'class' => 'Mautic\\WebhookBundle\\EventListener\\WebhookSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.ip_lookup',
                                        1 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                                'mautic.webhook.stats.subscriber' => array(
                                    'class' => 'Mautic\\WebhookBundle\\EventListener\\StatsSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                ),
                            ),
                            'models' => array(
                                'mautic.webhook.model.webhook' => array(
                                    'class' => 'Mautic\\WebhookBundle\\Model\\WebhookModel',
                                    'arguments' => array(
                                        0 => 'mautic.helper.core_parameters',
                                        1 => 'jms_serializer',
                                    ),
                                ),
                            ),
                        ),
                        'parameters' => array(
                            'webhook_start' => 0,
                            'webhook_limit' => 1000,
                            'webhook_log_max' => 10,
                            'queue_mode' => 'immediate_process',
                        ),
                    ),
                ),
            ),
            'mautic.plugin.bundles' => array(
                'MauticTestBundle' => array(
                    'isPlugin' => true,
                    'base' => 'MauticTest',
                    'bundle' => 'MauticTestBundle',
                    'namespace' => 'MauticPlugin\\MauticTestBundle',
                    'symfonyBundleName' => 'MauticTestBundle',
                    'bundleClass' => 'MauticPlugin\\MauticTestBundle\\MauticTestBundle',
                    'permissionClasses' => array(

                    ),
                    'relative' => 'plugins/MauticTestBundle',
                    'directory' => ($this->targetDirs[3].'/plugins/MauticTestBundle'),
                    'config' => array(
                        'name' => 'Test Work',
                        'description' => 'This is test work plugin.',
                        'author' => 'Developer',
                        'version' => '1.0.0',
                        'routes' => array(
                            'main' => array(
                                'plugin_list_something' => array(
                                    'path' => '/list-something',
                                    'controller' => 'MauticTestBundle:Public:test',
                                ),
                                'plugin_create_something' => array(
                                    'path' => '/create-something',
                                    'controller' => 'MauticTestBundle:Public:createSomething',
                                ),
                                'plugin_delete_something' => array(
                                    'path' => '/delete-something/{somethingId}',
                                    'controller' => 'MauticTestBundle:Public:deleteSomething',
                                ),
                            ),
                        ),
                        'services' => array(
                            'models' => array(
                                'mautic.mautictest.model.something' => array(
                                    'class' => 'MauticPlugin\\MauticTestBundle\\Model\\SomethingModel',
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'test work' => array(
                                    'route' => 'plugin_list_something',
                                    'iconClass' => 'fa-gears',
                                    'access' => 'admin',
                                    'priority' => 10,
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticFullContactBundle' => array(
                    'isPlugin' => true,
                    'base' => 'MauticFullContact',
                    'bundle' => 'MauticFullContactBundle',
                    'namespace' => 'MauticPlugin\\MauticFullContactBundle',
                    'symfonyBundleName' => 'MauticFullContactBundle',
                    'bundleClass' => 'MauticPlugin\\MauticFullContactBundle\\MauticFullContactBundle',
                    'permissionClasses' => array(

                    ),
                    'relative' => 'plugins/MauticFullContactBundle',
                    'directory' => ($this->targetDirs[3].'/plugins/MauticFullContactBundle'),
                    'config' => array(
                        'name' => 'FullContact',
                        'description' => 'Enables integration with FullContact for contact and company lookup',
                        'version' => '1.0',
                        'author' => 'Werner Garcia',
                        'routes' => array(
                            'public' => array(
                                'mautic_plugin_fullcontact_index' => array(
                                    'path' => '/fullcontact/callback',
                                    'controller' => 'MauticFullContactBundle:Public:callback',
                                ),
                            ),
                            'main' => array(
                                'mautic_plugin_fullcontact_action' => array(
                                    'path' => '/fullcontact/{objectAction}/{objectId}',
                                    'controller' => 'MauticFullContactBundle:FullContact:execute',
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.plugin.fullcontact.button.subscriber' => array(
                                    'class' => 'MauticPlugin\\MauticFullContactBundle\\EventListener\\ButtonSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.integration',
                                    ),
                                ),
                                'mautic.plugin.fullcontact.lead.subscriber' => array(
                                    'class' => 'MauticPlugin\\MauticFullContactBundle\\EventListener\\LeadSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.plugin.fullcontact.lookup_helper',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.fullcontact_lookup' => array(
                                    'class' => 'MauticPlugin\\MauticFullContactBundle\\Form\\Type\\LookupType',
                                    'alias' => 'fullcontact_lookup',
                                ),
                                'mautic.form.type.fullcontact_batch_lookup' => array(
                                    'class' => 'MauticPlugin\\MauticFullContactBundle\\Form\\Type\\BatchLookupType',
                                    'alias' => 'fullcontact_batch_lookup',
                                ),
                            ),
                            'others' => array(
                                'mautic.plugin.fullcontact.lookup_helper' => array(
                                    'class' => 'MauticPlugin\\MauticFullContactBundle\\Helper\\LookupHelper',
                                    'arguments' => array(
                                        0 => 'mautic.helper.integration',
                                        1 => 'mautic.helper.user',
                                        2 => 'monolog.logger.mautic',
                                        3 => 'router',
                                        4 => 'mautic.lead.model.lead',
                                        5 => 'mautic.lead.model.company',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticCloudStorageBundle' => array(
                    'isPlugin' => true,
                    'base' => 'MauticCloudStorage',
                    'bundle' => 'MauticCloudStorageBundle',
                    'namespace' => 'MauticPlugin\\MauticCloudStorageBundle',
                    'symfonyBundleName' => 'MauticCloudStorageBundle',
                    'bundleClass' => 'MauticPlugin\\MauticCloudStorageBundle\\MauticCloudStorageBundle',
                    'permissionClasses' => array(

                    ),
                    'relative' => 'plugins/MauticCloudStorageBundle',
                    'directory' => ($this->targetDirs[3].'/plugins/MauticCloudStorageBundle'),
                    'config' => array(
                        'name' => 'Cloud Storage',
                        'description' => 'Enables integrations with Mautic supported cloud storage services.',
                        'version' => '1.0',
                        'author' => 'Mautic',
                        'services' => array(
                            'events' => array(
                                'mautic.cloudstorage.remoteassetbrowse.subscriber' => array(
                                    'class' => 'MauticPlugin\\MauticCloudStorageBundle\\EventListener\\RemoteAssetBrowseSubscriber',
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.cloudstorage.openstack' => array(
                                    'class' => 'MauticPlugin\\MauticCloudStorageBundle\\Form\\Type\\OpenStackType',
                                    'alias' => 'cloudstorage_openstack',
                                ),
                                'mautic.form.type.cloudstorage.rackspace' => array(
                                    'class' => 'MauticPlugin\\MauticCloudStorageBundle\\Form\\Type\\RackspaceType',
                                    'alias' => 'cloudstorage_rackspace',
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticEmailMarketingBundle' => array(
                    'isPlugin' => true,
                    'base' => 'MauticEmailMarketing',
                    'bundle' => 'MauticEmailMarketingBundle',
                    'namespace' => 'MauticPlugin\\MauticEmailMarketingBundle',
                    'symfonyBundleName' => 'MauticEmailMarketingBundle',
                    'bundleClass' => 'MauticPlugin\\MauticEmailMarketingBundle\\MauticEmailMarketingBundle',
                    'permissionClasses' => array(

                    ),
                    'relative' => 'plugins/MauticEmailMarketingBundle',
                    'directory' => ($this->targetDirs[3].'/plugins/MauticEmailMarketingBundle'),
                    'config' => array(
                        'name' => 'Email Marketing',
                        'description' => 'Enables integration with Mautic supported email marketing services.',
                        'version' => '1.0',
                        'author' => 'Mautic',
                        'services' => array(
                            'forms' => array(
                                'mautic.form.type.emailmarketing.mailchimp' => array(
                                    'class' => 'MauticPlugin\\MauticEmailMarketingBundle\\Form\\Type\\MailchimpType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'emailmarketing_mailchimp',
                                ),
                                'mautic.form.type.emailmarketing.constantcontact' => array(
                                    'class' => 'MauticPlugin\\MauticEmailMarketingBundle\\Form\\Type\\ConstantContactType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'emailmarketing_constantcontact',
                                ),
                                'mautic.form.type.emailmarketing.icontact' => array(
                                    'class' => 'MauticPlugin\\MauticEmailMarketingBundle\\Form\\Type\\IcontactType',
                                    'arguments' => 'mautic.factory',
                                    'alias' => 'emailmarketing_icontact',
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticGmailBundle' => array(
                    'isPlugin' => true,
                    'base' => 'MauticGmail',
                    'bundle' => 'MauticGmailBundle',
                    'namespace' => 'MauticPlugin\\MauticGmailBundle',
                    'symfonyBundleName' => 'MauticGmailBundle',
                    'bundleClass' => 'MauticPlugin\\MauticGmailBundle\\MauticGmailBundle',
                    'permissionClasses' => array(

                    ),
                    'relative' => 'plugins/MauticGmailBundle',
                    'directory' => ($this->targetDirs[3].'/plugins/MauticGmailBundle'),
                    'config' => array(
                        'name' => 'Gmail',
                        'description' => 'Enables integrations with Gmail for email tracking',
                        'version' => '1.0',
                        'author' => 'Werner Garcia',
                    ),
                ),
                'MauticCrmBundle' => array(
                    'isPlugin' => true,
                    'base' => 'MauticCrm',
                    'bundle' => 'MauticCrmBundle',
                    'namespace' => 'MauticPlugin\\MauticCrmBundle',
                    'symfonyBundleName' => 'MauticCrmBundle',
                    'bundleClass' => 'MauticPlugin\\MauticCrmBundle\\MauticCrmBundle',
                    'permissionClasses' => array(

                    ),
                    'relative' => 'plugins/MauticCrmBundle',
                    'directory' => ($this->targetDirs[3].'/plugins/MauticCrmBundle'),
                    'config' => array(
                        'name' => 'CRM',
                        'description' => 'Enables integration with Mautic supported CRMs.',
                        'version' => '1.0',
                        'author' => 'Mautic',
                        'routes' => array(
                            'public' => array(
                                'mautic_integration_contacts' => array(
                                    'path' => '/plugin/{integration}/contact_data',
                                    'controller' => 'MauticCrmBundle:Public:contactData',
                                    'requirements' => array(
                                        'integration' => '.+',
                                    ),
                                ),
                                'mautic_integration_companies' => array(
                                    'path' => '/plugin/{integration}/company_data',
                                    'controller' => 'MauticCrmBundle:Public:companyData',
                                    'requirements' => array(
                                        'integration' => '.+',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticFocusBundle' => array(
                    'isPlugin' => true,
                    'base' => 'MauticFocus',
                    'bundle' => 'MauticFocusBundle',
                    'namespace' => 'MauticPlugin\\MauticFocusBundle',
                    'symfonyBundleName' => 'MauticFocusBundle',
                    'bundleClass' => 'MauticPlugin\\MauticFocusBundle\\MauticFocusBundle',
                    'permissionClasses' => array(
                        'focus' => '\\MauticPlugin\\MauticFocusBundle\\Security\\Permissions\\FocusPermissions',
                    ),
                    'relative' => 'plugins/MauticFocusBundle',
                    'directory' => ($this->targetDirs[3].'/plugins/MauticFocusBundle'),
                    'config' => array(
                        'name' => 'Mautic Focus',
                        'description' => 'Drive visitor\'s focus on your website with Mautic Focus',
                        'version' => '1.0',
                        'author' => 'Mautic, Inc',
                        'routes' => array(
                            'main' => array(
                                'mautic_focus_index' => array(
                                    'path' => '/focus/{page}',
                                    'controller' => 'MauticFocusBundle:Focus:index',
                                ),
                                'mautic_focus_action' => array(
                                    'path' => '/focus/{objectAction}/{objectId}',
                                    'controller' => 'MauticFocusBundle:Focus:execute',
                                ),
                            ),
                            'public' => array(
                                'mautic_focus_generate' => array(
                                    'path' => '/focus/{id}.js',
                                    'controller' => 'MauticFocusBundle:Public:generate',
                                ),
                                'mautic_focus_pixel' => array(
                                    'path' => '/focus/{id}/viewpixel.gif',
                                    'controller' => 'MauticFocusBundle:Public:viewPixel',
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.focus.subscriber.form_bundle' => array(
                                    'class' => 'MauticPlugin\\MauticFocusBundle\\EventListener\\FormSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.focus.model.focus',
                                    ),
                                ),
                                'mautic.focus.subscriber.page_bundle' => array(
                                    'class' => 'MauticPlugin\\MauticFocusBundle\\EventListener\\PageSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.focus.model.focus',
                                        1 => 'router',
                                    ),
                                ),
                                'mautic.focus.subscriber.stat' => array(
                                    'class' => 'MauticPlugin\\MauticFocusBundle\\EventListener\\StatSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.focus.model.focus',
                                    ),
                                ),
                                'mautic.focus.subscriber.focus' => array(
                                    'class' => 'MauticPlugin\\MauticFocusBundle\\EventListener\\FocusSubscriber',
                                    'arguments' => array(
                                        0 => 'router',
                                        1 => 'mautic.helper.ip_lookup',
                                        2 => 'mautic.core.model.auditlog',
                                    ),
                                ),
                                'mautic.focus.stats.subscriber' => array(
                                    'class' => 'MauticPlugin\\MauticFocusBundle\\EventListener\\StatsSubscriber',
                                    'arguments' => array(
                                        0 => 'doctrine.orm.entity_manager',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.focus.form.type.color' => array(
                                    'class' => 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\ColorType',
                                    'alias' => 'focus_color',
                                ),
                                'mautic.focus.form.type.content' => array(
                                    'class' => 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\ContentType',
                                    'alias' => 'focus_content',
                                ),
                                'mautic.focus.form.type.focus' => array(
                                    'class' => 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\FocusType',
                                    'alias' => 'focus',
                                    'arguments' => 'mautic.security',
                                ),
                                'mautic.focus.form.type.entity_properties' => array(
                                    'class' => 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\PropertiesType',
                                    'alias' => 'focus_entity_properties',
                                ),
                                'mautic.focus.form.type.properties' => array(
                                    'class' => 'MauticPlugin\\MauticFocusBundle\\Form\\Type\\FocusPropertiesType',
                                    'alias' => 'focus_properties',
                                ),
                            ),
                            'models' => array(
                                'mautic.focus.model.focus' => array(
                                    'class' => 'MauticPlugin\\MauticFocusBundle\\Model\\FocusModel',
                                    'arguments' => array(
                                        0 => 'mautic.form.model.form',
                                        1 => 'mautic.page.model.trackable',
                                        2 => 'mautic.helper.templating',
                                    ),
                                ),
                            ),
                            'other' => array(
                                'mautic.focus.helper.token' => array(
                                    'class' => 'MauticPlugin\\MauticFocusBundle\\Helper\\TokenHelper',
                                    'arguments' => array(
                                        0 => 'mautic.focus.model.focus',
                                        1 => 'router',
                                    ),
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'mautic.focus' => array(
                                    'route' => 'mautic_focus_index',
                                    'access' => 'plugin:focus:items:view',
                                    'parent' => 'mautic.core.channels',
                                    'priority' => 10,
                                ),
                            ),
                        ),
                        'categories' => array(
                            'plugin:focus' => 'mautic.focus',
                        ),
                        'parameters' => array(
                            'website_snapshot_url' => 'https://mautic.net/api/snapshot',
                            'website_snapshot_key' => '',
                        ),
                    ),
                ),
                'MauticOutlookBundle' => array(
                    'isPlugin' => true,
                    'base' => 'MauticOutlook',
                    'bundle' => 'MauticOutlookBundle',
                    'namespace' => 'MauticPlugin\\MauticOutlookBundle',
                    'symfonyBundleName' => 'MauticOutlookBundle',
                    'bundleClass' => 'MauticPlugin\\MauticOutlookBundle\\MauticOutlookBundle',
                    'permissionClasses' => array(

                    ),
                    'relative' => 'plugins/MauticOutlookBundle',
                    'directory' => ($this->targetDirs[3].'/plugins/MauticOutlookBundle'),
                    'config' => array(
                        'name' => 'Outlook',
                        'description' => 'Enables integrations with Outlook for email tracking',
                        'version' => '1.0',
                        'author' => 'Mautic',
                    ),
                ),
                'MauticSocialBundle' => array(
                    'isPlugin' => true,
                    'base' => 'MauticSocial',
                    'bundle' => 'MauticSocialBundle',
                    'namespace' => 'MauticPlugin\\MauticSocialBundle',
                    'symfonyBundleName' => 'MauticSocialBundle',
                    'bundleClass' => 'MauticPlugin\\MauticSocialBundle\\MauticSocialBundle',
                    'permissionClasses' => array(
                        'mauticSocial' => '\\MauticPlugin\\MauticSocialBundle\\Security\\Permissions\\MauticSocialPermissions',
                    ),
                    'relative' => 'plugins/MauticSocialBundle',
                    'directory' => ($this->targetDirs[3].'/plugins/MauticSocialBundle'),
                    'config' => array(
                        'name' => 'Social Media',
                        'description' => 'Enables integrations with Mautic supported social media services.',
                        'version' => '1.0',
                        'author' => 'Mautic',
                        'routes' => array(
                            'main' => array(
                                'mautic_social_index' => array(
                                    'path' => '/monitoring/{page}',
                                    'controller' => 'MauticSocialBundle:Monitoring:index',
                                ),
                                'mautic_social_action' => array(
                                    'path' => '/monitoring/{objectAction}/{objectId}',
                                    'controller' => 'MauticSocialBundle:Monitoring:execute',
                                ),
                                'mautic_social_contacts' => array(
                                    'path' => '/monitoring/view/{objectId}/contacts/{page}',
                                    'controller' => 'MauticSocialBundle:Monitoring:contacts',
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.social.formbundle.subscriber' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\EventListener\\FormSubscriber',
                                ),
                                'mautic.social.campaignbundle.subscriber' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\EventListener\\CampaignSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.factory',
                                        1 => 'mautic.social.helper.campaign',
                                    ),
                                ),
                                'mautic.social.configbundle.subscriber' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\EventListener\\ConfigSubscriber',
                                ),
                                'mautic.social.subscriber.channel' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\EventListener\\ChannelSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.integration',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.social.sociallogin' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\SocialLoginType',
                                    'arguments' => array(
                                        0 => 'mautic.helper.integration',
                                        1 => 'mautic.form.model.form',
                                        2 => 'mautic.helper.core_parameters',
                                    ),
                                    'alias' => 'sociallogin',
                                ),
                                'mautic.form.type.social.facebook' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\FacebookType',
                                    'alias' => 'socialmedia_facebook',
                                ),
                                'mautic.form.type.social.twitter' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterType',
                                    'alias' => 'socialmedia_twitter',
                                ),
                                'mautic.form.type.social.googleplus' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\GooglePlusType',
                                    'alias' => 'socialmedia_googleplus',
                                ),
                                'mautic.form.type.social.linkedin' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\LinkedInType',
                                    'alias' => 'socialmedia_linkedin',
                                ),
                                'mautic.social.form.type.twitter.tweet' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TweetType',
                                    'alias' => 'twitter_tweet',
                                ),
                                'mautic.social.form.type.monitoring' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\MonitoringType',
                                    'alias' => 'monitoring',
                                ),
                                'mautic.social.form.type.network.twitter.abstract' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterAbstractType',
                                    'alias' => 'twitter_abstract',
                                ),
                                'mautic.social.form.type.network.twitter.hashtag' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterHashtagType',
                                    'alias' => 'twitter_hashtag',
                                ),
                                'mautic.social.form.type.network.twitter.mention' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterMentionType',
                                    'alias' => 'twitter_handle',
                                ),
                                'mautic.social.form.type.network.twitter.custom' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\TwitterCustomType',
                                    'alias' => 'twitter_custom',
                                ),
                                'mautic.social.config' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Form\\Type\\ConfigType',
                                    'alias' => 'social_config',
                                    'arguments' => 'mautic.lead.model.field',
                                ),
                            ),
                            'models' => array(
                                'mautic.social.model.monitoring' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Model\\MonitoringModel',
                                ),
                                'mautic.social.model.postcount' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Model\\PostCountModel',
                                ),
                            ),
                            'others' => array(
                                'mautic.social.helper.campaign' => array(
                                    'class' => 'MauticPlugin\\MauticSocialBundle\\Helper\\CampaignEventHelper',
                                    'arguments' => array(
                                        0 => 'mautic.helper.integration',
                                        1 => 'mautic.page.model.trackable',
                                        2 => 'mautic.page.helper.token',
                                        3 => 'mautic.asset.helper.token',
                                    ),
                                ),
                            ),
                        ),
                        'menu' => array(
                            'main' => array(
                                'mautic.social.monitoring' => array(
                                    'route' => 'mautic_social_index',
                                    'parent' => 'mautic.core.channels',
                                    'access' => 'plugin:mauticSocial:monitoring:view',
                                    'priority' => 0,
                                ),
                            ),
                        ),
                        'categories' => array(
                            'plugin:mauticSocial' => 'mautic.social.monitoring',
                        ),
                        'twitter' => array(
                            'tweet_request_count' => 100,
                        ),
                        'parameters' => array(
                            'twitter_handle_field' => 'twitter',
                        ),
                    ),
                ),
                'MauticCitrixBundle' => array(
                    'isPlugin' => true,
                    'base' => 'MauticCitrix',
                    'bundle' => 'MauticCitrixBundle',
                    'namespace' => 'MauticPlugin\\MauticCitrixBundle',
                    'symfonyBundleName' => 'MauticCitrixBundle',
                    'bundleClass' => 'MauticPlugin\\MauticCitrixBundle\\MauticCitrixBundle',
                    'permissionClasses' => array(

                    ),
                    'relative' => 'plugins/MauticCitrixBundle',
                    'directory' => ($this->targetDirs[3].'/plugins/MauticCitrixBundle'),
                    'config' => array(
                        'name' => 'Citrix',
                        'description' => 'Enables integration with Mautic supported Citrix collaboration products.',
                        'version' => '1.0',
                        'author' => 'Mautic',
                        'routes' => array(
                            'public' => array(
                                'mautic_citrix_proxy' => array(
                                    'path' => '/citrix/proxy',
                                    'controller' => 'MauticCitrixBundle:Public:proxy',
                                ),
                                'mautic_citrix_sessionchanged' => array(
                                    'path' => '/citrix/sessionChanged',
                                    'controller' => 'MauticCitrixBundle:Public:sessionChanged',
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.citrix.formbundle.subscriber' => array(
                                    'class' => 'MauticPlugin\\MauticCitrixBundle\\EventListener\\FormSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.citrix.model.citrix',
                                        1 => 'mautic.form.model.form',
                                        2 => 'mautic.form.model.submission',
                                    ),
                                    'methodCalls' => array(
                                        'setEmailModel' => array(
                                            0 => 'mautic.email.model.email',
                                        ),
                                    ),
                                ),
                                'mautic.citrix.leadbundle.subscriber' => array(
                                    'class' => 'MauticPlugin\\MauticCitrixBundle\\EventListener\\LeadSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.citrix.model.citrix',
                                    ),
                                ),
                                'mautic.citrix.campaignbundle.subscriber' => array(
                                    'class' => 'MauticPlugin\\MauticCitrixBundle\\EventListener\\CampaignSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.citrix.model.citrix',
                                    ),
                                    'methodCalls' => array(
                                        'setEmailModel' => array(
                                            0 => 'mautic.email.model.email',
                                        ),
                                    ),
                                ),
                                'mautic.citrix.emailbundle.subscriber' => array(
                                    'class' => 'MauticPlugin\\MauticCitrixBundle\\EventListener\\EmailSubscriber',
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.fieldslist.citrixlist' => array(
                                    'class' => 'MauticPlugin\\MauticCitrixBundle\\Form\\Type\\CitrixListType',
                                    'alias' => 'citrix_list',
                                ),
                                'mautic.form.type.citrix.submitaction' => array(
                                    'class' => 'MauticPlugin\\MauticCitrixBundle\\Form\\Type\\CitrixActionType',
                                    'alias' => 'citrix_submit_action',
                                    'arguments' => array(
                                        0 => 'mautic.form.model.field',
                                    ),
                                ),
                                'mautic.form.type.citrix.campaignevent' => array(
                                    'class' => 'MauticPlugin\\MauticCitrixBundle\\Form\\Type\\CitrixCampaignEventType',
                                    'alias' => 'citrix_campaign_event',
                                    'arguments' => array(
                                        0 => 'mautic.citrix.model.citrix',
                                        1 => 'translator',
                                    ),
                                ),
                                'mautic.form.type.citrix.campaignaction' => array(
                                    'class' => 'MauticPlugin\\MauticCitrixBundle\\Form\\Type\\CitrixCampaignActionType',
                                    'alias' => 'citrix_campaign_action',
                                    'arguments' => array(
                                        0 => 'translator',
                                    ),
                                ),
                            ),
                            'models' => array(
                                'mautic.citrix.model.citrix' => array(
                                    'class' => 'MauticPlugin\\MauticCitrixBundle\\Model\\CitrixModel',
                                    'arguments' => array(
                                        0 => 'mautic.lead.model.lead',
                                        1 => 'mautic.campaign.model.event',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                'MauticClearbitBundle' => array(
                    'isPlugin' => true,
                    'base' => 'MauticClearbit',
                    'bundle' => 'MauticClearbitBundle',
                    'namespace' => 'MauticPlugin\\MauticClearbitBundle',
                    'symfonyBundleName' => 'MauticClearbitBundle',
                    'bundleClass' => 'MauticPlugin\\MauticClearbitBundle\\MauticClearbitBundle',
                    'permissionClasses' => array(

                    ),
                    'relative' => 'plugins/MauticClearbitBundle',
                    'directory' => ($this->targetDirs[3].'/plugins/MauticClearbitBundle'),
                    'config' => array(
                        'name' => 'Clearbit',
                        'description' => 'Enables integration with Clearbit for contact and company lookup',
                        'version' => '1.0',
                        'author' => 'Werner Garcia',
                        'routes' => array(
                            'public' => array(
                                'mautic_plugin_clearbit_index' => array(
                                    'path' => '/clearbit/callback',
                                    'controller' => 'MauticClearbitBundle:Public:callback',
                                ),
                            ),
                            'main' => array(
                                'mautic_plugin_clearbit_action' => array(
                                    'path' => '/clearbit/{objectAction}/{objectId}',
                                    'controller' => 'MauticClearbitBundle:Clearbit:execute',
                                ),
                            ),
                        ),
                        'services' => array(
                            'events' => array(
                                'mautic.plugin.clearbit.button.subscriber' => array(
                                    'class' => 'MauticPlugin\\MauticClearbitBundle\\EventListener\\ButtonSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.helper.integration',
                                    ),
                                ),
                                'mautic.plugin.clearbit.lead.subscriber' => array(
                                    'class' => 'MauticPlugin\\MauticClearbitBundle\\EventListener\\LeadSubscriber',
                                    'arguments' => array(
                                        0 => 'mautic.plugin.clearbit.lookup_helper',
                                    ),
                                ),
                            ),
                            'forms' => array(
                                'mautic.form.type.clearbit_lookup' => array(
                                    'class' => 'MauticPlugin\\MauticClearbitBundle\\Form\\Type\\LookupType',
                                    'alias' => 'clearbit_lookup',
                                ),
                                'mautic.form.type.clearbit_batch_lookup' => array(
                                    'class' => 'MauticPlugin\\MauticClearbitBundle\\Form\\Type\\BatchLookupType',
                                    'alias' => 'clearbit_batch_lookup',
                                ),
                            ),
                            'others' => array(
                                'mautic.plugin.clearbit.lookup_helper' => array(
                                    'class' => 'MauticPlugin\\MauticClearbitBundle\\Helper\\LookupHelper',
                                    'arguments' => array(
                                        0 => 'mautic.helper.integration',
                                        1 => 'mautic.helper.user',
                                        2 => 'monolog.logger.mautic',
                                        3 => 'mautic.lead.model.lead',
                                        4 => 'mautic.lead.model.company',
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
            ),
            'mautic.ip_lookup_services' => array(
                'freegeoip' => array(
                    'display_name' => 'Freegeoip.net',
                    'class' => 'Mautic\\CoreBundle\\IpLookup\\FreegeoipLookup',
                ),
                'geobytes' => array(
                    'display_name' => 'Geobytes',
                    'class' => 'Mautic\\CoreBundle\\IpLookup\\GeobytesLookup',
                ),
                'geoips' => array(
                    'display_name' => 'GeoIPs',
                    'class' => 'Mautic\\CoreBundle\\IpLookup\\GeoipsLookup',
                ),
                'ipinfodb' => array(
                    'display_name' => 'IPInfoDB',
                    'class' => 'Mautic\\CoreBundle\\IpLookup\\IpinfodbLookup',
                ),
                'maxmind_country' => array(
                    'display_name' => 'MaxMind - Country Geolocation',
                    'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindCountryLookup',
                ),
                'maxmind_omni' => array(
                    'display_name' => 'MaxMind - Insights (formerly Omni]',
                    'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindOmniLookup',
                ),
                'maxmind_precision' => array(
                    'display_name' => 'MaxMind - GeoIP2 Precision',
                    'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindPrecisionLookup',
                ),
                'maxmind_download' => array(
                    'display_name' => 'MaxMind - GeoLite2 City Download',
                    'class' => 'Mautic\\CoreBundle\\IpLookup\\MaxmindDownloadLookup',
                ),
                'telize' => array(
                    'display_name' => 'Telize',
                    'class' => 'Mautic\\CoreBundle\\IpLookup\\TelizeLookup',
                ),
                'ip2loctionlocal' => array(
                    'display_name' => 'IP2Location Local Bin File',
                    'class' => 'Mautic\\CoreBundle\\IpLookup\\IP2LocationBinLookup',
                ),
                'ip2loctionapi' => array(
                    'display_name' => 'IP2Location Web Service',
                    'class' => 'Mautic\\CoreBundle\\IpLookup\\IP2LocationAPILookup',
                ),
            ),
            'mautic.site_url' => 'http://nautic.dev',
            'mautic.webroot' => '',
            'mautic.cache_path' => $this->targetDirs[1],
            'mautic.log_path' => ($this->targetDirs[2].'/logs'),
            'mautic.image_path' => 'media/images',
            'mautic.tmp_path' => $this->targetDirs[1],
            'mautic.theme' => 'Mauve',
            'mautic.db_driver' => 'pdo_mysql',
            'mautic.db_host' => 'localhost',
            'mautic.db_port' => '3306',
            'mautic.db_name' => 'mautic',
            'mautic.db_user' => 'root',
            'mautic.db_password' => 'root',
            'mautic.db_table_prefix' => NULL,
            'mautic.db_server_version' => '5.7.17-0ubuntu0.16.04.1',
            'mautic.locale' => 'en_US',
            'mautic.secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17',
            'mautic.dev_hosts' => NULL,
            'mautic.trusted_hosts' => NULL,
            'mautic.trusted_proxies' => NULL,
            'mautic.rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52',
            'mautic.rememberme_lifetime' => 31536000,
            'mautic.rememberme_path' => '/',
            'mautic.rememberme_domain' => '',
            'mautic.default_pagelimit' => 30,
            'mautic.default_timezone' => 'UTC',
            'mautic.date_format_full' => 'F j, Y g:i a T',
            'mautic.date_format_short' => 'D, M d',
            'mautic.date_format_dateonly' => 'F j, Y',
            'mautic.date_format_timeonly' => 'g:i a',
            'mautic.ip_lookup_service' => 'maxmind_download',
            'mautic.ip_lookup_auth' => '',
            'mautic.ip_lookup_config' => array(

            ),
            'mautic.transifex_username' => '',
            'mautic.transifex_password' => '',
            'mautic.update_stability' => 'stable',
            'mautic.cookie_path' => '/',
            'mautic.cookie_domain' => '',
            'mautic.cookie_secure' => NULL,
            'mautic.cookie_httponly' => false,
            'mautic.do_not_track_ips' => array(

            ),
            'mautic.do_not_track_bots' => array(
                0 => 'MSNBOT',
                1 => 'msnbot-media',
                2 => 'bingbot',
                3 => 'Googlebot',
                4 => 'Google Web Preview',
                5 => 'Mediapartners-Google',
                6 => 'Baiduspider',
                7 => 'Ezooms',
                8 => 'YahooSeeker',
                9 => 'Slurp',
                10 => 'AltaVista',
                11 => 'AVSearch',
                12 => 'Mercator',
                13 => 'Scooter',
                14 => 'InfoSeek',
                15 => 'Ultraseek',
                16 => 'Lycos',
                17 => 'Wget',
                18 => 'YandexBot',
                19 => 'Java/1.4.1_04',
                20 => 'SiteBot',
                21 => 'Exabot',
                22 => 'AhrefsBot',
                23 => 'MJ12bot',
                24 => 'NetSeer crawler',
                25 => 'TurnitinBot',
                26 => 'magpie-crawler',
                27 => 'Nutch Crawler',
                28 => 'CMS Crawler',
                29 => 'rogerbot',
                30 => 'Domnutch',
                31 => 'ssearch_bot',
                32 => 'XoviBot',
                33 => 'digincore',
                34 => 'fr-crawler',
                35 => 'SeznamBot',
                36 => 'Seznam screenshot-generator',
                37 => 'Facebot',
                38 => 'facebookexternalhit',
            ),
            'mautic.do_not_track_internal_ips' => array(

            ),
            'mautic.link_shortener_url' => NULL,
            'mautic.cached_data_timeout' => 10,
            'mautic.batch_sleep_time' => 1,
            'mautic.batch_campaign_sleep_time' => false,
            'mautic.cors_restrict_domains' => true,
            'mautic.cors_valid_domains' => array(

            ),
            'mautic.rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification',
            'mautic.api_enabled' => false,
            'mautic.api_enable_basic_auth' => false,
            'mautic.api_oauth2_access_token_lifetime' => 60,
            'mautic.api_oauth2_refresh_token_lifetime' => 14,
            'mautic.api_batch_max_limit' => 200,
            'mautic.upload_dir' => ($this->targetDirs[2].'/../media/files'),
            'mautic.max_size' => '6',
            'mautic.allowed_extensions' => array(
                0 => 'csv',
                1 => 'doc',
                2 => 'docx',
                3 => 'epub',
                4 => 'gif',
                5 => 'jpg',
                6 => 'jpeg',
                7 => 'mpg',
                8 => 'mpeg',
                9 => 'mp3',
                10 => 'odt',
                11 => 'odp',
                12 => 'ods',
                13 => 'pdf',
                14 => 'png',
                15 => 'ppt',
                16 => 'pptx',
                17 => 'tif',
                18 => 'tiff',
                19 => 'txt',
                20 => 'xls',
                21 => 'xlsx',
                22 => 'wav',
            ),
            'mautic.campaign_time_wait_on_event_false' => 'PT1H',
            'mautic.dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'),
            'mautic.dashboard_import_user_dir' => NULL,
            'mautic.mailer_api_key' => NULL,
            'mautic.mailer_from_name' => 'admin Admin',
            'mautic.mailer_from_email' => 'adminmail@mail.org.ua',
            'mautic.mailer_return_path' => NULL,
            'mautic.mailer_transport' => 'mail',
            'mautic.mailer_append_tracking_pixel' => true,
            'mautic.mailer_convert_embed_images' => false,
            'mautic.mailer_host' => NULL,
            'mautic.mailer_port' => NULL,
            'mautic.mailer_user' => NULL,
            'mautic.mailer_password' => NULL,
            'mautic.mailer_encryption' => NULL,
            'mautic.mailer_auth_mode' => NULL,
            'mautic.mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com',
            'mautic.mailer_spool_type' => 'memory',
            'mautic.mailer_spool_path' => ($this->targetDirs[2].'/spool'),
            'mautic.mailer_spool_msg_limit' => NULL,
            'mautic.mailer_spool_time_limit' => NULL,
            'mautic.mailer_spool_recover_timeout' => 900,
            'mautic.mailer_spool_clear_timeout' => 1800,
            'mautic.unsubscribe_text' => NULL,
            'mautic.webview_text' => NULL,
            'mautic.unsubscribe_message' => NULL,
            'mautic.resubscribe_message' => NULL,
            'mautic.monitored_email' => array(

            ),
            'mautic.mailer_is_owner' => false,
            'mautic.default_signature_text' => NULL,
            'mautic.email_frequency_number' => NULL,
            'mautic.email_frequency_time' => NULL,
            'mautic.show_contact_preferences' => false,
            'mautic.show_contact_frequency' => false,
            'mautic.show_contact_pause_dates' => false,
            'mautic.show_contact_preferred_channels' => false,
            'mautic.show_contact_categories' => false,
            'mautic.show_contact_segments' => false,
            'mautic.mailer_mailjet_sandbox' => false,
            'mautic.mailer_mailjet_sandbox_default_mail' => NULL,
            'mautic.notification_enabled' => false,
            'mautic.notification_landing_page_enabled' => true,
            'mautic.notification_app_id' => NULL,
            'mautic.notification_rest_api_key' => NULL,
            'mautic.notification_safari_web_id' => NULL,
            'mautic.gcm_sender_id' => '482941778795',
            'mautic.welcomenotification_enabled' => true,
            'mautic.cat_in_page_url' => false,
            'mautic.google_analytics' => false,
            'mautic.track_contact_by_ip' => false,
            'mautic.redirect_list_types' => array(
                301 => 'mautic.page.form.redirecttype.permanent',
                302 => 'mautic.page.form.redirecttype.temporary',
            ),
            'mautic.sms_enabled' => false,
            'mautic.sms_username' => NULL,
            'mautic.sms_password' => NULL,
            'mautic.sms_sending_phone_number' => NULL,
            'mautic.sms_frequency_number' => NULL,
            'mautic.sms_frequency_time' => NULL,
            'mautic.saml_idp_metadata' => '',
            'mautic.saml_idp_entity_id' => 'http://nautic.dev',
            'mautic.saml_idp_own_certificate' => '',
            'mautic.saml_idp_own_private_key' => '',
            'mautic.saml_idp_own_password' => '',
            'mautic.saml_idp_email_attribute' => '',
            'mautic.saml_idp_username_attribute' => '',
            'mautic.saml_idp_firstname_attribute' => '',
            'mautic.saml_idp_lastname_attribute' => '',
            'mautic.saml_idp_default_role' => '',
            'mautic.webhook_start' => 0,
            'mautic.webhook_limit' => 1000,
            'mautic.webhook_log_max' => 10,
            'mautic.queue_mode' => 'immediate_process',
            'mautic.website_snapshot_url' => 'https://mautic.net/api/snapshot',
            'mautic.website_snapshot_key' => '',
            'mautic.twitter_handle_field' => 'twitter',
            'mautic.supported_languages' => array(
                'en_US' => 'English - United States',
            ),
            'mautic.paths' => array(
                'themes' => 'themes',
                'assets' => 'media',
                'asset_prefix' => '',
                'plugins' => 'plugins',
                'translations' => 'translations',
                'local_config' => ($this->targetDirs[2].'/config/local.php'),
                'root' => $this->targetDirs[3],
                'app' => 'app',
                'bundles' => 'app/bundles',
                'vendor' => 'vendor',
            ),
            'mautic.parameters' => array(
                'site_url' => 'http://nautic.dev',
                'webroot' => '',
                'cache_path' => $this->targetDirs[1],
                'log_path' => ($this->targetDirs[2].'/logs'),
                'image_path' => 'media/images',
                'tmp_path' => $this->targetDirs[1],
                'theme' => 'Mauve',
                'db_driver' => 'pdo_mysql',
                'db_host' => 'localhost',
                'db_port' => '3306',
                'db_name' => 'mautic',
                'db_user' => 'root',
                'db_password' => 'root',
                'db_table_prefix' => NULL,
                'db_server_version' => '5.7.17-0ubuntu0.16.04.1',
                'locale' => 'en_US',
                'secret_key' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17',
                'dev_hosts' => NULL,
                'trusted_hosts' => NULL,
                'trusted_proxies' => NULL,
                'rememberme_key' => '2b8f10339af620f848a8683ad825be13e746de52',
                'rememberme_lifetime' => 31536000,
                'rememberme_path' => '/',
                'rememberme_domain' => '',
                'default_pagelimit' => 30,
                'default_timezone' => 'UTC',
                'date_format_full' => 'F j, Y g:i a T',
                'date_format_short' => 'D, M d',
                'date_format_dateonly' => 'F j, Y',
                'date_format_timeonly' => 'g:i a',
                'ip_lookup_service' => 'maxmind_download',
                'ip_lookup_auth' => '',
                'ip_lookup_config' => array(

                ),
                'transifex_username' => '',
                'transifex_password' => '',
                'update_stability' => 'stable',
                'cookie_path' => '/',
                'cookie_domain' => '',
                'cookie_secure' => NULL,
                'cookie_httponly' => false,
                'do_not_track_ips' => array(

                ),
                'do_not_track_bots' => array(
                    0 => 'MSNBOT',
                    1 => 'msnbot-media',
                    2 => 'bingbot',
                    3 => 'Googlebot',
                    4 => 'Google Web Preview',
                    5 => 'Mediapartners-Google',
                    6 => 'Baiduspider',
                    7 => 'Ezooms',
                    8 => 'YahooSeeker',
                    9 => 'Slurp',
                    10 => 'AltaVista',
                    11 => 'AVSearch',
                    12 => 'Mercator',
                    13 => 'Scooter',
                    14 => 'InfoSeek',
                    15 => 'Ultraseek',
                    16 => 'Lycos',
                    17 => 'Wget',
                    18 => 'YandexBot',
                    19 => 'Java/1.4.1_04',
                    20 => 'SiteBot',
                    21 => 'Exabot',
                    22 => 'AhrefsBot',
                    23 => 'MJ12bot',
                    24 => 'NetSeer crawler',
                    25 => 'TurnitinBot',
                    26 => 'magpie-crawler',
                    27 => 'Nutch Crawler',
                    28 => 'CMS Crawler',
                    29 => 'rogerbot',
                    30 => 'Domnutch',
                    31 => 'ssearch_bot',
                    32 => 'XoviBot',
                    33 => 'digincore',
                    34 => 'fr-crawler',
                    35 => 'SeznamBot',
                    36 => 'Seznam screenshot-generator',
                    37 => 'Facebot',
                    38 => 'facebookexternalhit',
                ),
                'do_not_track_internal_ips' => array(

                ),
                'link_shortener_url' => NULL,
                'cached_data_timeout' => 10,
                'batch_sleep_time' => 1,
                'batch_campaign_sleep_time' => false,
                'cors_restrict_domains' => true,
                'cors_valid_domains' => array(

                ),
                'rss_notification_url' => 'https://mautic.com/?feed=rss2&tag=notification',
                'api_enabled' => false,
                'api_enable_basic_auth' => false,
                'api_oauth2_access_token_lifetime' => 60,
                'api_oauth2_refresh_token_lifetime' => 14,
                'api_batch_max_limit' => 200,
                'upload_dir' => ($this->targetDirs[2].'/../media/files'),
                'max_size' => '6',
                'allowed_extensions' => array(
                    0 => 'csv',
                    1 => 'doc',
                    2 => 'docx',
                    3 => 'epub',
                    4 => 'gif',
                    5 => 'jpg',
                    6 => 'jpeg',
                    7 => 'mpg',
                    8 => 'mpeg',
                    9 => 'mp3',
                    10 => 'odt',
                    11 => 'odp',
                    12 => 'ods',
                    13 => 'pdf',
                    14 => 'png',
                    15 => 'ppt',
                    16 => 'pptx',
                    17 => 'tif',
                    18 => 'tiff',
                    19 => 'txt',
                    20 => 'xls',
                    21 => 'xlsx',
                    22 => 'wav',
                ),
                'campaign_time_wait_on_event_false' => 'PT1H',
                'dashboard_import_dir' => ($this->targetDirs[2].'/../media/dashboards'),
                'dashboard_import_user_dir' => NULL,
                'mailer_api_key' => NULL,
                'mailer_from_name' => 'admin Admin',
                'mailer_from_email' => 'adminmail@mail.org.ua',
                'mailer_return_path' => NULL,
                'mailer_transport' => 'mail',
                'mailer_append_tracking_pixel' => true,
                'mailer_convert_embed_images' => false,
                'mailer_host' => NULL,
                'mailer_port' => NULL,
                'mailer_user' => NULL,
                'mailer_password' => NULL,
                'mailer_encryption' => NULL,
                'mailer_auth_mode' => NULL,
                'mailer_amazon_region' => 'email-smtp.us-east-1.amazonaws.com',
                'mailer_spool_type' => 'memory',
                'mailer_spool_path' => ($this->targetDirs[2].'/spool'),
                'mailer_spool_msg_limit' => NULL,
                'mailer_spool_time_limit' => NULL,
                'mailer_spool_recover_timeout' => 900,
                'mailer_spool_clear_timeout' => 1800,
                'unsubscribe_text' => NULL,
                'webview_text' => NULL,
                'unsubscribe_message' => NULL,
                'resubscribe_message' => NULL,
                'monitored_email' => array(

                ),
                'mailer_is_owner' => false,
                'default_signature_text' => NULL,
                'email_frequency_number' => NULL,
                'email_frequency_time' => NULL,
                'show_contact_preferences' => false,
                'show_contact_frequency' => false,
                'show_contact_pause_dates' => false,
                'show_contact_preferred_channels' => false,
                'show_contact_categories' => false,
                'show_contact_segments' => false,
                'mailer_mailjet_sandbox' => false,
                'mailer_mailjet_sandbox_default_mail' => NULL,
                'notification_enabled' => false,
                'notification_landing_page_enabled' => true,
                'notification_app_id' => NULL,
                'notification_rest_api_key' => NULL,
                'notification_safari_web_id' => NULL,
                'gcm_sender_id' => '482941778795',
                'welcomenotification_enabled' => true,
                'cat_in_page_url' => false,
                'google_analytics' => false,
                'track_contact_by_ip' => false,
                'redirect_list_types' => array(
                    301 => 'mautic.page.form.redirecttype.permanent',
                    302 => 'mautic.page.form.redirecttype.temporary',
                ),
                'sms_enabled' => false,
                'sms_username' => NULL,
                'sms_password' => NULL,
                'sms_sending_phone_number' => NULL,
                'sms_frequency_number' => NULL,
                'sms_frequency_time' => NULL,
                'saml_idp_metadata' => '',
                'saml_idp_entity_id' => '',
                'saml_idp_own_certificate' => '',
                'saml_idp_own_private_key' => '',
                'saml_idp_own_password' => '',
                'saml_idp_email_attribute' => '',
                'saml_idp_username_attribute' => '',
                'saml_idp_firstname_attribute' => '',
                'saml_idp_lastname_attribute' => '',
                'saml_idp_default_role' => '',
                'webhook_start' => 0,
                'webhook_limit' => 1000,
                'webhook_log_max' => 10,
                'queue_mode' => 'immediate_process',
                'website_snapshot_url' => 'https://mautic.net/api/snapshot',
                'website_snapshot_key' => '',
                'twitter_handle_field' => 'twitter',
                'supported_languages' => array(
                    'en_US' => 'English - United States',
                ),
                'paths' => array(
                    'themes' => 'themes',
                    'assets' => 'media',
                    'asset_prefix' => '',
                    'plugins' => 'plugins',
                    'translations' => 'translations',
                    'local_config' => ($this->targetDirs[2].'/config/local.php'),
                    'root' => $this->targetDirs[3],
                    'app' => 'app',
                    'bundles' => 'app/bundles',
                    'vendor' => 'vendor',
                ),
            ),
            'router.request_context.host' => 'nautic.dev',
            'router.request_context.scheme' => 'http',
            'router.request_context.base_url' => '',
            'jms_serializer.camel_case_naming_strategy.class' => 'JMS\\Serializer\\Naming\\IdenticalPropertyNamingStrategy',
            'console_exception_listener.class' => 'Mautic\\CoreBundle\\EventListener\\ConsoleExceptionListener',
            'console_terminate_listener.class' => 'Mautic\\CoreBundle\\EventListener\\ConsoleTerminateListener',
            'mautic.security.restrictedconfigfields' => array(
                0 => 'db_driver',
                1 => 'db_host',
                2 => 'db_table_prefix',
                3 => 'db_name',
                4 => 'db_user',
                5 => 'db_password',
                6 => 'db_path',
                7 => 'db_port',
                8 => 'secret_key',
            ),
            'mautic.security.disableupdates' => false,
            'controller_resolver.class' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\ControllerResolver',
            'controller_name_converter.class' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\ControllerNameParser',
            'response_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\ResponseListener',
            'streamed_response_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\StreamedResponseListener',
            'locale_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener',
            'event_dispatcher.class' => 'Symfony\\Component\\EventDispatcher\\ContainerAwareEventDispatcher',
            'http_kernel.class' => 'Symfony\\Component\\HttpKernel\\DependencyInjection\\ContainerAwareHttpKernel',
            'filesystem.class' => 'Symfony\\Component\\Filesystem\\Filesystem',
            'cache_warmer.class' => 'Symfony\\Component\\HttpKernel\\CacheWarmer\\CacheWarmerAggregate',
            'cache_clearer.class' => 'Symfony\\Component\\HttpKernel\\CacheClearer\\ChainCacheClearer',
            'file_locator.class' => 'Symfony\\Component\\HttpKernel\\Config\\FileLocator',
            'uri_signer.class' => 'Symfony\\Component\\HttpKernel\\UriSigner',
            'request_stack.class' => 'Symfony\\Component\\HttpFoundation\\RequestStack',
            'fragment.handler.class' => 'Symfony\\Component\\HttpKernel\\DependencyInjection\\LazyLoadingFragmentHandler',
            'fragment.renderer.inline.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\InlineFragmentRenderer',
            'fragment.renderer.hinclude.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\HIncludeFragmentRenderer',
            'fragment.renderer.hinclude.global_template' => NULL,
            'fragment.renderer.esi.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\EsiFragmentRenderer',
            'fragment.path' => '/_fragment',
            'translator.class' => 'Mautic\\CoreBundle\\Translation\\Translator',
            'translator.identity.class' => 'Symfony\\Component\\Translation\\IdentityTranslator',
            'translator.selector.class' => 'Symfony\\Component\\Translation\\MessageSelector',
            'translation.loader.php.class' => 'Symfony\\Component\\Translation\\Loader\\PhpFileLoader',
            'translation.loader.yml.class' => 'Symfony\\Component\\Translation\\Loader\\YamlFileLoader',
            'translation.loader.xliff.class' => 'Symfony\\Component\\Translation\\Loader\\XliffFileLoader',
            'translation.loader.po.class' => 'Symfony\\Component\\Translation\\Loader\\PoFileLoader',
            'translation.loader.mo.class' => 'Symfony\\Component\\Translation\\Loader\\MoFileLoader',
            'translation.loader.qt.class' => 'Symfony\\Component\\Translation\\Loader\\QtFileLoader',
            'translation.loader.csv.class' => 'Symfony\\Component\\Translation\\Loader\\CsvFileLoader',
            'translation.loader.res.class' => 'Symfony\\Component\\Translation\\Loader\\IcuResFileLoader',
            'translation.loader.dat.class' => 'Symfony\\Component\\Translation\\Loader\\IcuDatFileLoader',
            'translation.loader.ini.class' => 'Symfony\\Component\\Translation\\Loader\\IniFileLoader',
            'translation.loader.json.class' => 'Symfony\\Component\\Translation\\Loader\\JsonFileLoader',
            'translation.dumper.php.class' => 'Symfony\\Component\\Translation\\Dumper\\PhpFileDumper',
            'translation.dumper.xliff.class' => 'Symfony\\Component\\Translation\\Dumper\\XliffFileDumper',
            'translation.dumper.po.class' => 'Symfony\\Component\\Translation\\Dumper\\PoFileDumper',
            'translation.dumper.mo.class' => 'Symfony\\Component\\Translation\\Dumper\\MoFileDumper',
            'translation.dumper.yml.class' => 'Symfony\\Component\\Translation\\Dumper\\YamlFileDumper',
            'translation.dumper.qt.class' => 'Symfony\\Component\\Translation\\Dumper\\QtFileDumper',
            'translation.dumper.csv.class' => 'Symfony\\Component\\Translation\\Dumper\\CsvFileDumper',
            'translation.dumper.ini.class' => 'Symfony\\Component\\Translation\\Dumper\\IniFileDumper',
            'translation.dumper.json.class' => 'Symfony\\Component\\Translation\\Dumper\\JsonFileDumper',
            'translation.dumper.res.class' => 'Symfony\\Component\\Translation\\Dumper\\IcuResFileDumper',
            'translation.extractor.php.class' => 'Symfony\\Bundle\\FrameworkBundle\\Translation\\PhpExtractor',
            'translation.loader.class' => 'Symfony\\Bundle\\FrameworkBundle\\Translation\\TranslationLoader',
            'translation.extractor.class' => 'Symfony\\Component\\Translation\\Extractor\\ChainExtractor',
            'translation.writer.class' => 'Symfony\\Component\\Translation\\Writer\\TranslationWriter',
            'property_accessor.class' => 'Symfony\\Component\\PropertyAccess\\PropertyAccessor',
            'kernel.secret' => '81c3ce9a055b8b0a9433dab18ba8176595bc69d33de555a956959814eabe7d17',
            'kernel.http_method_override' => true,
            'kernel.trusted_hosts' => array(

            ),
            'kernel.trusted_proxies' => array(

            ),
            'kernel.default_locale' => 'en_US',
            'session.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Session',
            'session.flashbag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Flash\\FlashBag',
            'session.attribute_bag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag',
            'session.storage.metadata_bag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\MetadataBag',
            'session.metadata.storage_key' => '_sf2_meta',
            'session.storage.native.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\NativeSessionStorage',
            'session.storage.php_bridge.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\PhpBridgeSessionStorage',
            'session.storage.mock_file.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\MockFileSessionStorage',
            'session.handler.native_file.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\NativeFileSessionHandler',
            'session.handler.write_check.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\WriteCheckSessionHandler',
            'session_listener.class' => 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\SessionListener',
            'session.storage.options' => array(
                'name' => 'eef8347ab0ab5a3c47c64690bceb92aa',
                'cookie_httponly' => true,
                'gc_probability' => 1,
            ),
            'session.save_path' => (__DIR__.'/sessions'),
            'session.metadata.update_threshold' => '0',
            'security.secure_random.class' => 'Symfony\\Component\\Security\\Core\\Util\\SecureRandom',
            'form.resolved_type_factory.class' => 'Symfony\\Component\\Form\\ResolvedFormTypeFactory',
            'form.registry.class' => 'Symfony\\Component\\Form\\FormRegistry',
            'form.factory.class' => 'Symfony\\Component\\Form\\FormFactory',
            'form.extension.class' => 'Symfony\\Component\\Form\\Extension\\DependencyInjection\\DependencyInjectionExtension',
            'form.type_guesser.validator.class' => 'Symfony\\Component\\Form\\Extension\\Validator\\ValidatorTypeGuesser',
            'form.type_extension.form.request_handler.class' => 'Symfony\\Component\\Form\\Extension\\HttpFoundation\\HttpFoundationRequestHandler',
            'form.type_extension.csrf.enabled' => true,
            'form.type_extension.csrf.field_name' => '_token',
            'security.csrf.token_generator.class' => 'Symfony\\Component\\Security\\Csrf\\TokenGenerator\\UriSafeTokenGenerator',
            'security.csrf.token_storage.class' => 'Symfony\\Component\\Security\\Csrf\\TokenStorage\\SessionTokenStorage',
            'security.csrf.token_manager.class' => 'Symfony\\Component\\Security\\Csrf\\CsrfTokenManager',
            'templating.engine.delegating.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\DelegatingEngine',
            'templating.name_parser.class' => 'Mautic\\CoreBundle\\Templating\\TemplateNameParser',
            'templating.filename_parser.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\TemplateFilenameParser',
            'templating.cache_warmer.template_paths.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\TemplatePathsCacheWarmer',
            'templating.locator.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Loader\\TemplateLocator',
            'templating.loader.filesystem.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Loader\\FilesystemLoader',
            'templating.loader.cache.class' => 'Symfony\\Component\\Templating\\Loader\\CacheLoader',
            'templating.loader.chain.class' => 'Symfony\\Component\\Templating\\Loader\\ChainLoader',
            'templating.finder.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\TemplateFinder',
            'templating.helper.assets.class' => 'Mautic\\CoreBundle\\Templating\\Helper\\AssetsHelper',
            'templating.helper.router.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\RouterHelper',
            'templating.helper.code.file_link_format' => NULL,
            'templating.loader.cache.path' => NULL,
            'templating.engines' => array(
                0 => 'php',
                1 => 'twig',
            ),
            'templating.engine.php.class' => 'Mautic\\CoreBundle\\Templating\\Engine\\PhpEngine',
            'templating.helper.slots.class' => 'Mautic\\CoreBundle\\Templating\\Helper\\SlotsHelper',
            'templating.helper.actions.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\ActionsHelper',
            'templating.helper.request.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\RequestHelper',
            'templating.helper.session.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\SessionHelper',
            'templating.helper.code.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\CodeHelper',
            'templating.helper.translator.class' => 'Mautic\\CoreBundle\\Templating\\Helper\\TranslatorHelper',
            'templating.helper.form.class' => 'Mautic\\CoreBundle\\Templating\\Helper\\FormHelper',
            'templating.helper.stopwatch.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\StopwatchHelper',
            'templating.form.engine.class' => 'Symfony\\Component\\Form\\Extension\\Templating\\TemplatingRendererEngine',
            'templating.form.renderer.class' => 'Symfony\\Component\\Form\\FormRenderer',
            'templating.globals.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\GlobalVariables',
            'templating.helper.form.resources' => array(
                0 => 'FrameworkBundle:Form',
                1 => 'MauticCoreBundle:FormTheme\\Custom',
            ),
            'debug.templating.engine.php.class' => 'Mautic\\CoreBundle\\Templating\\Engine\\PhpEngine',
            'validator.class' => 'Symfony\\Component\\Validator\\Validator\\ValidatorInterface',
            'validator.builder.class' => 'Symfony\\Component\\Validator\\ValidatorBuilderInterface',
            'validator.builder.factory.class' => 'Symfony\\Component\\Validator\\Validation',
            'validator.mapping.cache.apc.class' => 'Symfony\\Component\\Validator\\Mapping\\Cache\\ApcCache',
            'validator.mapping.cache.prefix' => '',
            'validator.validator_factory.class' => 'Symfony\\Bundle\\FrameworkBundle\\Validator\\ConstraintValidatorFactory',
            'validator.expression.class' => 'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator',
            'validator.email.class' => 'Symfony\\Component\\Validator\\Constraints\\EmailValidator',
            'validator.translation_domain' => 'validators',
            'validator.api' => '2.5-bc',
            'fragment.listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\FragmentListener',
            'translator.logging' => true,
            'profiler.class' => 'Symfony\\Component\\HttpKernel\\Profiler\\Profiler',
            'profiler_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\ProfilerListener',
            'data_collector.config.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\ConfigDataCollector',
            'data_collector.request.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\RequestDataCollector',
            'data_collector.exception.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\ExceptionDataCollector',
            'data_collector.events.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\EventDataCollector',
            'data_collector.logger.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\LoggerDataCollector',
            'data_collector.time.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\TimeDataCollector',
            'data_collector.memory.class' => 'Symfony\\Component\\HttpKernel\\DataCollector\\MemoryDataCollector',
            'data_collector.router.class' => 'Symfony\\Bundle\\FrameworkBundle\\DataCollector\\RouterDataCollector',
            'form.resolved_type_factory.data_collector_proxy.class' => 'Symfony\\Component\\Form\\Extension\\DataCollector\\Proxy\\ResolvedTypeFactoryDataCollectorProxy',
            'form.type_extension.form.data_collector.class' => 'Symfony\\Component\\Form\\Extension\\DataCollector\\Type\\DataCollectorTypeExtension',
            'data_collector.form.class' => 'Symfony\\Component\\Form\\Extension\\DataCollector\\FormDataCollector',
            'data_collector.form.extractor.class' => 'Symfony\\Component\\Form\\Extension\\DataCollector\\FormDataExtractor',
            'profiler_listener.only_exceptions' => false,
            'profiler_listener.only_master_requests' => false,
            'profiler.storage.dsn' => ('file:'.__DIR__.'/profiler'),
            'profiler.storage.username' => '',
            'profiler.storage.password' => '',
            'profiler.storage.lifetime' => 86400,
            'router.class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\Router',
            'router.request_context.class' => 'Symfony\\Component\\Routing\\RequestContext',
            'routing.loader.class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\DelegatingLoader',
            'routing.resolver.class' => 'Symfony\\Component\\Config\\Loader\\LoaderResolver',
            'routing.loader.xml.class' => 'Symfony\\Component\\Routing\\Loader\\XmlFileLoader',
            'routing.loader.yml.class' => 'Symfony\\Component\\Routing\\Loader\\YamlFileLoader',
            'routing.loader.php.class' => 'Symfony\\Component\\Routing\\Loader\\PhpFileLoader',
            'router.options.generator_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator',
            'router.options.generator_base_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator',
            'router.options.generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper',
            'router.options.matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher',
            'router.options.matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher',
            'router.options.matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper',
            'router.cache_warmer.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\RouterCacheWarmer',
            'router.options.matcher.cache_class' => 'appDevDebugProjectContainerUrlMatcher',
            'router.options.generator.cache_class' => 'appDevDebugProjectContainerUrlGenerator',
            'router_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\RouterListener',
            'router.resource' => ($this->targetDirs[2].'/config/routing_dev.php'),
            'router.cache_class_prefix' => 'appDevDebugProjectContainer',
            'request_listener.http_port' => 80,
            'request_listener.https_port' => 443,
            'annotations.reader.class' => 'Doctrine\\Common\\Annotations\\AnnotationReader',
            'annotations.cached_reader.class' => 'Doctrine\\Common\\Annotations\\CachedReader',
            'annotations.file_cache_reader.class' => 'Doctrine\\Common\\Annotations\\FileCacheReader',
            'debug.debug_handlers_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\DebugHandlersListener',
            'debug.stopwatch.class' => 'Symfony\\Component\\Stopwatch\\Stopwatch',
            'debug.error_handler.throw_at' => -1,
            'debug.event_dispatcher.class' => 'Symfony\\Component\\HttpKernel\\Debug\\TraceableEventDispatcher',
            'debug.container.dump' => (__DIR__.'/appDevDebugProjectContainer.xml'),
            'debug.controller_resolver.class' => 'Symfony\\Component\\HttpKernel\\Controller\\TraceableControllerResolver',
            'security.context.class' => 'Symfony\\Component\\Security\\Core\\SecurityContext',
            'security.user_checker.class' => 'Symfony\\Component\\Security\\Core\\User\\UserChecker',
            'security.encoder_factory.generic.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory',
            'security.encoder.digest.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder',
            'security.encoder.plain.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\PlaintextPasswordEncoder',
            'security.encoder.pbkdf2.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\Pbkdf2PasswordEncoder',
            'security.encoder.bcrypt.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\BCryptPasswordEncoder',
            'security.user.provider.in_memory.class' => 'Symfony\\Component\\Security\\Core\\User\\InMemoryUserProvider',
            'security.user.provider.in_memory.user.class' => 'Symfony\\Component\\Security\\Core\\User\\User',
            'security.user.provider.chain.class' => 'Symfony\\Component\\Security\\Core\\User\\ChainUserProvider',
            'security.authentication.trust_resolver.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationTrustResolver',
            'security.authentication.trust_resolver.anonymous_class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken',
            'security.authentication.trust_resolver.rememberme_class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken',
            'security.authentication.manager.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationProviderManager',
            'security.authentication.session_strategy.class' => 'Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategy',
            'security.access.decision_manager.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManager',
            'security.access.simple_role_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\RoleVoter',
            'security.access.authenticated_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\AuthenticatedVoter',
            'security.access.role_hierarchy_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\RoleHierarchyVoter',
            'security.access.expression_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\ExpressionVoter',
            'security.firewall.class' => 'Symfony\\Component\\Security\\Http\\Firewall',
            'security.firewall.map.class' => 'Symfony\\Bundle\\SecurityBundle\\Security\\FirewallMap',
            'security.firewall.context.class' => 'Symfony\\Bundle\\SecurityBundle\\Security\\FirewallContext',
            'security.matcher.class' => 'Symfony\\Component\\HttpFoundation\\RequestMatcher',
            'security.expression_matcher.class' => 'Symfony\\Component\\HttpFoundation\\ExpressionRequestMatcher',
            'security.role_hierarchy.class' => 'Symfony\\Component\\Security\\Core\\Role\\RoleHierarchy',
            'security.http_utils.class' => 'Symfony\\Component\\Security\\Http\\HttpUtils',
            'security.validator.user_password.class' => 'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator',
            'security.expression_language.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\ExpressionLanguage',
            'security.role_hierarchy.roles' => array(
                'ROLE_ADMIN' => array(
                    0 => 'ROLE_USER',
                ),
            ),
            'security.authentication.retry_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\RetryAuthenticationEntryPoint',
            'security.channel_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\ChannelListener',
            'security.authentication.form_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\FormAuthenticationEntryPoint',
            'security.authentication.listener.form.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\UsernamePasswordFormAuthenticationListener',
            'security.authentication.listener.simple_form.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SimpleFormAuthenticationListener',
            'security.authentication.listener.simple_preauth.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SimplePreAuthenticationListener',
            'security.authentication.listener.basic.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\BasicAuthenticationListener',
            'security.authentication.basic_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\BasicAuthenticationEntryPoint',
            'security.authentication.listener.digest.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\DigestAuthenticationListener',
            'security.authentication.digest_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\DigestAuthenticationEntryPoint',
            'security.authentication.listener.x509.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\X509AuthenticationListener',
            'security.authentication.listener.anonymous.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\AnonymousAuthenticationListener',
            'security.authentication.switchuser_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SwitchUserListener',
            'security.logout_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\LogoutListener',
            'security.logout.handler.session.class' => 'Symfony\\Component\\Security\\Http\\Logout\\SessionLogoutHandler',
            'security.logout.handler.cookie_clearing.class' => 'Symfony\\Component\\Security\\Http\\Logout\\CookieClearingLogoutHandler',
            'security.logout.success_handler.class' => 'Symfony\\Component\\Security\\Http\\Logout\\DefaultLogoutSuccessHandler',
            'security.access_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\AccessListener',
            'security.access_map.class' => 'Symfony\\Component\\Security\\Http\\AccessMap',
            'security.exception_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\ExceptionListener',
            'security.context_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\ContextListener',
            'security.authentication.provider.dao.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\DaoAuthenticationProvider',
            'security.authentication.provider.simple.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\SimpleAuthenticationProvider',
            'security.authentication.provider.pre_authenticated.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\PreAuthenticatedAuthenticationProvider',
            'security.authentication.provider.anonymous.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\AnonymousAuthenticationProvider',
            'security.authentication.success_handler.class' => 'Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationSuccessHandler',
            'security.authentication.failure_handler.class' => 'Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationFailureHandler',
            'security.authentication.simple_success_failure_handler.class' => 'Symfony\\Component\\Security\\Http\\Authentication\\SimpleAuthenticationHandler',
            'security.authentication.provider.rememberme.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\RememberMeAuthenticationProvider',
            'security.authentication.listener.rememberme.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\RememberMeListener',
            'security.rememberme.token.provider.in_memory.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\RememberMe\\InMemoryTokenProvider',
            'security.authentication.rememberme.services.persistent.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\PersistentTokenBasedRememberMeServices',
            'security.authentication.rememberme.services.simplehash.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\TokenBasedRememberMeServices',
            'security.rememberme.response_listener.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener',
            'templating.helper.logout_url.class' => 'Symfony\\Bundle\\SecurityBundle\\Templating\\Helper\\LogoutUrlHelper',
            'templating.helper.security.class' => 'Symfony\\Bundle\\SecurityBundle\\Templating\\Helper\\SecurityHelper',
            'twig.extension.logout_url.class' => 'Symfony\\Bridge\\Twig\\Extension\\LogoutUrlExtension',
            'twig.extension.security.class' => 'Symfony\\Bridge\\Twig\\Extension\\SecurityExtension',
            'data_collector.security.class' => 'Symfony\\Bundle\\SecurityBundle\\DataCollector\\SecurityDataCollector',
            'security.access.denied_url' => NULL,
            'security.authentication.manager.erase_credentials' => true,
            'security.authentication.session_strategy.strategy' => 'migrate',
            'security.access.always_authenticate_before_granting' => false,
            'security.authentication.hide_user_not_found' => true,
            'monolog.logger.class' => 'Symfony\\Bridge\\Monolog\\Logger',
            'monolog.gelf.publisher.class' => 'Gelf\\MessagePublisher',
            'monolog.gelfphp.publisher.class' => 'Gelf\\Publisher',
            'monolog.handler.stream.class' => 'Mautic\\CoreBundle\\Monolog\\Handler\\PhpHandler',
            'monolog.handler.console.class' => 'Symfony\\Bridge\\Monolog\\Handler\\ConsoleHandler',
            'monolog.handler.group.class' => 'Monolog\\Handler\\GroupHandler',
            'monolog.handler.buffer.class' => 'Monolog\\Handler\\BufferHandler',
            'monolog.handler.deduplication.class' => 'Monolog\\Handler\\DeduplicationHandler',
            'monolog.handler.rotating_file.class' => 'Monolog\\Handler\\RotatingFileHandler',
            'monolog.handler.syslog.class' => 'Monolog\\Handler\\SyslogHandler',
            'monolog.handler.syslogudp.class' => 'Monolog\\Handler\\SyslogUdpHandler',
            'monolog.handler.null.class' => 'Monolog\\Handler\\NullHandler',
            'monolog.handler.test.class' => 'Monolog\\Handler\\TestHandler',
            'monolog.handler.gelf.class' => 'Monolog\\Handler\\GelfHandler',
            'monolog.handler.rollbar.class' => 'Monolog\\Handler\\RollbarHandler',
            'monolog.handler.flowdock.class' => 'Monolog\\Handler\\FlowdockHandler',
            'monolog.handler.browser_console.class' => 'Monolog\\Handler\\BrowserConsoleHandler',
            'monolog.handler.firephp.class' => 'Symfony\\Bridge\\Monolog\\Handler\\FirePHPHandler',
            'monolog.handler.chromephp.class' => 'Symfony\\Bridge\\Monolog\\Handler\\ChromePhpHandler',
            'monolog.handler.debug.class' => 'Symfony\\Bridge\\Monolog\\Handler\\DebugHandler',
            'monolog.handler.swift_mailer.class' => 'Symfony\\Bridge\\Monolog\\Handler\\SwiftMailerHandler',
            'monolog.handler.native_mailer.class' => 'Monolog\\Handler\\NativeMailerHandler',
            'monolog.handler.socket.class' => 'Monolog\\Handler\\SocketHandler',
            'monolog.handler.pushover.class' => 'Monolog\\Handler\\PushoverHandler',
            'monolog.handler.raven.class' => 'Monolog\\Handler\\RavenHandler',
            'monolog.handler.newrelic.class' => 'Monolog\\Handler\\NewRelicHandler',
            'monolog.handler.hipchat.class' => 'Monolog\\Handler\\HipChatHandler',
            'monolog.handler.slack.class' => 'Monolog\\Handler\\SlackHandler',
            'monolog.handler.cube.class' => 'Monolog\\Handler\\CubeHandler',
            'monolog.handler.amqp.class' => 'Monolog\\Handler\\AmqpHandler',
            'monolog.handler.error_log.class' => 'Monolog\\Handler\\ErrorLogHandler',
            'monolog.handler.loggly.class' => 'Monolog\\Handler\\LogglyHandler',
            'monolog.handler.logentries.class' => 'Monolog\\Handler\\LogEntriesHandler',
            'monolog.handler.whatfailuregroup.class' => 'Monolog\\Handler\\WhatFailureGroupHandler',
            'monolog.activation_strategy.not_found.class' => 'Symfony\\Bundle\\MonologBundle\\NotFoundActivationStrategy',
            'monolog.handler.fingers_crossed.class' => 'Monolog\\Handler\\FingersCrossedHandler',
            'monolog.handler.fingers_crossed.error_level_activation_strategy.class' => 'Monolog\\Handler\\FingersCrossed\\ErrorLevelActivationStrategy',
            'monolog.handler.filter.class' => 'Monolog\\Handler\\FilterHandler',
            'monolog.handler.mongo.class' => 'Monolog\\Handler\\MongoDBHandler',
            'monolog.mongo.client.class' => 'MongoClient',
            'monolog.handler.elasticsearch.class' => 'Monolog\\Handler\\ElasticSearchHandler',
            'monolog.elastica.client.class' => 'Elastica\\Client',
            'monolog.use_microseconds' => true,
            'monolog.swift_mailer.handlers' => array(

            ),
            'monolog.handlers_to_channels' => array(
                'monolog.handler.chrome' => array(
                    'type' => 'inclusive',
                    'elements' => array(
                        0 => 'chrome',
                    ),
                ),
                'monolog.handler.mautic' => array(
                    'type' => 'inclusive',
                    'elements' => array(
                        0 => 'mautic',
                    ),
                ),
                'monolog.handler.console' => NULL,
                'monolog.handler.main' => array(
                    'type' => 'exclusive',
                    'elements' => array(
                        0 => 'mautic',
                    ),
                ),
            ),
            'swiftmailer.class' => 'Swift_Mailer',
            'swiftmailer.transport.sendmail.class' => 'Swift_Transport_SendmailTransport',
            'swiftmailer.transport.mail.class' => 'Swift_Transport_MailTransport',
            'swiftmailer.transport.failover.class' => 'Swift_Transport_FailoverTransport',
            'swiftmailer.plugin.redirecting.class' => 'Swift_Plugins_RedirectingPlugin',
            'swiftmailer.plugin.impersonate.class' => 'Swift_Plugins_ImpersonatePlugin',
            'swiftmailer.plugin.messagelogger.class' => 'Swift_Plugins_MessageLogger',
            'swiftmailer.plugin.antiflood.class' => 'Swift_Plugins_AntiFloodPlugin',
            'swiftmailer.transport.smtp.class' => 'Swift_Transport_EsmtpTransport',
            'swiftmailer.plugin.blackhole.class' => 'Swift_Plugins_BlackholePlugin',
            'swiftmailer.spool.file.class' => 'Swift_FileSpool',
            'swiftmailer.spool.memory.class' => 'Swift_MemorySpool',
            'swiftmailer.email_sender.listener.class' => 'Symfony\\Bundle\\SwiftmailerBundle\\EventListener\\EmailSenderListener',
            'swiftmailer.data_collector.class' => 'Symfony\\Bundle\\SwiftmailerBundle\\DataCollector\\MessageDataCollector',
            'swiftmailer.mailer.default.transport.name' => 'mail',
            'swiftmailer.mailer.default.delivery.enabled' => true,
            'swiftmailer.mailer.default.transport.smtp.encryption' => NULL,
            'swiftmailer.mailer.default.transport.smtp.port' => 25,
            'swiftmailer.mailer.default.transport.smtp.host' => NULL,
            'swiftmailer.mailer.default.transport.smtp.username' => NULL,
            'swiftmailer.mailer.default.transport.smtp.password' => NULL,
            'swiftmailer.mailer.default.transport.smtp.auth_mode' => NULL,
            'swiftmailer.mailer.default.transport.smtp.timeout' => 30,
            'swiftmailer.mailer.default.transport.smtp.source_ip' => NULL,
            'swiftmailer.mailer.default.transport.smtp.local_domain' => NULL,
            'swiftmailer.mailer.default.spool.enabled' => false,
            'swiftmailer.mailer.default.plugin.impersonate' => NULL,
            'swiftmailer.mailer.default.single_address' => NULL,
            'swiftmailer.spool.enabled' => false,
            'swiftmailer.delivery.enabled' => true,
            'swiftmailer.single_address' => NULL,
            'swiftmailer.mailers' => array(
                'default' => 'swiftmailer.mailer.default',
            ),
            'swiftmailer.default_mailer' => 'default',
            'doctrine_cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine_cache.apcu.class' => 'Doctrine\\Common\\Cache\\ApcuCache',
            'doctrine_cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine_cache.chain.class' => 'Doctrine\\Common\\Cache\\ChainCache',
            'doctrine_cache.couchbase.class' => 'Doctrine\\Common\\Cache\\CouchbaseCache',
            'doctrine_cache.couchbase.connection.class' => 'Couchbase',
            'doctrine_cache.couchbase.hostnames' => 'localhost:8091',
            'doctrine_cache.file_system.class' => 'Doctrine\\Common\\Cache\\FilesystemCache',
            'doctrine_cache.php_file.class' => 'Doctrine\\Common\\Cache\\PhpFileCache',
            'doctrine_cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine_cache.memcache.connection.class' => 'Memcache',
            'doctrine_cache.memcache.host' => 'localhost',
            'doctrine_cache.memcache.port' => 11211,
            'doctrine_cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine_cache.memcached.connection.class' => 'Memcached',
            'doctrine_cache.memcached.host' => 'localhost',
            'doctrine_cache.memcached.port' => 11211,
            'doctrine_cache.mongodb.class' => 'Doctrine\\Common\\Cache\\MongoDBCache',
            'doctrine_cache.mongodb.collection.class' => 'MongoCollection',
            'doctrine_cache.mongodb.connection.class' => 'MongoClient',
            'doctrine_cache.mongodb.server' => 'localhost:27017',
            'doctrine_cache.predis.client.class' => 'Predis\\Client',
            'doctrine_cache.predis.scheme' => 'tcp',
            'doctrine_cache.predis.host' => 'localhost',
            'doctrine_cache.predis.port' => 6379,
            'doctrine_cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine_cache.redis.connection.class' => 'Redis',
            'doctrine_cache.redis.host' => 'localhost',
            'doctrine_cache.redis.port' => 6379,
            'doctrine_cache.riak.class' => 'Doctrine\\Common\\Cache\\RiakCache',
            'doctrine_cache.riak.bucket.class' => 'Riak\\Bucket',
            'doctrine_cache.riak.connection.class' => 'Riak\\Connection',
            'doctrine_cache.riak.bucket_property_list.class' => 'Riak\\BucketPropertyList',
            'doctrine_cache.riak.host' => 'localhost',
            'doctrine_cache.riak.port' => 8087,
            'doctrine_cache.sqlite3.class' => 'Doctrine\\Common\\Cache\\SQLite3Cache',
            'doctrine_cache.sqlite3.connection.class' => 'SQLite3',
            'doctrine_cache.void.class' => 'Doctrine\\Common\\Cache\\VoidCache',
            'doctrine_cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine_cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine_cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine_cache.security.acl.cache.class' => 'Doctrine\\Bundle\\DoctrineCacheBundle\\Acl\\Model\\AclCache',
            'doctrine.dbal.logger.chain.class' => 'Doctrine\\DBAL\\Logging\\LoggerChain',
            'doctrine.dbal.logger.profiling.class' => 'Doctrine\\DBAL\\Logging\\DebugStack',
            'doctrine.dbal.logger.class' => 'Symfony\\Bridge\\Doctrine\\Logger\\DbalLogger',
            'doctrine.dbal.configuration.class' => 'Doctrine\\DBAL\\Configuration',
            'doctrine.data_collector.class' => 'Doctrine\\Bundle\\DoctrineBundle\\DataCollector\\DoctrineDataCollector',
            'doctrine.dbal.connection.event_manager.class' => 'Symfony\\Bridge\\Doctrine\\ContainerAwareEventManager',
            'doctrine.dbal.connection_factory.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ConnectionFactory',
            'doctrine.dbal.events.mysql_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\MysqlSessionInit',
            'doctrine.dbal.events.oracle_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\OracleSessionInit',
            'doctrine.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Registry',
            'doctrine.entity_managers' => array(
                'default' => 'doctrine.orm.default_entity_manager',
            ),
            'doctrine.default_entity_manager' => 'default',
            'doctrine.dbal.connection_factory.types' => array(
                'array' => array(
                    'class' => 'Mautic\\CoreBundle\\Doctrine\\Type\\ArrayType',
                    'commented' => true,
                ),
                'datetime' => array(
                    'class' => 'Mautic\\CoreBundle\\Doctrine\\Type\\UTCDateTimeType',
                    'commented' => true,
                ),
            ),
            'doctrine.connections' => array(
                'default' => 'doctrine.dbal.default_connection',
            ),
            'doctrine.default_connection' => 'default',
            'doctrine.orm.configuration.class' => 'Doctrine\\ORM\\Configuration',
            'doctrine.orm.entity_manager.class' => 'Doctrine\\ORM\\EntityManager',
            'doctrine.orm.manager_configurator.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ManagerConfigurator',
            'doctrine.orm.cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine.orm.cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine.orm.cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine.orm.cache.memcache_host' => 'localhost',
            'doctrine.orm.cache.memcache_port' => 11211,
            'doctrine.orm.cache.memcache_instance.class' => 'Memcache',
            'doctrine.orm.cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine.orm.cache.memcached_host' => 'localhost',
            'doctrine.orm.cache.memcached_port' => 11211,
            'doctrine.orm.cache.memcached_instance.class' => 'Memcached',
            'doctrine.orm.cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine.orm.cache.redis_host' => 'localhost',
            'doctrine.orm.cache.redis_port' => 6379,
            'doctrine.orm.cache.redis_instance.class' => 'Redis',
            'doctrine.orm.cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine.orm.cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine.orm.cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine.orm.metadata.driver_chain.class' => 'Doctrine\\Common\\Persistence\\Mapping\\Driver\\MappingDriverChain',
            'doctrine.orm.metadata.annotation.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver',
            'doctrine.orm.metadata.xml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver',
            'doctrine.orm.metadata.yml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver',
            'doctrine.orm.metadata.php.class' => 'Doctrine\\ORM\\Mapping\\Driver\\PHPDriver',
            'doctrine.orm.metadata.staticphp.class' => 'Doctrine\\ORM\\Mapping\\Driver\\StaticPHPDriver',
            'doctrine.orm.proxy_cache_warmer.class' => 'Symfony\\Bridge\\Doctrine\\CacheWarmer\\ProxyCacheWarmer',
            'form.type_guesser.doctrine.class' => 'Symfony\\Bridge\\Doctrine\\Form\\DoctrineOrmTypeGuesser',
            'doctrine.orm.validator.unique.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator',
            'doctrine.orm.validator_initializer.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\DoctrineInitializer',
            'doctrine.orm.security.user.provider.class' => 'Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider',
            'doctrine.orm.listeners.resolve_target_entity.class' => 'Doctrine\\ORM\\Tools\\ResolveTargetEntityListener',
            'doctrine.orm.listeners.attach_entity_listeners.class' => 'Doctrine\\ORM\\Tools\\AttachEntityListenersListener',
            'doctrine.orm.naming_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultNamingStrategy',
            'doctrine.orm.naming_strategy.underscore.class' => 'Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy',
            'doctrine.orm.quote_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy',
            'doctrine.orm.quote_strategy.ansi.class' => 'Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy',
            'doctrine.orm.entity_listener_resolver.class' => 'Doctrine\\ORM\\Mapping\\DefaultEntityListenerResolver',
            'doctrine.orm.second_level_cache.default_cache_factory.class' => 'Doctrine\\ORM\\Cache\\DefaultCacheFactory',
            'doctrine.orm.second_level_cache.default_region.class' => 'Doctrine\\ORM\\Cache\\Region\\DefaultRegion',
            'doctrine.orm.second_level_cache.filelock_region.class' => 'Doctrine\\ORM\\Cache\\Region\\FileLockRegion',
            'doctrine.orm.second_level_cache.logger_chain.class' => 'Doctrine\\ORM\\Cache\\Logging\\CacheLoggerChain',
            'doctrine.orm.second_level_cache.logger_statistics.class' => 'Doctrine\\ORM\\Cache\\Logging\\StatisticsCacheLogger',
            'doctrine.orm.second_level_cache.cache_configuration.class' => 'Doctrine\\ORM\\Cache\\CacheConfiguration',
            'doctrine.orm.second_level_cache.regions_configuration.class' => 'Doctrine\\ORM\\Cache\\RegionsConfiguration',
            'doctrine.orm.auto_generate_proxy_classes' => true,
            'doctrine.orm.proxy_dir' => (__DIR__.'/doctrine/orm/Proxies'),
            'doctrine.orm.proxy_namespace' => 'Proxies',
            'doctrine_migrations.dir_name' => ($this->targetDirs[2].'/migrations'),
            'doctrine_migrations.namespace' => 'Mautic\\Migrations',
            'doctrine_migrations.table_name' => 'migrations',
            'doctrine_migrations.name' => 'Mautic Migrations',
            'knp_menu.factory.class' => 'Knp\\Menu\\MenuFactory',
            'knp_menu.factory_extension.routing.class' => 'Knp\\Menu\\Integration\\Symfony\\RoutingExtension',
            'knp_menu.helper.class' => 'Knp\\Menu\\Twig\\Helper',
            'knp_menu.matcher.class' => 'Knp\\Menu\\Matcher\\Matcher',
            'knp_menu.menu_provider.chain.class' => 'Knp\\Menu\\Provider\\ChainProvider',
            'knp_menu.menu_provider.container_aware.class' => 'Knp\\Bundle\\MenuBundle\\Provider\\ContainerAwareProvider',
            'knp_menu.menu_provider.builder_alias.class' => 'Knp\\Bundle\\MenuBundle\\Provider\\BuilderAliasProvider',
            'knp_menu.renderer_provider.class' => 'Knp\\Bundle\\MenuBundle\\Renderer\\ContainerAwareProvider',
            'knp_menu.renderer.list.class' => 'Knp\\Menu\\Renderer\\ListRenderer',
            'knp_menu.renderer.list.options' => array(

            ),
            'knp_menu.listener.voters.class' => 'Knp\\Bundle\\MenuBundle\\EventListener\\VoterInitializerListener',
            'knp_menu.voter.router.class' => 'Knp\\Menu\\Matcher\\Voter\\RouteVoter',
            'knp_menu.templating.helper.class' => 'Knp\\Bundle\\MenuBundle\\Templating\\Helper\\MenuHelper',
            'knp_menu.default_renderer' => 'mautic',
            'fos_oauth_server.server.class' => 'OAuth2\\OAuth2',
            'fos_oauth_server.security.authentication.provider.class' => 'FOS\\OAuthServerBundle\\Security\\Authentication\\Provider\\OAuthProvider',
            'fos_oauth_server.security.authentication.listener.class' => 'Mautic\\ApiBundle\\Security\\OAuth2\\Firewall\\OAuthListener',
            'fos_oauth_server.security.entry_point.class' => 'FOS\\OAuthServerBundle\\Security\\EntryPoint\\OAuthEntryPoint',
            'fos_oauth_server.server.options' => array(
                'access_token_lifetime' => 3600,
                'refresh_token_lifetime' => 1209600,
            ),
            'fos_oauth_server.model_manager_name' => NULL,
            'fos_oauth_server.model.client.class' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\Client',
            'fos_oauth_server.model.access_token.class' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\AccessToken',
            'fos_oauth_server.model.refresh_token.class' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\RefreshToken',
            'fos_oauth_server.model.auth_code.class' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\AuthCode',
            'fos_oauth_server.template.engine' => 'php',
            'fos_oauth_server.authorize.form.type' => 'FOS\\OAuthServerBundle\\Form\\Type\\AuthorizeFormType',
            'fos_oauth_server.authorize.form.name' => 'fos_oauth_server_authorize_form',
            'fos_oauth_server.authorize.form.validation_groups' => array(
                0 => 'Authorize',
                1 => 'Default',
            ),
            'bazinga.oauth.controller.server.class' => 'Bazinga\\OAuthServerBundle\\Controller\\ServerController',
            'bazinga.oauth.controller.login.class' => 'Bazinga\\OAuthServerBundle\\Controller\\LoginController',
            'bazinga.oauth.server_service.oauth.class' => 'Bazinga\\OAuthServerBundle\\Service\\OAuthServerService',
            'bazinga.oauth.server_service.xauth.class' => 'Bazinga\\OAuthServerBundle\\Service\\XAuthServerService',
            'bazinga.oauth.signature.plaintext.class' => 'Bazinga\\OAuthServerBundle\\Service\\Signature\\OAuthPlainTextSignature',
            'bazinga.oauth.signature.hmac_sha1.class' => 'Bazinga\\OAuthServerBundle\\Service\\Signature\\OAuthHmacSha1Signature',
            'bazinga.oauth.security.authentication.provider.class' => 'Mautic\\ApiBundle\\Security\\OAuth1\\Authentication\\Provider\\OAuthProvider',
            'bazinga.oauth.security.authentication.listener.class' => 'Mautic\\ApiBundle\\Security\\OAuth1\\Firewall\\OAuthListener',
            'bazinga.oauth.event_listener.request.class' => 'Mautic\\ApiBundle\\EventListener\\OAuth1\\OAuthRequestListener',
            'bazinga.oauth.event_listener.exception.class' => 'Bazinga\\OAuthServerBundle\\EventListener\\OAuthExceptionListener',
            'bazinga.oauth.provider.consumer_provider.class' => 'Bazinga\\OAuthServerBundle\\Doctrine\\Provider\\ConsumerProvider',
            'bazinga.oauth.provider.token_provider.class' => 'Bazinga\\OAuthServerBundle\\Doctrine\\Provider\\TokenProvider',
            'bazinga.oauth.backend_type_orm' => true,
            'bazinga.oauth.model.consumer.class' => 'Mautic\\ApiBundle\\Entity\\oAuth1\\Consumer',
            'bazinga.oauth.model.request_token.class' => 'Mautic\\ApiBundle\\Entity\\oAuth1\\RequestToken',
            'bazinga.oauth.model.access_token.class' => 'Mautic\\ApiBundle\\Entity\\oAuth1\\AccessToken',
            'bazinga.oauth.model_manager_name' => NULL,
            'fos_rest.serializer.exclusion_strategy.version' => '',
            'fos_rest.serializer.exclusion_strategy.groups' => array(

            ),
            'fos_rest.view_handler.jsonp.callback_param' => '',
            'fos_rest.view.exception_wrapper_handler' => 'FOS\\RestBundle\\View\\ExceptionWrapperHandler',
            'fos_rest.view_handler.default.class' => 'FOS\\RestBundle\\View\\ViewHandler',
            'fos_rest.view_handler.jsonp.class' => 'FOS\\RestBundle\\View\\JsonpHandler',
            'fos_rest.serializer.exception_wrapper_serialize_handler.class' => 'FOS\\RestBundle\\Serializer\\ExceptionWrapperSerializeHandler',
            'fos_rest.routing.loader.controller.class' => 'FOS\\RestBundle\\Routing\\Loader\\RestRouteLoader',
            'fos_rest.routing.loader.yaml_collection.class' => 'FOS\\RestBundle\\Routing\\Loader\\RestYamlCollectionLoader',
            'fos_rest.routing.loader.xml_collection.class' => 'FOS\\RestBundle\\Routing\\Loader\\RestXmlCollectionLoader',
            'fos_rest.routing.loader.processor.class' => 'FOS\\RestBundle\\Routing\\Loader\\RestRouteProcessor',
            'fos_rest.routing.loader.reader.controller.class' => 'FOS\\RestBundle\\Routing\\Loader\\Reader\\RestControllerReader',
            'fos_rest.routing.loader.reader.action.class' => 'FOS\\RestBundle\\Routing\\Loader\\Reader\\RestActionReader',
            'fos_rest.format_negotiator.class' => 'FOS\\RestBundle\\Negotiation\\FormatNegotiator',
            'fos_rest.inflector.class' => 'FOS\\RestBundle\\Inflector\\DoctrineInflector',
            'fos_rest.request_matcher.class' => 'Symfony\\Component\\HttpFoundation\\RequestMatcher',
            'fos_rest.violation_formatter.class' => 'FOS\\RestBundle\\Util\\ViolationFormatter',
            'fos_rest.request.param_fetcher.class' => 'FOS\\RestBundle\\Request\\ParamFetcher',
            'fos_rest.request.param_fetcher.reader.class' => 'FOS\\RestBundle\\Request\\ParamReader',
            'fos_rest.cache_dir' => (__DIR__.'/fos_rest'),
            'fos_rest.routing.loader.default_format' => 'json',
            'fos_rest.routing.loader.include_format' => false,
            'fos_rest.form.extension.csrf_disable.class' => 'FOS\\RestBundle\\Form\\Extension\\DisableCSRFExtension',
            'fos_rest.disable_csrf_role' => 'ROLE_API',
            'fos_rest.serializer.serialize_null' => false,
            'fos_rest.exception.codes' => array(

            ),
            'fos_rest.exception.messages' => array(

            ),
            'fos_rest.converter.request_body.validation_errors_argument' => 'validationErrors',
            'fos_rest.mime_types' => array(

            ),
            'fos_rest.formats' => array(
                'json' => false,
            ),
            'fos_rest.force_redirects' => array(
                'html' => 302,
            ),
            'fos_rest.failed_validation' => 400,
            'fos_rest.empty_content' => 204,
            'fos_rest.serialize_null' => false,
            'fos_rest.default_engine' => 'twig',
            'fos_rest.normalizer.camel_keys.class' => 'FOS\\RestBundle\\Normalizer\\CamelKeysNormalizer',
            'fos_rest.decoder.json.class' => 'FOS\\RestBundle\\Decoder\\JsonDecoder',
            'fos_rest.decoder.jsontoform.class' => 'FOS\\RestBundle\\Decoder\\JsonToFormDecoder',
            'fos_rest.decoder.xml.class' => 'FOS\\RestBundle\\Decoder\\XmlDecoder',
            'fos_rest.decoder_provider.class' => 'FOS\\RestBundle\\Decoder\\ContainerDecoderProvider',
            'fos_rest.body_listener.class' => 'FOS\\RestBundle\\EventListener\\BodyListener',
            'fos_rest.throw_exception_on_unsupported_content_type' => false,
            'fos_rest.body_default_format' => NULL,
            'fos_rest.decoders' => array(
                'json' => 'fos_rest.decoder.json',
                'xml' => 'fos_rest.decoder.xml',
            ),
            'jms_serializer.metadata.file_locator.class' => 'Metadata\\Driver\\FileLocator',
            'jms_serializer.metadata.annotation_driver.class' => 'Mautic\\ApiBundle\\Serializer\\Driver\\AnnotationDriver',
            'jms_serializer.metadata.chain_driver.class' => 'Metadata\\Driver\\DriverChain',
            'jms_serializer.metadata.yaml_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\YamlDriver',
            'jms_serializer.metadata.xml_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\XmlDriver',
            'jms_serializer.metadata.php_driver.class' => 'Mautic\\ApiBundle\\Serializer\\Driver\\ApiMetadataDriver',
            'jms_serializer.metadata.doctrine_type_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\DoctrineTypeDriver',
            'jms_serializer.metadata.doctrine_phpcr_type_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\DoctrinePHPCRTypeDriver',
            'jms_serializer.metadata.lazy_loading_driver.class' => 'Metadata\\Driver\\LazyLoadingDriver',
            'jms_serializer.metadata.metadata_factory.class' => 'Metadata\\MetadataFactory',
            'jms_serializer.metadata.cache.file_cache.class' => 'Metadata\\Cache\\FileCache',
            'jms_serializer.event_dispatcher.class' => 'JMS\\Serializer\\EventDispatcher\\LazyEventDispatcher',
            'jms_serializer.serialized_name_annotation_strategy.class' => 'JMS\\Serializer\\Naming\\SerializedNameAnnotationStrategy',
            'jms_serializer.cache_naming_strategy.class' => 'JMS\\Serializer\\Naming\\CacheNamingStrategy',
            'jms_serializer.doctrine_object_constructor.class' => 'JMS\\Serializer\\Construction\\DoctrineObjectConstructor',
            'jms_serializer.unserialize_object_constructor.class' => 'JMS\\Serializer\\Construction\\UnserializeObjectConstructor',
            'jms_serializer.version_exclusion_strategy.class' => 'JMS\\Serializer\\Exclusion\\VersionExclusionStrategy',
            'jms_serializer.serializer.class' => 'JMS\\Serializer\\Serializer',
            'jms_serializer.twig_extension.class' => 'JMS\\Serializer\\Twig\\SerializerExtension',
            'jms_serializer.templating.helper.class' => 'JMS\\SerializerBundle\\Templating\\SerializerHelper',
            'jms_serializer.json_serialization_visitor.class' => 'JMS\\Serializer\\JsonSerializationVisitor',
            'jms_serializer.json_serialization_visitor.options' => 128,
            'jms_serializer.json_deserialization_visitor.class' => 'JMS\\Serializer\\JsonDeserializationVisitor',
            'jms_serializer.xml_serialization_visitor.class' => 'JMS\\Serializer\\XmlSerializationVisitor',
            'jms_serializer.xml_deserialization_visitor.class' => 'JMS\\Serializer\\XmlDeserializationVisitor',
            'jms_serializer.xml_deserialization_visitor.doctype_whitelist' => array(

            ),
            'jms_serializer.yaml_serialization_visitor.class' => 'JMS\\Serializer\\YamlSerializationVisitor',
            'jms_serializer.handler_registry.class' => 'JMS\\Serializer\\Handler\\LazyHandlerRegistry',
            'jms_serializer.datetime_handler.class' => 'JMS\\Serializer\\Handler\\DateHandler',
            'jms_serializer.array_collection_handler.class' => 'JMS\\Serializer\\Handler\\ArrayCollectionHandler',
            'jms_serializer.php_collection_handler.class' => 'JMS\\Serializer\\Handler\\PhpCollectionHandler',
            'jms_serializer.form_error_handler.class' => 'JMS\\Serializer\\Handler\\FormErrorHandler',
            'jms_serializer.constraint_violation_handler.class' => 'JMS\\Serializer\\Handler\\ConstraintViolationHandler',
            'jms_serializer.doctrine_proxy_subscriber.class' => 'JMS\\Serializer\\EventDispatcher\\Subscriber\\DoctrineProxySubscriber',
            'jms_serializer.stopwatch_subscriber.class' => 'JMS\\SerializerBundle\\Serializer\\StopwatchEventSubscriber',
            'oneup_uploader.chunks.manager.class' => 'Oneup\\UploaderBundle\\Uploader\\Chunk\\ChunkManager',
            'oneup_uploader.chunks_storage.gaufrette.class' => 'Oneup\\UploaderBundle\\Uploader\\Chunk\\Storage\\GaufretteStorage',
            'oneup_uploader.chunks_storage.flysystem.class' => 'Oneup\\UploaderBundle\\Uploader\\Chunk\\Storage\\FlysystemStorage',
            'oneup_uploader.chunks_storage.filesystem.class' => 'Oneup\\UploaderBundle\\Uploader\\Chunk\\Storage\\FilesystemStorage',
            'oneup_uploader.namer.uniqid.class' => 'Oneup\\UploaderBundle\\Uploader\\Naming\\UniqidNamer',
            'oneup_uploader.routing.loader.class' => 'Oneup\\UploaderBundle\\Routing\\RouteLoader',
            'oneup_uploader.storage.gaufrette.class' => 'Oneup\\UploaderBundle\\Uploader\\Storage\\GaufretteStorage',
            'oneup_uploader.storage.flysystem.class' => 'Oneup\\UploaderBundle\\Uploader\\Storage\\FlysystemStorage',
            'oneup_uploader.storage.filesystem.class' => 'Oneup\\UploaderBundle\\Uploader\\Storage\\FilesystemStorage',
            'oneup_uploader.orphanage.class' => 'Oneup\\UploaderBundle\\Uploader\\Storage\\FilesystemOrphanageStorage',
            'oneup_uploader.orphanage.manager.class' => 'Oneup\\UploaderBundle\\Uploader\\Orphanage\\OrphanageManager',
            'oneup_uploader.controller.fineuploader.class' => 'Oneup\\UploaderBundle\\Controller\\FineUploaderController',
            'oneup_uploader.controller.blueimp.class' => 'Oneup\\UploaderBundle\\Controller\\BlueimpController',
            'oneup_uploader.controller.uploadify.class' => 'Oneup\\UploaderBundle\\Controller\\UploadifyController',
            'oneup_uploader.controller.yui3.class' => 'Oneup\\UploaderBundle\\Controller\\YUI3Controller',
            'oneup_uploader.controller.fancyupload.class' => 'Oneup\\UploaderBundle\\Controller\\FancyUploadController',
            'oneup_uploader.controller.mooupload.class' => 'Oneup\\UploaderBundle\\Controller\\MooUploadController',
            'oneup_uploader.controller.plupload.class' => 'Oneup\\UploaderBundle\\Controller\\PluploadController',
            'oneup_uploader.controller.dropzone.class' => 'Mautic\\AssetBundle\\Controller\\UploadController',
            'oneup_uploader.error_handler.noop.class' => 'Oneup\\UploaderBundle\\Uploader\\ErrorHandler\\NoopErrorHandler',
            'oneup_uploader.error_handler.blueimp.class' => 'Oneup\\UploaderBundle\\Uploader\\ErrorHandler\\BlueimpErrorHandler',
            'oneup_uploader.error_handler.dropzone.class' => 'Oneup\\UploaderBundle\\Uploader\\ErrorHandler\\DropzoneErrorHandler',
            'oneup_uploader.chunks' => array(
                'maxage' => 604800,
                'storage' => array(
                    'type' => 'filesystem',
                    'filesystem' => NULL,
                    'directory' => (__DIR__.'/uploader/chunks'),
                    'stream_wrapper' => NULL,
                    'sync_buffer_size' => '100K',
                    'prefix' => 'chunks',
                ),
                'load_distribution' => true,
            ),
            'oneup_uploader.orphanage' => array(
                'maxage' => 604800,
                'directory' => (__DIR__.'/uploader/orphanage'),
            ),
            'oneup_uploader.config.asset' => array(
                'error_handler' => 'mautic.asset.upload.error.handler',
                'frontend' => 'custom',
                'custom_frontend' => array(
                    'class' => 'Mautic\\AssetBundle\\Controller\\UploadController',
                    'name' => 'mautic',
                ),
                'storage' => array(
                    'directory' => ($this->targetDirs[2].'/../media/files'),
                    'service' => NULL,
                    'type' => 'filesystem',
                    'filesystem' => NULL,
                    'stream_wrapper' => NULL,
                    'sync_buffer_size' => '100K',
                ),
                'route_prefix' => '',
                'allowed_mimetypes' => array(

                ),
                'disallowed_mimetypes' => array(

                ),
                'max_size' => 9223372036854775807,
                'use_orphanage' => false,
                'enable_progress' => false,
                'enable_cancelation' => false,
                'namer' => 'oneup_uploader.namer.uniqid',
                'root_folder' => false,
            ),
            'oneup_uploader.config' => array(
                'mappings' => array(
                    'asset' => array(
                        'error_handler' => 'mautic.asset.upload.error.handler',
                        'frontend' => 'custom',
                        'custom_frontend' => array(
                            'class' => 'Mautic\\AssetBundle\\Controller\\UploadController',
                            'name' => 'mautic',
                        ),
                        'storage' => array(
                            'directory' => ($this->targetDirs[2].'/../media/files'),
                            'service' => NULL,
                            'type' => 'filesystem',
                            'filesystem' => NULL,
                            'stream_wrapper' => NULL,
                            'sync_buffer_size' => '100K',
                        ),
                        'route_prefix' => '',
                        'allowed_mimetypes' => array(

                        ),
                        'disallowed_mimetypes' => array(

                        ),
                        'max_size' => 9223372036854775807,
                        'use_orphanage' => false,
                        'enable_progress' => false,
                        'enable_cancelation' => false,
                        'namer' => 'oneup_uploader.namer.uniqid',
                        'root_folder' => false,
                    ),
                ),
                'chunks' => array(
                    'maxage' => 604800,
                    'storage' => array(
                        'type' => 'filesystem',
                        'filesystem' => NULL,
                        'directory' => (__DIR__.'/uploader/chunks'),
                        'stream_wrapper' => NULL,
                        'sync_buffer_size' => '100K',
                        'prefix' => 'chunks',
                    ),
                    'load_distribution' => true,
                ),
                'orphanage' => array(
                    'maxage' => 604800,
                    'directory' => (__DIR__.'/uploader/orphanage'),
                ),
                'twig' => true,
            ),
            'oneup_uploader.controllers' => array(
                'asset' => array(
                    0 => 'oneup_uploader.controller.mautic',
                    1 => array(
                        'enable_progress' => false,
                        'enable_cancelation' => false,
                        'route_prefix' => '',
                    ),
                ),
            ),
            'oneup_uploader.maxsize' => array(
                'asset' => 8388608,
            ),
            'twig.class' => 'Twig_Environment',
            'twig.loader.filesystem.class' => 'Symfony\\Bundle\\TwigBundle\\Loader\\FilesystemLoader',
            'twig.loader.chain.class' => 'Twig_Loader_Chain',
            'templating.engine.twig.class' => 'Symfony\\Bundle\\TwigBundle\\TwigEngine',
            'twig.cache_warmer.class' => 'Symfony\\Bundle\\TwigBundle\\CacheWarmer\\TemplateCacheCacheWarmer',
            'twig.extension.trans.class' => 'Symfony\\Bridge\\Twig\\Extension\\TranslationExtension',
            'twig.extension.actions.class' => 'Symfony\\Bundle\\TwigBundle\\Extension\\ActionsExtension',
            'twig.extension.code.class' => 'Symfony\\Bridge\\Twig\\Extension\\CodeExtension',
            'twig.extension.routing.class' => 'Symfony\\Bridge\\Twig\\Extension\\RoutingExtension',
            'twig.extension.yaml.class' => 'Symfony\\Bridge\\Twig\\Extension\\YamlExtension',
            'twig.extension.form.class' => 'Symfony\\Bridge\\Twig\\Extension\\FormExtension',
            'twig.extension.httpkernel.class' => 'Symfony\\Bridge\\Twig\\Extension\\HttpKernelExtension',
            'twig.extension.debug.stopwatch.class' => 'Symfony\\Bridge\\Twig\\Extension\\StopwatchExtension',
            'twig.extension.expression.class' => 'Symfony\\Bridge\\Twig\\Extension\\ExpressionExtension',
            'twig.form.engine.class' => 'Symfony\\Bridge\\Twig\\Form\\TwigRendererEngine',
            'twig.form.renderer.class' => 'Symfony\\Bridge\\Twig\\Form\\TwigRenderer',
            'twig.translation.extractor.class' => 'Symfony\\Bridge\\Twig\\Translation\\TwigExtractor',
            'twig.exception_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\ExceptionListener',
            'twig.controller.preview_error.class' => 'Symfony\\Bundle\\TwigBundle\\Controller\\PreviewErrorController',
            'twig.exception_listener.controller' => 'twig.controller.exception:showAction',
            'twig.form.resources' => array(
                0 => 'form_div_layout.html.twig',
            ),
            'debril.parser.rss.class' => 'Debril\\RssAtomBundle\\Protocol\\Parser\\RssParser',
            'debril.parser.xml.class' => 'Debril\\RssAtomBundle\\Protocol\\Parser\\XmlParser',
            'debril.parser.rdf.class' => 'Debril\\RssAtomBundle\\Protocol\\Parser\\RdfParser',
            'debril.parser.atom.class' => 'Debril\\RssAtomBundle\\Protocol\\Parser\\AtomParser',
            'debril.parser.factory.class' => 'Debril\\RssAtomBundle\\Protocol\\Parser\\Factory',
            'debril.parser.feed.class' => 'Debril\\RssAtomBundle\\Protocol\\Parser\\FeedContent',
            'debril.parser.item.class' => 'Debril\\RssAtomBundle\\Protocol\\Parser\\Item',
            'debril.reader.class' => 'Debril\\RssAtomBundle\\Protocol\\FeedReader',
            'debril.formatter.rss.class' => 'Debril\\RssAtomBundle\\Protocol\\Formatter\\FeedRssFormatter',
            'debril.formatter.atom.class' => 'Debril\\RssAtomBundle\\Protocol\\Formatter\\FeedAtomFormatter',
            'debril.http.curl.class' => 'Debril\\RssAtomBundle\\Driver\\HttpCurlDriver',
            'debril.http.guzzle_bridge.class' => 'Debril\\RssAtomBundle\\Driver\\GuzzleBridgeDriver',
            'debril.file.class' => 'Debril\\RssAtomBundle\\Driver\\FileDriver',
            'debril.provider.mock.class' => 'Debril\\RssAtomBundle\\Provider\\MockProvider',
            'debril.provider.default.class' => 'Debril\\RssAtomBundle\\Provider\\MockProvider',
            'debril.provider.doctrine.class' => 'Debril\\RssAtomBundle\\Provider\\DoctrineFeedContentProvider',
            'debril_rss_atom.date_formats' => array(
                0 => 'Y-m-d\\TH:i:sP',
                1 => 'D, d M Y H:i:s O',
                2 => 'Y-m-d\\TH:i:sP',
                3 => 'Y-m-d\\TH:i:s.uP',
                4 => 'Y-m-d',
                5 => 'd/m/Y',
                6 => 'd M Y H:i:s P',
                7 => 'D, d M Y H:i O',
                8 => 'D, d M Y H:i:s O',
                9 => 'D M d Y H:i:s e',
            ),
            'debril_rss_atom.curlopt' => array(

            ),
            'debril_rss_atom.private_feeds' => false,
            'lightsaml.own.entity_id' => 'http://nautic.dev',
            'lightsaml.route.login_check' => 'lightsaml_sp.login_check',
            'lightsaml.store.request_session_prefix' => 'main',
            'lightsaml.store.request_session_sufix' => 'saml_request_state_',
            'lightsaml.store.sso_state_session_key' => 'samlsso',
            'lightsaml_sp.route.discovery' => 'lightsaml_sp.discovery',
            'web_profiler.controller.profiler.class' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ProfilerController',
            'web_profiler.controller.router.class' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\RouterController',
            'web_profiler.controller.exception.class' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ExceptionController',
            'twig.extension.webprofiler.class' => 'Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension',
            'web_profiler.debug_toolbar.position' => 'bottom',
            'web_profiler.debug_toolbar.class' => 'Symfony\\Bundle\\WebProfilerBundle\\EventListener\\WebDebugToolbarListener',
            'web_profiler.debug_toolbar.intercept_redirects' => false,
            'web_profiler.debug_toolbar.mode' => 2,
            'data_collector.templates' => array(
                'data_collector.request' => array(
                    0 => 'request',
                    1 => '@WebProfiler/Collector/request.html.twig',
                ),
                'data_collector.time' => array(
                    0 => 'time',
                    1 => '@WebProfiler/Collector/time.html.twig',
                ),
                'data_collector.memory' => array(
                    0 => 'memory',
                    1 => '@WebProfiler/Collector/memory.html.twig',
                ),
                'data_collector.ajax' => array(
                    0 => 'ajax',
                    1 => '@WebProfiler/Collector/ajax.html.twig',
                ),
                'data_collector.form' => array(
                    0 => 'form',
                    1 => '@WebProfiler/Collector/form.html.twig',
                ),
                'data_collector.exception' => array(
                    0 => 'exception',
                    1 => '@WebProfiler/Collector/exception.html.twig',
                ),
                'data_collector.logger' => array(
                    0 => 'logger',
                    1 => '@WebProfiler/Collector/logger.html.twig',
                ),
                'data_collector.events' => array(
                    0 => 'events',
                    1 => '@WebProfiler/Collector/events.html.twig',
                ),
                'data_collector.router' => array(
                    0 => 'router',
                    1 => '@WebProfiler/Collector/router.html.twig',
                ),
                'data_collector.translation' => array(
                    0 => 'translation',
                    1 => '@WebProfiler/Collector/translation.html.twig',
                ),
                'data_collector.security' => array(
                    0 => 'security',
                    1 => '@Security/Collector/security.html.twig',
                ),
                'data_collector.twig' => array(
                    0 => 'twig',
                    1 => '@WebProfiler/Collector/twig.html.twig',
                ),
                'data_collector.doctrine' => array(
                    0 => 'db',
                    1 => '@Doctrine/Collector/db.html.twig',
                ),
                'swiftmailer.data_collector' => array(
                    0 => 'swiftmailer',
                    1 => '@Swiftmailer/Collector/swiftmailer.html.twig',
                ),
                'data_collector.config' => array(
                    0 => 'config',
                    1 => '@WebProfiler/Collector/config.html.twig',
                ),
            ),
            'console.command.ids' => array(
                0 => 'sensio_distribution.security_checker.command',
            ),
        );
    }
}
